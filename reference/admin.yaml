openapi: 3.0.3
info:
  version: '1.0'
  title: Admin APIs
  description: >
    These APIs are generally used to integrate Fyle with accounting or HRMS
    systems. 
  contact:
    name: Platform Beta
    email: support@fylehq.com
servers:
  - url: https://us1.fylehq.com/platform/v1
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1
    description: India Region Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '202':
      type: object
      properties:
        message:
          type: string
          description: >
            Request has been accepted and is being processed, Please try again
            in sometime.
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is invalid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    '404':
      type: object
      properties:
        message:
          enum:
            - Resource not found
          type: string
          description: >
            This error means the requested resource was not found or the
            requester doesn't have sufficient access.
    '500':
      type: object
      properties:
        message:
          type: string
          description: >
            API server hit an internal error and could not process request. This
            is likely a bug.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    id_integer:
      type: integer
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was created in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was updated in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-11T13:14:55.201598+00:00'
    code:
      type: string
      nullable: true
      maxLength: 255
      description: >
        This represents a code that is typically used for syncing with other
        systems.
      example: C1234
    description:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents the description of the resource.
      example: Win the trophy
    is_enabled:
      type: boolean
      description: >
        This indicates if the resource is enabled for use within the
        organisation.
      default: true
      example: true
    restricted_spender_user_ids:
      type: array
      nullable: true
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id provided by Fyle to identify an object.
        example: sdfd2391
      example:
        - uswoirwlwwg
        - uswlgwkgw42
      description: |
        List of IDs of users who can access this object.
    approver_user_ids:
      type: array
      nullable: false
      maxItems: 2
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id provided by Fyle to identify an object.
        example: sdfd2391
      example:
        - uswoirwlwwg
        - uswlgwkgw42
      description: |
        List of IDs of users who are approvers of the project.
    id_string:
      type: string
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address of the employee.

        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
        822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    admin_approver_project_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
        approver_user_ids:
          $ref: '#/components/schemas/approver_user_ids'
        approver_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are approvers for this project.
    project_in:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          nullable: true
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
        approver_user_ids:
          $ref: '#/components/schemas/approver_user_ids'
    bulk_error:
      type: object
      properties:
        error:
          type: string
          example: BulkError
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            type: object
            properties:
              row:
                type: integer
                description: |
                  This holds the info of which row contains bad data.
              key:
                oneOf:
                  - type: string
                  - type: integer
                description: |
                  This helps in identifying the error by unique key.
              message:
                type: string
                description: |
                  This explains what the error is in `human readable` text
    admin_cost_center_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
    cost_center_in:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
        org_id:
          $ref: '#/components/schemas/org_id'
    allow_users:
      type: string
      nullable: false
      description: >
        Set who can access the object.

        - `ALL` indicates the object can be accessible to all users in the org.

        - `NONE` indicates the object cannot be accessible to any user in the
        org.

        - `UNRESTRICTED` indicates the object will be be accessible to all users
        in the org who are not restricted to

        specific objects of this resource.
      enum:
        - ALL
        - NONE
        - UNRESTRICTED
      example: UNRESTRICTED
    cost_center_restrict_in:
      type: object
      required:
        - id
        - allow_users
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        allow_users:
          $ref: '#/components/schemas/allow_users'
    category_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces. In case if no sub_category is present it is same as name of
            the category.
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of project ids for which this category can be used. If
            project_ids is null, then this category can be used for any project.
    category_in:
      type: object
      required:
        - name
        - is_enabled
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of project ids for which this category can be used. If
            project_ids is null, then this category can be used for any project
    category_ids:
      type: array
      description: |
        List of category ids.
      items:
        type: integer
        example: 16570
    expense_field_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        seq:
          type: integer
          example: 1
        field_name:
          type: string
          description: |
            This specifies the name of the expense field.
          example: Vendor description
        column_name:
          type: string
          description: >
            This specifies the name of column to which this expense field mapped
            to.
          example: Purpose
        type:
          type: string
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        options:
          type: array
          items:
            type: string
          description: >
            This specifies the option values of the expense field in case on
            SELECT or MULTI_SELECT type.
          example:
            - Chai
            - Coffee
        default_value:
          type: string
          nullable: true
          description: |
            This specifies the default value of the expense fields.
          example: Coffee
        placeholder:
          type: string
          nullable: true
          description: |
            This specifies the placeholder of the expense field.
          example: Enter vendor
        category_ids:
          $ref: '#/components/schemas/category_ids'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        is_custom:
          type: boolean
          description: |
            This field indicates if the expense field is custom or not.
          example: false
        is_mandatory:
          type: boolean
          description: |
            This specifies if the expense field is mandatory or not.
          example: true
        code:
          $ref: '#/components/schemas/code'
    expense_field_in:
      type: object
      additionalProperties: false
      required:
        - field_name
        - type
        - is_mandatory
        - is_enabled
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        field_name:
          type: string
          description: |
            This specifies the name of the expense field.
          example: Vendor description
        column_name:
          type: string
          enum:
            - purpose
            - txn_dt
            - vendor_id
            - cost_center_id
            - distance
            - distance_unit
            - location1
            - location2
            - from_dt
            - to_dt
            - per_diem_num_days
            - flight_journey_travel_class
            - flight_return_travel_class
            - train_travel_class
            - bus_travel_class
          description: >
            This specifies the name of column to which this expense field mapped
            to.
          example: purpose
        type:
          type: string
          enum:
            - TEXT
            - NUMBER
            - SELECT
            - BOOLEAN
            - MULTI_SELECT
            - LOCATION
            - USER_LIST
            - DATE
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        options:
          type: array
          items:
            type: string
          nullable: true
          description: >
            This specifies the option values of the expense field in case on
            SELECT or MULTI_SELECT type. Sets to empty array by default if null
            is passed.
          example:
            - Chai
            - Coffee
        default_value:
          type: string
          description: |
            This specifies the default value of the expense fields.
          example: Coffee
          nullable: true
        placeholder:
          type: string
          nullable: true
          description: >
            This specifies the placeholder of the expense field. Sets to empty
            string by default if null is passed.
          example: Enter vendor
        category_ids:
          type: array
          nullable: true
          description: >-
            List of category ids for which this expense field is applicable. If
            null is passed, the default value is all category ids of the org as
            array.
          items:
            type: integer
            example: 16570
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        is_custom:
          type: boolean
          description: |
            This field indicates if the expense field is custom or not.
          example: false
        is_mandatory:
          type: boolean
          description: |
            This specifies if the expense field is mandatory or not.
          example: true
        code:
          $ref: '#/components/schemas/code'
    name:
      type: string
      maxLength: 255
      description: >
        This represents the name of the resource. This should be unique in an
        organization
      example: foo123
    per_diem_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        rate:
          type: number
          example: 10
          description: Amount per night
    per_diem_rate_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - name
        - currency
        - rate
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        rate:
          type: number
          example: 10
          description: Amount per night
    department_head_user_ids:
      type: array
      nullable: false
      maxItems: 1
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id provided by Fyle to identify an object.
        example: sdfd2391
      example:
        - uswoirwlwwg
      description: |
        List of IDs of users who are head of the department.
    department_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        department_head_user_ids:
          $ref: '#/components/schemas/department_head_user_ids'
        department_head_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are head of the department.
        display_name:
          type: string
          example: Sales / Outbound Sales
          description: >
            This is a combination of name and sub_department separated by a /
            and spaces. In case if no sub_department is present it is same as
            name of the department.
        doc_url:
          type: string
          nullable: true
          description: |
            Link to an external document that would be shared with employees
          example: https://fyle.stoplight.io/
    department_in:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        department_head_user_ids:
          $ref: '#/components/schemas/department_head_user_ids'
        doc_url:
          type: string
          nullable: true
          description: |
            Link to an external document that would be shared with employees
          example: https://fyle.stoplight.io/
    mileage_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        unit:
          type: string
          enum:
            - KM
            - MILES
        vehicle_type:
          type: string
          example: Audi
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
        slab_rates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                nullable: true
              limit:
                type: number
                nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    mileage_rate_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        unit:
          type: string
          enum:
            - KM
            - MILES
        vehicle_type:
          type: string
          example: Audi
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
        slab_rates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                nullable: true
              limit:
                type: number
                nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    level_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          nullable: true
          description: >
            Band in which this level belongs to, you can group multiple levels
            into a single band.
          example: Associate
        code:
          $ref: '#/components/schemas/code'
        description:
          type: string
          nullable: true
          description: |
            Description of the level
          example: Entry level position
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - name
        - band
        - code
        - description
        - is_enabled
    level_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          nullable: true
          description: >
            Band in which this level belongs to, you can group multiple levels
            into a single band.
          example: Associate
        code:
          $ref: '#/components/schemas/code'
        description:
          type: string
          nullable: true
          description: |
            Description of the level
          example: Entry level position
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
      required:
        - name
        - is_enabled
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    department_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        display_name:
          type: string
          example: Sales / Outbound Sales
          description: >
            This is a combination of name and sub_department separated by a /
            and spaces. In case if no sub_department is present it is same as
            name of the department.
    timestamptz_utc:
      type: string
      format: date-time
      nullable: true
      description: >-
        Date-time in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    level_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          nullable: true
          description: >
            Band in which this level belongs to, you can group multiple levels
            into a single band.
          example: Associate
      required:
        - id
        - name
        - band
    role:
      type: string
      enum:
        - FYLER
        - APPROVER
        - TRAVEL_ADMIN
        - VERIFIER
        - PAYMENT_PROCESSOR
        - FINANCE
        - ADMIN
        - TRAVEL_AGENT
        - OWNER
        - AUDITOR
        - HOD
        - HOP
      description: |
        Roles are assigned by Admin.
      example: FYLER
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Fast and Furious / Formula One
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
    cost_center_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
    per_diem_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
    mileage_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          example: Audi
        code:
          $ref: '#/components/schemas/code'
    bank_ifsc:
      type: string
      example: SBIN0007587
      maxLength: 11
      description: |
        IFSC code of the bank account of the Employee
      pattern: ^[A-Z]{4}0[A-Z0-9]{6}$
    phone_number:
      type: string
      example: '+12131234567'
      maxLength: 16
      description: >
        phone number is represented by +CC MMMMMM... where CC is the country
        code, and is one to three digits, and MMMMMM... is the area code (where
        applicable) and subscriber number Max 12 digits
      pattern: /^(\+\d{1,3}[- ]?)?\d{10}$/
    employee_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/fk_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        department_id:
          $ref: '#/components/schemas/fk_string'
        department:
          $ref: '#/components/schemas/department_out_embed'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        joined_at:
          $ref: '#/components/schemas/timestamptz_utc'
        level_id:
          $ref: '#/components/schemas/fk_string'
        level:
          $ref: '#/components/schemas/level_out_embed'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        special_email:
          type: string
          maxLength: 127
          example: receipts+admin1_mb4w@fyle.ai
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of project ids that this employee is allowed to access. If
            null, then there are no restrictions
        projects:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/project_out_embed'
          description: >
            List of projects that this employee is allowed to access. If null,
            then there are no restrictions
        cost_center_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of cost center ids that this employee is allowed to access. If
            null, then there are no restrictions
        cost_centers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/cost_center_out_embed'
          description: >
            List of cost_ enters that this employee is allowed to access. If
            null, then there are no restrictions
        per_diem_rate_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of per diem rate ids that this employee is allowed to access.
            If null, then there are no restrictions
        per_diem_rates:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/per_diem_rate_out_embed'
          description: >
            List of per diem rates that this employee is allowed to access. If
            null, then there are no restrictions
        mileage_rate_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of mileage rate ids that this employee is allowed to access. If
            null, then there are no restrictions
        mileage_rates:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/mileage_rate_out_embed'
          description: >
            List of mileage rates that this employee is allowed to access. If
            null, then there are no restrictions
        approver_user_ids:
          type: array
          maxLength: 3
          nullable: true
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - uswoirwlwwg
            - uswlgwkgw42
          description: |
            List of IDs of users who are approvers for this employee. Maximum 3.
        approver_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are approvers for this employee.
        has_accepted_invite:
          type: boolean
          description: >
            This boolean field represents whether the employee has accepted the
            current org's invite by veryfying his/her email or not.
          default: true
          example: true
        branch_account:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example: null
          description: |
            The Account number of the bank account of the Employee.
        branch_ifsc:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/bank_ifsc'
          example: null
          description: >
            IFSC code of the bank account of the Employee. Must be a 11 digit
            alphanumeric code.
        mobile:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
    name_nullable:
      type: string
      maxLength: 255
      nullable: true
      description: >
        This represents the name of the resource. This should be unique in an
        organization
      example: foo123
    timestamptz_pst:
      type: string
      format: date-time
      nullable: true
      description: >-
        Date-time in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T01:18:19.292-08:00'
    invitation_in:
      type: object
      additionalProperties: false
      required:
        - user_email
      properties:
        user_email:
          $ref: '#/components/schemas/email'
        user_full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters. 

            Is required when creating a new employee
          example: John Doe
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        department_name:
          $ref: '#/components/schemas/name_nullable'
        sub_department:
          $ref: '#/components/schemas/name_nullable'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        joined_at:
          $ref: '#/components/schemas/timestamptz_pst'
        level:
          $ref: '#/components/schemas/name_nullable'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        approver_emails:
          type: array
          maxLength: 3
          nullable: true
          items:
            $ref: '#/components/schemas/email'
          example:
            - approver1@example.com
            - approver2@example.com
          description: |
            List of emails of employees that are approvers for this employee.
        project_names:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example:
            - Formula 1
            - Dream work
          description: >
            List of project names that this employee is allowed to access. If
            null, then there are no restrictions
        cost_center_names:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example:
            - Sales
          description: >
            List of cost center names that this employee is allowed to access.
            If null, then there are no restrictions
        per_diem_rate_names:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example:
            - TA - USD
          description: >
            List of per diem rate names that this employee is allowed to access.
            If null, then there are no restrictions
        vehicle_types:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example:
            - two_wheeler
            - four_wheeler_1
          description: >
            List of mileage rate's vehicle types that this employee is allowed
            to access. If null, then there are no restrictions
        branch_account:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example: null
          description: |
            The Account number of the bank account of the Employee.
        branch_ifsc:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/bank_ifsc'
          example: null
          description: >
            IFSC code of the bank account of the Employee. Must be a 11 digit
            alphanumeric code.
        mobile:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
    file_in:
      type: object
      required:
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
    admin_file_in:
      allOf:
        - $ref: '#/components/schemas/file_in'
        - type: object
          required:
            - user_id
          properties:
            user_id:
              allOf:
                - $ref: '#/components/schemas/fk_string'
    file_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: text/csv
    file_generate_urls_action_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    file_generate_urls_action_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          nullable: true
          type: string
          description: |
            Link to download this file
    schedule_config:
      type: object
      nullable: false
      properties:
        type:
          nullable: false
          type: string
          example: interval
          enum:
            - interval
            - date
            - cron
        when:
          nullable: false
          oneOf:
            - type: object
              additionalProperties: false
              properties:
                weeks:
                  type: number
                  example: 2
                days:
                  type: number
                  example: 12
                hours:
                  type: number
                  example: 6
                minutes:
                  type: number
                  example: 30
                seconds:
                  type: number
                  example: 30
                end_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                start_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                timezone:
                  nullable: true
                  type: string
                  example: UTC
                jitter:
                  nullable: true
                  type: number
                  example: 20
            - type: object
              additionalProperties: false
              properties:
                year:
                  type: string
                  example: 2022
                month:
                  type: string
                  example: 10
                day:
                  type: string
                  example: last, 15
                week:
                  type: string
                  example: 2
                day_of_week:
                  type: string
                  example: mon
                hour:
                  type: string
                  example: 23
                minute:
                  type: string
                  example: 23
                second:
                  type: string
                  example: 23
                end_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                start_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
            - type: object
              additionalProperties: false
              properties:
                run_date:
                  nullable: true
                  type: string
                  example: '2021-05-12T10:16:50.410Z'
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    automate_report_submission_out:
      type: object
      required:
        - id
        - description
        - schedule_config
        - org_id
        - created_at
        - updated_at
        - creator_user_id
        - creator_user
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        description:
          type: string
          description: |
            A human readable identifier for the automate report submission
          example: >-
            Expense Reports will be submitted automatically for approval on the
            Last Day, 7th and 24th of every month.
        schedule_config:
          $ref: '#/components/schemas/schedule_config'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        creator_user:
          $ref: '#/components/schemas/user_out_embed'
    automate_report_submission_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        description:
          type: string
          description: |
            A human readable identifier for the automate report submission
          example: >-
            Expense Reports will be submitted automatically for approval on the
            Last Day, 7th and 24th of every month.
        schedule_config:
          $ref: '#/components/schemas/schedule_config'
    delete_automate_report_submission_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    accounting_export_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: ae2froib22i0
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        file_ids:
          type: array
          minItems: 1
          maxItems: 1
          description: List of file ids which holds reference to export files
          readOnly: true
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - fi123819sa
        exported_at:
          $ref: '#/components/schemas/timestamptz_pst'
        name:
          type: string
          description: This represents name of the resource.
          example: Accounting exports test
        description:
          $ref: '#/components/schemas/description'
        url:
          type: string
          nullable: true
          maxLength: 255
          description: An optional URL where the exported data could be accessed
        client_id:
          type: string
          nullable: true
          maxLength: 255
        org_id:
          $ref: '#/components/schemas/org_id'
    accounting_export_in:
      type: object
      required:
        - file_ids
        - exported_at
        - name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: ae2froib22i0
        file_ids:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - fi123819sa
          description: List of file ids which holds reference to export files
        exported_at:
          $ref: '#/components/schemas/timestamptz_utc'
        name:
          type: string
          description: This represents name of the resource.
          example: Accounting exports test
        description:
          $ref: '#/components/schemas/description'
        url:
          type: string
          nullable: true
          maxLength: 255
          description: An optional URL where the exported data could be accessed
    accounting_export_lineitem_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        object_id:
          $ref: '#/components/schemas/fk_string'
        object_type:
          type: string
          enum:
            - ADVANCE_REQUEST
            - ADVANCE
            - BALANCE_TRANSFER
            - REFUND
            - REIMBURSEMENT
            - REPORT
            - EXPENSE
            - CCC_EXPENSE
            - SETTLEMENT
        reference:
          type: string
          nullable: true
          maxLength: 255
          description: >
            Optional metadata about the Export operation. For example, newly
            created Accounting Entry numbers in Quickbooks.
        accounting_export_id:
          $ref: '#/components/schemas/fk_string'
        org_id:
          $ref: '#/components/schemas/org_id'
    accounting_export_lineitem_in:
      type: object
      required:
        - object_id
        - object_type
        - accounting_export_id
        - reference
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        object_id:
          $ref: '#/components/schemas/fk_string'
        object_type:
          type: string
          enum:
            - ADVANCE_REQUEST
            - REIMBURSEMENT
            - REPORT
            - EXPENSE
            - SETTLEMENT
        reference:
          type: string
          nullable: true
          maxLength: 255
          description: >
            Optional metadata about the Export operation. For example, newly
            created Accounting Entry numbers in Quickbooks.
        accounting_export_id:
          $ref: '#/components/schemas/fk_string'
    currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: ([A-Z]{3})
    foreign_currency:
      type: string
      nullable: true
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 3768
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    category_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          nullable: true
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces. In case if no sub_category is present it is same as name of
            the category.
    account_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
    report_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - last_approved_at
        - last_submitted_at
        - seq_num
        - title
        - state
        - settlement_id
        - last_paid_at
        - reimbursement_id
        - reimbursement_seq_num
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpvgnwlgw34
        last_approved_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
        last_submitted_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        title:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        settlement_id:
          type: string
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Settlement.
        last_paid_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
        reimbursement_id:
          type: string
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Reimbursement.
          example: reimntGt9ju6qP
        reimbursement_seq_num:
          type: string
          nullable: true
          description: >
            A unique, organization wide identifier for a particular
            reimbursement.<br>

            This id is always prefixed with `P/`.
          example: P/2020/11/29
    file_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: figwiwpjww
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: application/pdf
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
    employee_id:
      type: string
      maxLength: 255
      description: >
        This id provided by Fyle to uniquely identify an employee within an
        organization.

        This id is always prefixed with `ou`.
      example: outGt9ju6qP
    department_id:
      type: string
      maxLength: 255
      nullable: true
      example: dept9in4oIHpdR
    employee_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
    card_number:
      type: string
      description: |
        Specifies the masked number of the card.
        Add only masked card-numbers, last four digits of the card.
      example: xxxx-4543
    matched_corporate_card_transaction_out_embed:
      type: object
      required:
        - id
        - corporate_card_id
        - corporate_card_number
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card_number:
          $ref: '#/components/schemas/card_number'
    missing_mandatory_fields:
      type: object
      nullable: false
      properties:
        expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
        amount:
          type: boolean
          nullable: false
          description: >
            This field shows whether the amount field is present in the expense
            or not 
        currency:
          type: boolean
          nullable: false
          description: >
            This field shows whether the currency field is present in the
            expense or not 
      description: >
        This object contains all the fields which are mandatory bu tare missing
        in the expense.
    activity_details:
      type: object
      nullable: true
      properties:
        unique_meetings:
          type: number
          nullable: false
          example: 21
        total_meetings:
          type: number
          nullable: false
          example: 70
    extracted_data:
      type: object
      nullable: true
      properties:
        amount:
          type: number
          nullable: true
          example: 21
        vendor_name:
          type: string
          nullable: true
          example: Uber
        currency:
          type: string
          nullable: true
          example: USD
        category:
          type: string
          nullable: true
          example: Taxi
        date:
          type: string
          nullable: true
          example: '2020-07-20'
    expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - user_id
        - user
        - org_id
        - created_at
        - updated_at
        - spent_at
        - source
        - merchant
        - currency
        - amount
        - claim_amount
        - policy_amount
        - admin_amount
        - foreign_currency
        - foreign_amount
        - purpose
        - cost_center_id
        - cost_center
        - category_id
        - category
        - project_id
        - project
        - source_account_id
        - source_account
        - tax_amount
        - tax_group_id
        - is_billable
        - is_reimbursable
        - distance
        - distance_unit
        - mileage_calculated_distance
        - mileage_calculated_amount
        - mileage_rate_id
        - mileage_rate
        - mileage_is_round_trip
        - per_diem_rate_id
        - per_diem_rate
        - per_diem_num_days
        - started_at
        - ended_at
        - travel_classes
        - hotel_is_breakfast_provided
        - locations
        - custom_fields
        - code
        - state
        - state_display_name
        - seq_num
        - report_id
        - added_to_report_at
        - report
        - is_verified
        - last_verified_at
        - is_receipt_mandatory
        - is_exported
        - last_exported_at
        - file_ids
        - files
        - employee
        - is_corporate_card_transaction_auto_matched
        - matched_corporate_card_transaction_ids
        - matched_corporate_card_transactions
        - last_settled_at
        - missing_mandatory_fields
        - activity_details
        - creator_user_id
        - extracted_data
        - is_manually_flagged
        - is_policy_flagged
        - split_group_id
        - is_physical_bill_submitted
        - physical_bill_submitted_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        source:
          type: string
          description: >
            The name of the client app which is creating the expense.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: SLACK_APP
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          type: number
          nullable: true
          description: >
            The amount for which the expense was/will-be fyled.

            The amount will be in the currency that the organization's home
            currency.<br>


            Note that, this field is calculated from admin_amount,
            policy_amount, claim_amount.


            if admin_amount is present then this value will be same
            admin_amount.

            if policy_amount is present then this value will be same
            policy_amount.

            else this should be same as claim_amount.
          example: 1500
        claim_amount:
          type: number
          nullable: true
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        policy_amount:
          type: number
          nullable: true
          description: |
            The expense amount set by policy.
          example: 1500
        admin_amount:
          type: number
          nullable: true
          description: |
            The expense amount which is modified by admin or approver.
            This could be null if admin or approver has not edited your expense.
          example: null
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        cost_center:
          $ref: '#/components/schemas/cost_center_out_embed'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        category:
          $ref: '#/components/schemas/category_out_embed'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        project:
          $ref: '#/components/schemas/project_out_embed'
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        source_account:
          $ref: '#/components/schemas/account_out_embed'
        tax_amount:
          type: number
          nullable: true
          description: Tax amount as setup by your organisation.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          type: boolean
          nullable: true
          example: true
          description: This fields marks whether a given expense is billable a not.
        is_reimbursable:
          type: boolean
          description: This fields marks whether a given expense is reimbursable a not.
          example: true
        distance:
          type: number
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          type: string
          nullable: true
          description: Unit of distance travelled.
          enum:
            - KM
            - MILES
            - null
          example: MILES
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance computed by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount computed by Fyle in mileage expenses.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 9080
        mileage_rate:
          $ref: '#/components/schemas/mileage_rate_out_embed'
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
        per_diem_rate:
          $ref: '#/components/schemas/per_diem_rate_out_embed'
        per_diem_num_days:
          type: integer
          nullable: true
          description: >
            Specific to per diem related expenses, number of days ofr which per
            diem claim is made.
          example: 2
        started_at:
          $ref: '#/components/schemas/timestamptz_utc'
        ended_at:
          $ref: '#/components/schemas/timestamptz_utc'
        travel_classes:
          description: >
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi`
            category.

            index 0 holds onward journey class, index 1 holds return journey
            travel class.
          type: array
          minItems: 0
          maxItems: 2
          items:
            type: string
          example:
            - ECONOMY
            - BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        locations:
          description: >
            This field will be present for travel related categories.

            For travel between Place A to Place B, this array will contain two
            items, From location at array index 0 and To location at array index
            1.

            For travel between Place A to Place c and stopping at Place B, this
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/location'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        state_display_name:
          type: string
          example: Sent Back
          description: readable state name
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report.
          example: rpvgnwlgw34
        added_to_report_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was added to a report.
            If this expense is not added to a report, then this could be null.
        report:
          $ref: '#/components/schemas/report_out_embed'
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been verified by a verifier.
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was verified.
        is_receipt_mandatory:
          type: boolean
          nullable: true
          description: >
            Determines whether a receipt is missing for this expense when it is
            required.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: >-
            signifies when this expense was exported to an external accounting
            system.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        is_corporate_card_transaction_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this corporate card transaction is auto_matched.
        matched_corporate_card_transaction_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the corporate card transaction ids which are matched to this
            expense
          example:
            - btxnwownwrng
        matched_corporate_card_transactions:
          type: array
          items:
            $ref: '#/components/schemas/matched_corporate_card_transaction_out_embed'
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last settled.
        missing_mandatory_fields:
          $ref: '#/components/schemas/missing_mandatory_fields'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        activity_details:
          $ref: '#/components/schemas/activity_details'
        extracted_data:
          $ref: '#/components/schemas/extracted_data'
        is_manually_flagged:
          type: boolean
          nullable: true
          description: >-
            This fields marks whether a given expense is manually flagged or
            not.
          example: true
        is_policy_flagged:
          type: boolean
          nullable: true
          description: >-
            This fields marks whether a given expense is flagged by policy or
            not.
          example: true
        split_group_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id provided by Fyle to identify an object.
          example: txwownwrngx
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: >
            This fields marks if physical has been collected for the given
            expense.
          example: true
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: >
            Signifies if and when the physical bill for this report was
            submitted.
          nullable: true
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    advance_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advances.
            This id is always prefixed with `adv`.
          readOnly: true
          example: advkvnwrnpwi
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
    advance_request_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this advance request approval
    advance_request_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        policy_amount:
          type: number
          nullable: true
          description: |
            The advance request amount set by policy.
          example: 1500
        advance_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance:
          $ref: '#/components/schemas/advance_out_embed'
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - SENT_BACK
            - PULLED_BACK
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        is_policy_flagged:
          type: boolean
          nullable: true
          description: |
            Determines whether this report was flagged from a policy
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_approval_out_embed'
          description: |
            List of advance request approval objects
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this advance request has been exported to
            external accounting system or not.
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
    advance_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        payment_mode:
          type: string
          enum:
            - CARD
            - BANK_TRANSFER
            - CHEQUE_DD
            - FOREX
            - CASH
          example: CASH
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: accwiofowiww
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        code:
          $ref: '#/components/schemas/code'
        issued_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance was issued.
          nullable: true
        card_number:
          type: string
          nullable: true
          example: XXXXXXXXXXXX1234
        settlement_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: set5nlgnwgwl
          nullable: true
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this advance has been exported to external
            accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: >-
            signifies when this advance was exported to an external accounting
            system.
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
    advance_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        user_id:
          type: string
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        payment_mode:
          type: string
          enum:
            - CARD
            - BANK_TRANSFER
            - CHEQUE_DD
            - FOREX
            - CASH
          example: CASH
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: accwiofowiww
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advances.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        code:
          $ref: '#/components/schemas/code'
        card_number:
          type: string
          nullable: true
          example: XXXXXXXXXXXX1234
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    reminder_type:
      type: string
      enum:
        - FYLE_EXPENSES
        - REPORT_EXPENSES
        - APPROVE_REPORTS
        - VERIFY_EMPLOYEES
        - MATCH_CORPORATE_CARD_TRANSACTIONS
        - APPROVE_ADVANCE_REQUESTS
        - RESUBMIT_ADVANCE_REQUESTS
        - MATCH_ADVANCES
        - VERIFY_EMPLOYEES
        - ADD_CORPORATE_CARDS
        - CONNECT_VISA_RTF
        - VERIFY_VISA_CARD
      maxLength: 255
      description: Represents the type of reminder.
      example: FYLE_EXPENSES
    reminder_schedule_config:
      description: description of weekly/monthly schedule for sending scheduled reminder
      type: object
      nullable: true
      properties:
        type:
          nullable: false
          type: string
          example: cron
          enum:
            - cron
        when:
          nullable: false
          type: object
          additionalProperties: false
          properties:
            day:
              type: number
              description: day of month (1-31)
              example: 16
            day_of_week:
              type: string
              enum:
                - mon
                - tue
                - wed
                - thu
                - fri
                - sat
                - sun
              description: name of weekday
              example: mon
            hour:
              type: number
              example: 22
              description: hour of the day in 24-hr format (0-23)
            minute:
              type: number
              example: 42
              description: minute of the hour
    reminder_receiver_user_ids:
      type: array
      nullable: true
      items:
        type: string
        nullable: false
        description: |
          This id provided by Fyle to identify an object.
        example: sdfd2391
      example:
        - uswoirwlwwg
        - uswlgwkgw42
      description: |
        List of IDs of users to whom this reminder will be sent.
    reminder_out:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          maxLength: 20
          description: |
            This id provided by Fyle to identify an object.
          example: remindRsjf2WmGd2
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        type:
          $ref: '#/components/schemas/reminder_type'
        message:
          type: string
          description: >
            The custom message which the admin wants to send alongside the
            reminder
          example: Please fyle your expenses before 25th of this month
        schedule_config:
          $ref: '#/components/schemas/reminder_schedule_config'
        last_reminded_at:
          type: string
          format: date-time
          nullable: true
          description: >-
            Signifies the time when this reminder was sent. In case of scheduled
            reminders, signifies when the last reminder was sent. Date-time in
            [ISO8601
            format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
          example: '2021-06-01T13:14:54.804+00:00'
        next_reminder_at:
          type: string
          format: date-time
          nullable: true
          description: >-
            Only valid for scheduled reminders. Signifies the time when the next
            reminder will be sent according to the schedule_config. Date-time in
            [ISO8601
            format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
          example: '2021-06-01T13:14:54.804+00:00'
        add_to_calendar:
          type: boolean
          nullable: false
          default: false
          description: >
            Determines whether this reminder will be added as an event in the
            google calendar of receiver.
          example: true
        receiver_user_ids:
          $ref: '#/components/schemas/reminder_receiver_user_ids'
    reminder_in:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          maxLength: 20
          description: |
            This id provided by Fyle to identify an object.
          example: remindRsjf2WmGd2
        type:
          $ref: '#/components/schemas/reminder_type'
        message:
          type: string
          description: |
            The custom message which the admin wants send alongside the reminder
          example: Please fyle your expenses before going on leave
        schedule_config:
          $ref: '#/components/schemas/reminder_schedule_config'
        add_to_calendar:
          type: boolean
          nullable: false
          default: false
          description: >
            Determines whether this reminder will be added as an event in the
            google calendar of receiver.
          example: true
        receiver_user_ids:
          $ref: '#/components/schemas/reminder_receiver_user_ids'
    report_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - user_id
        - user
        - purpose
        - currency
        - amount
        - tax
        - state
        - num_expenses
        - is_manually_flagged
        - is_policy_flagged
        - last_paid_at
        - last_approved_at
        - last_submitted_at
        - last_resubmitted_at
        - seq_num
        - source
        - approvals
        - employee
        - next_approver_user_ids
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this report has been verified by a verifier
        settlement_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: set5nlgnwgwl
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            If physical has been collected for this report
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: >
            Signifies if and when the physical bill for this report was
            submitted.
          nullable: true
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_paid_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        last_resubmitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was resubmitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        next_approver_user_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - us123heh98
    corporate_card_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          nullable: true
          description: |
            The unique id of an user to whom the card is assigned
          example: uswjwgnwwgo
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          $ref: '#/components/schemas/card_number'
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        data_feed_source:
          type: string
          nullable: true
          description: >
            signifies the source of how card is added and how further card
            transactions could be synced
          example: BANK FEED - CDF
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last assigned.
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card.
          nullable: true
          example: uswjwgnwwgo
        is_visa_enrolled:
          type: boolean
          description: |
            If the card is enrolled with direct visa_feed
          nullable: false
        is_dummy:
          type: boolean
          description: |
            If the card is a test card
          nullable: false
        last_ready_for_verification_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was ready to be verified 
          example: '2022-02-01T07:20:30.951475+00:00'
          nullable: true
        last_verification_attempt_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the last card verification was attempted
          nullable: true
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was verified
          example: '2022-02-01T07:20:39.207250+00:00'
          nullable: true
        verification_status:
          type: string
          nullable: false
          description: |
            Verification status of the corporate card
          enum:
            - VERIFIED
            - NOT_VERIFIED
            - READY_FOR_VERIFICATION
      required:
        - id
        - org_id
        - user_id
        - created_at
        - updated_at
        - bank_name
        - card_number
        - cardholder_name
        - data_feed_source
        - code
        - last_synced_at
        - last_assigned_at
        - assignor_user_id
        - is_visa_enrolled
        - is_dummy
        - last_ready_for_verification_at
        - last_verification_attempt_at
        - last_verified_at
        - verification_status
    corporate_card_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        data_feed_source:
          type: string
          nullable: true
          description: >
            signifies the source of how card is added and how further card
            transactions could be synced
          example: BANK FEED - CDF
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
      required:
        - bank_name
        - card_number
    corporate_card_assign_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        user_id:
          type: string
          description: |
            The unique id of an user to whom the card should be assigned.
          example: uswjwgnwwgo
      required:
        - id
        - user_id
    corporate_card_id_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
      required:
        - id
    corporate_card_unassign_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          nullable: true
          description: |
            The unique id of an user to whom the card is assigned
          example: null
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        data_feed_source:
          type: string
          nullable: true
          description: >
            signifies the source of how card is added and how further card
            transactions could be synced
          example: BANK FEED - CDF
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last assigned.
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card.
          nullable: true
          example: null
        is_dummy:
          type: boolean
          description: |
            If the card is a test card
          nullable: false
        last_ready_for_verification_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was ready to be verified
          example: '2022-02-01T07:20:30.951475+00:00'
          nullable: true
        is_visa_enrolled:
          type: boolean
          description: |
            If the card is enrolled with direct visa_feed
          nullable: false
        last_verification_attempt_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the last card verification was attempted
          nullable: true
        verification_status:
          type: string
          nullable: false
          description: |
            Verification status of the corporate card
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was verified
          example: '2022-02-01T07:20:39.207250+00:00'
          nullable: true
      required:
        - id
        - org_id
        - user_id
        - created_at
        - updated_at
        - bank_name
        - card_number
        - cardholder_name
        - data_feed_source
        - code
        - last_synced_at
        - last_assigned_at
        - assignor_user_id
        - is_dummy
        - last_ready_for_verification_at
        - is_visa_enrolled
        - last_verification_attempt_at
        - verification_status
        - last_verified_at
    string_detail:
      type: string
      description: >-
        Additional string details of the card transaction. Can hold details upto
        256 characters in length.
      nullable: true
      example: sample string
    user_out_embed_nullable:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    corporate_card_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
    matched_expense_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - currency
        - amount
        - spent_at
        - merchant
        - purpose
        - foreign_currency
        - foreign_amount
        - state
        - seq_num
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        merchant:
          type: string
          nullable: true
          maxLength: 255
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
    double_precision_detail:
      type: number
      description: >-
        Additional floating point numeric details of the card transaction. Same
        as double precision.
      nullable: true
      example: 468.2923
    timestamp_detail:
      type: string
      format: date-time
      description: >
        Additional details of the card transaction. <a
        href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339, section
        5.6 compliant timestamp.</a>
      example: '2020-07-03T18:19:31.193Z'
      nullable: true
    integer_detail:
      type: integer
      description: Additional integer details of the card transaction.
      nullable: true
      example: 5
    text_detail:
      type: string
      description: Additional text details of the card transaction.
      nullable: true
      example: sample text
    corporate_card_transaction_metadata:
      type: object
      nullable: true
      description: >
        Additional data that can optionally be stored. Some example details are
        added for reference.
      properties:
        merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_supplier_name:
          $ref: '#/components/schemas/string_detail'
        flight_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        flight_ticket_number:
          $ref: '#/components/schemas/string_detail'
        flight_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        flight_travel_date:
          $ref: '#/components/schemas/timestamp_detail'
        flight_service_class:
          $ref: '#/components/schemas/string_detail'
        flight_carrier_code:
          $ref: '#/components/schemas/string_detail'
        flight_fare_base_code:
          $ref: '#/components/schemas/string_detail'
        flight_trip_leg_number:
          $ref: '#/components/schemas/string_detail'
        hotel_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        hotel_supplier_name:
          $ref: '#/components/schemas/string_detail'
        hotel_checked_in_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_nights:
          $ref: '#/components/schemas/integer_detail'
        hotel_checked_out_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_country:
          $ref: '#/components/schemas/string_detail'
        hotel_city:
          $ref: '#/components/schemas/string_detail'
        hotel_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        fleet_product_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_product_supplier_name:
          $ref: '#/components/schemas/string_detail'
        fleet_service_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_service_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        car_rental_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_started_at:
          $ref: '#/components/schemas/timestamp_detail'
        car_rental_days:
          $ref: '#/components/schemas/integer_detail'
        car_rental_ended_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_issued_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_number:
          $ref: '#/components/schemas/string_detail'
        general_issuing_carrier:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_code:
          $ref: '#/components/schemas/string_detail'
        general_ticket_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        general_ticket_total_tax:
          $ref: '#/components/schemas/double_precision_detail'
        merchant_address:
          $ref: '#/components/schemas/text_detail'
    corporate_card_transaction_list_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to whom the card transaction is assigned.
          readOnly: true
          nullable: true
          example: null
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          nullable: false
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: set7oisw24gju
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example:
            - txwownwrng
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - is_exported
        - metadata
    corporate_card_transaction_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - amount
        - currency
        - spent_at
        - corporate_card_id
    corporate_card_transaction_post_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to whom the card transaction is assigned.
          readOnly: true
          nullable: true
          example: null
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
          nullable: false
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: null
        assignor_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
          example: false
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
          example: null
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - is_exported
        - metadata
    corporate_card_transaction_assign_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        user_id:
          type: string
          description: >
            The unique id of an user to whom the card transaction should be
            assigned.
          example: usge49ielgel
      required:
        - id
        - user_id
    corporate_card_transaction_assign_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - is_exported
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_id_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
      required:
        - id
    corporate_card_transaction_unassign_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to which the object is associated.
          readOnly: true
          nullable: true
          example: null
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: null
        assignor_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
          example: false
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_mark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: true
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_ignore_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: true
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_undo_ignore_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - is_exported
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_match_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_match_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmatch_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_unmatch_out:
      additionalProperties: false
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: >
            If the transaction is created by statement uploaded then this key
            refers to the source statement.
          example: stmtdasfdsaf3
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        mcc:
          type: string
          description: >
            This refers to the merchant category code for which this card
            transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    settlement_out:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify a settlement.
            This id is always prefixed with `set`.
          readOnly: true
          example: setmntGt9ju6qP
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        opened_at:
          $ref: '#/components/schemas/timestamptz_utc'
        is_locked:
          type: boolean
          example: true
        locked_at:
          $ref: '#/components/schemas/timestamptz_utc'
        is_paid:
          type: boolean
          example: true
        paid_at:
          $ref: '#/components/schemas/timestamptz_utc'
        settlement_number:
          type: integer
          example: 2
        total_opening_balance:
          type: number
          example: 100.1
        total_closing_balance:
          type: number
          example: 10.2
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this settlement has been exported to external
            accounting system or not.
        user_account_snapshots:
          type: array
          items:
            type: object
            properties:
              account_id:
                allOf:
                  - $ref: '#/components/schemas/id_string'
                example: acwbl222wlg
              type:
                type: string
                enum:
                  - PERSONAL_CASH_ACCOUNT
                  - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
                  - PERSONAL_ADVANCE_ACCOUNT
                example: PERSONAL_CASH_ACCOUNT
              current_balance_amount:
                type: number
                example: 50
              tentative_balance_amount:
                type: number
                example: 150
              created_at:
                $ref: '#/components/schemas/created_at'
              user_id:
                $ref: '#/components/schemas/user_id'
              org_id:
                $ref: '#/components/schemas/org_id'
    reimbursement_out:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify a reimbursement.
            This id is always prefixed with `reim`.
          readOnly: true
          example: reimntGt9ju6qP
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        reimbursement_number:
          type: string
          description: >
            A unique, organization wide identifier for a particular
            reimbursement.<br>

            This id is always prefixed with `P/`.
          example: P/2020/11/29
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        is_paid:
          type: boolean
          example: true
        paid_at:
          $ref: '#/components/schemas/timestamptz_utc'
        mode:
          type: string
          enum:
            - ACH
            - OFFLINE
          description: |
            Mode of creation of this reimbursement.
          example: OFFLINE
        purpose:
          type: string
          description: |
            Details about purpose of this reimbursement.
          example: End of month settlement
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this reimbursement has been exported to external
            accounting system or not.
        settlement_id:
          $ref: '#/components/schemas/id_string'
        payment_id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
    reimbursement_in_minimal:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify a reimbursement.
            This id is always prefixed with `reim`.
          example: reimntGt9ju6qP
        code:
          $ref: '#/components/schemas/code'
    account_minimal:
      description: |
        Account of a user belonging to any org 
      type: object
      nullable: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        currency:
          $ref: '#/components/schemas/currency'
        current_balance_amount:
          type: number
          example: 50
        tentative_balance_amount:
          type: number
          example: 100
    employee_account_summary_out:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/org_id'
        org_currency:
          $ref: '#/components/schemas/currency'
        user_email:
          $ref: '#/components/schemas/email'
        user_full_name:
          type: string
          description: |
            This represents the full name of the employee
          example: foo123
        cash_account_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: accHbfr7An39w
        cash_account:
          $ref: '#/components/schemas/account_minimal'
        cash_account_balance:
          $ref: '#/components/schemas/amount'
        ccc_account_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: accHbfr7An39w
        ccc_account:
          $ref: '#/components/schemas/account_minimal'
        ccc_account_balance:
          $ref: '#/components/schemas/amount'
        advance_account_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - acwbl222wlg
            - accg30nel335
        advance_accounts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/account_minimal'
        advance_accounts_balance:
          $ref: '#/components/schemas/amount'
        is_settleable:
          type: boolean
          description: |
            This indicates whether the user's accounts can be settled or not.
          example: true
    schedule_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        config:
          $ref: '#/components/schemas/schedule_config'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to which the object is associated.
          readOnly: true
          example: uswjwgnwwgo
          nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    event_payload:
      nullable: true
      type: object
      properties:
        resource_id:
          nullable: true
          type: string
          example: tx123TRew12
        resource_name:
          nullable: true
          type: string
          example: TRANSACTION
    schedule_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        event_payload:
          $ref: '#/components/schemas/event_payload'
        config:
          $ref: '#/components/schemas/schedule_config'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        event_name:
          type: string
          nullable: true
          example: report.created
    time_interval_granularity:
      type: string
      nullable: false
      enum:
        - day
        - month
        - quarter
        - year
      description: |
        The time duration by which to group expenses to aggregate sum of amount
      example: month
    total_amount:
      type: number
      nullable: false
      description: |
        Total sum of amount of expenses falling under filtering criteria
      example: 990
    time_interval_marker:
      type: string
      nullable: false
      description: >
        Representation of a point in time for which the sum of amount of
        expenses is calculated.

        Value depends of value of time_interval_granularity as follows :

        - for time_interval_granularity of `day`, value will be in date format
        YYYY-MM-DD. Example : 2021-01-01

        - for time_interval_granularity of `month`, value will be in date format
        YYYY-MM. Example : 2021-01

        - for time_interval_granularity of `quarter`, value will be in date
        format YYYY-QQ. Example : 2021-Q1

        - for time_interval_granularity of `year`, value will be in date format
        YYYY. Example : 2021
      example: 2022-02
    spend_overview_summary_data_out:
      type: object
      nullable: false
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        time_interval_marker:
          $ref: '#/components/schemas/time_interval_marker'
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the vendor to which the expense was made.
      example: Uber
    spend_overview_percentage:
      type: number
      description: >
        Percentage of spend which falls under this object/resource after
        filtering criteria is applied.
      example: 10.34
    spend_overview_change_percentage:
      type: number
      description: >
        Change in percentage of spend compared to spend in same time period one
        time interval ago, after filtering criteria is applied.
      example: -4.95
    spend_overview_by_merchant_data_out:
      type: object
      nullable: false
      properties:
        merchant_name:
          $ref: '#/components/schemas/merchant'
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    project_display_name:
      type: string
      nullable: false
      description: |
        String denoting the display name of a project.
      example: Westeros / Casterly rocks
    spend_overview_by_project_data_out:
      type: object
      nullable: false
      properties:
        project_id:
          $ref: '#/components/schemas/id_integer'
        project_display_name:
          $ref: '#/components/schemas/project_display_name'
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    category_display_name:
      type: string
      nullable: false
      description: |
        String denoting the display name of a category.
      example: Wildlings / Thenns
    spend_overview_by_category_data_out:
      type: object
      nullable: false
      properties:
        category_id:
          $ref: '#/components/schemas/id_integer'
        category_display_name:
          $ref: '#/components/schemas/category_display_name'
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    department_display_name:
      type: string
      nullable: false
      description: |
        String denoting the display name of a department.
      example: Knights / Kingsguard
    spend_overview_by_department_data_out:
      type: object
      nullable: false
      properties:
        department_id:
          $ref: '#/components/schemas/id_string'
        department_display_name:
          $ref: '#/components/schemas/department_display_name'
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    user_full_name:
      type: string
      maxLength: 255
      description: |
        String denoting the full name of an employee.
      example: Jon Snow
    spend_overview_by_user_data_out:
      type: object
      nullable: false
      properties:
        user_id:
          $ref: '#/components/schemas/id_string'
        user_full_name:
          $ref: '#/components/schemas/user_full_name'
        user_email:
          $ref: '#/components/schemas/email'
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    spend_overview_by_corporate_card_data_out:
      type: object
      nullable: false
      properties:
        card_id:
          $ref: '#/components/schemas/id_string'
        card_number:
          $ref: '#/components/schemas/card_number'
        card_holder_name:
          type: string
          nullable: true
          maxLength: 255
          description: |
            String denoting the name on the corporate card. This can be null.
          example: Jon Snow
        user_id:
          type: string
          nullable: true
          maxLength: 15
          description: >
            This id provided by Fyle to identify a user. This can be null if the
            corporate card is not assigned to any user.
          example: sdfd2391
        amount:
          $ref: '#/components/schemas/amount'
        percentage:
          $ref: '#/components/schemas/spend_overview_percentage'
        change_percentage:
          $ref: '#/components/schemas/spend_overview_change_percentage'
    account_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          type: string
          nullable: true
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
        currency:
          $ref: '#/components/schemas/currency'
        current_balance_amount:
          type: number
          example: 90.9
        tentative_balance_amount:
          type: number
          example: 43.8
        org_id:
          $ref: '#/components/schemas/org_id'
        category_id:
          type: integer
          description: |
            This id is provided by Fyle to identify a category.
          nullable: true
          example: 49058
    account_in:
      type: object
      additionalProperties: false
      properties:
        user_id:
          type: string
          nullable: true
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        type:
          type: string
          enum:
            - PERSONAL_ADVANCE_ACCOUNT
          example: PERSONAL_ADVANCE_ACCOUNT
        currency:
          $ref: '#/components/schemas/currency'
        category_id:
          type: integer
          description: |
            This id is provided by Fyle to identify a category.
          nullable: true
          example: 49058
    tax_group_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tgwfjbgqo32
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the tax_group.
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 18
          description: percentage of tax levied.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    tax_group_in:
      type: object
      required:
        - name
        - percentage
        - is_enabled
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tgwfjbgqo32
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the tax_group.
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 18
          description: percentage of tax levied.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    budget_type:
      nullable: false
      type: string
      enum:
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - HALF_YEARLY
        - YEARLY
        - ONE_TIME
      description: |
        Type of budgets 
      example: WEEKLY
    budget_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        type:
          $ref: '#/components/schemas/budget_type'
        amount_limit:
          $ref: '#/components/schemas/amount'
        alert_threshold:
          nullable: true
          type: number
          example: 5000
        department_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - 2222
            - 1221
          description: |
            List of department ids
        project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids
        cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of cost center ids
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of category ids
        observer_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - usge49ielgel
        fiscal_year_start_month:
          type: number
          example: 10
          description: Month number of start of fisical year
          minimum: 1
          maximum: 12
    budget_in:
      type: object
      required:
        - is_enabled
        - name
        - type
        - observer_ids
        - amount_limit
        - fiscal_year_start_month
        - department_ids
        - project_ids
        - cost_center_ids
        - category_ids
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales Montly Budget
        type:
          $ref: '#/components/schemas/budget_type'
        amount_limit:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 10000
        alert_threshold:
          nullable: true
          type: number
          example: 5000
        department_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - 2222
            - 1221
          description: |
            List of department ids
        project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids
        cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of cost center ids
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of category ids
        observer_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - usge49ielgel
        fiscal_year_start_month:
          type: number
          example: 10
          description: Month number of start of fisical year
          minimum: 1
          maximum: 12
    budget_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales Montly Budget
        type:
          $ref: '#/components/schemas/budget_type'
        amount_limit:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 10000
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    budget_usage_out:
      type: object
      required:
        - budget_id
        - budget_observer_ids
        - spent
        - amount_limit
        - budget
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/id_string'
        budget_id:
          $ref: '#/components/schemas/id_string'
        start_date:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T00.00.00Z
          description: Start date of the cycle of the budget
        end_date:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T00.00.00Z
          description: End date of the cycle of the budget
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        budget_observer_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - usge49ielgel
        spent:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 1000
        amount_limit:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 10000
        budget_department_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - 2222
            - 1221
          description: |
            List of department ids
        budget_project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids
        budget:
          $ref: '#/components/schemas/budget_out_embed'
    org_out:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - domain
        - currency
        - created_at
        - updated_at
        - is_verified
      properties:
        id:
          $ref: '#/components/schemas/org_id'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the org.
          example: Demo Account
        domain:
          type: string
          maxLength: 255
          description: >-
            This field specifies the domain with which the organisation is
            registered.
          example: example.com
        currency:
          $ref: '#/components/schemas/currency'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_verified:
          type: boolean
          nullable: false
          description: >
            Determines whether this organization has been verified by a
            verifier.
    expense_policy_limit_type:
      nullable: true
      type: string
      enum:
        - INDIVIDUAL
        - DAILY
        - NIGHTLY
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - HALF_YEARLY
        - YEARLY
        - LIFETIME
        - null
      example: MONTHLY
    null_field:
      type: string
      nullable: true
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    contains_operator:
      nullable: true
      type: string
      enum:
        - IN
        - NOT_IN
        - null
      description: |
        Value signifying the operator for the field
      example: IN
    policy_payment_modes:
      nullable: true
      type: array
      items:
        type: string
        enum:
          - PERSONAL_CASH_ACCOUNT
          - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
          - COMPANY_ACCOUNT
          - null
      example: PERSONAL_CASH_ACCOUNT
    vehicle_type:
      type: string
      enum:
        - bicycle
        - electric_car
        - four_wheeler
        - four_wheeler1
        - four_wheeler2
        - four_wheeler3
        - four_wheeler4
        - two_wheeler
      example: electric_car
    expense_policy_out:
      type: object
      additionalProperties: true
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This represents the id of the expense policy rule.
          example: tpr12345xyz
        description:
          allOf:
            - $ref: '#/components/schemas/description'
          description: |
            This represents the description of the expense policy rule.
          example: Receipt is mandatory for expense above $50
        is_enabled:
          type: boolean
          description: |
            Whether the policy rule is active or not.
        is_retired:
          type: boolean
          description: |
            Whether the policy rule is retired and can't be made active again.
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        expense_limit_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/expense_policy_limit_type'
          description: |
            Value signifying the limit type of the expense policy.
        expense_currency:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/currency'
            - $ref: '#/components/schemas/null_field'
          description: >
            The three-letter currency code following ISO standard <a

            href='https://www.iso.org/iso-4217-currency-codes.html'>ISO
            4217</a>.
        expense_amount_max:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: >
            If an expense's amount exceeds this value, this policy rule will be
            violated for that expense.
          example: 10000
        expense_amount_min:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: >
            If an expense's amount falls behind this value, this policy rule
            will be violated for that expense.
          example: 500
        expense_fiscal_start_month:
          nullable: true
          type: number
          description: |
            Month number of start of fiscal year.
          example: 4
          minimum: 1
          maximum: 12
        expense_distance_max:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/distance'
          description: >
            If an expense's distance exceeds this value, this policy rule will
            be violated for that expense.
          example: 10000
        expense_distance_min:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/distance'
          description: >
            If an expense's distance falls behind this value, this policy rule
            will be violated for that expense.
          example: 500
        expense_category_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of category ids considered by this policy rule.
          example:
            - 2222
            - 1221
        expense_category_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the categories listed in the field
            `expense_category_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the categories listed in
            the field `expense_category_ids`.
        expense_project_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of project ids considered by this policy rule.
          example:
            - 1234
            - 5678
        expense_project_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the projects listed in the field
            `expense_project_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the projects listed in the
            field `expense_project_ids`.
        expense_cost_center_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of cost centers ids considered by this policy rule.
          example:
            - 1987
            - 3456
        expense_cost_center_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the cost centers listed in the field
            `expense_cost_center_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the cost centers listed in
            the field `expense_cost_center_ids`.
        expense_allowed_exchange_rate_difference_percentage:
          nullable: true
          type: number
          description: >
            Allowed percentage difference for exchange rates beyond which this
            policy rule will be violated.
          example: 10
          minimum: 0
          maximum: 100
        expense_allowed_distance_difference_percentage:
          nullable: true
          type: number
          description: >
            Allowed distance percentage difference beyond which this policy rule
            will be violated.
          example: 8
          minimum: 0
          maximum: 100
        expense_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: |
            Custom fields (if any)
        expense_custom_fields_op:
          nullable: true
          type: object
          description: |
            Operator for the expense_custom_fields.
          properties:
            field_name:
              type: string
        expense_locations:
          nullable: true
          description: |
            Location of expense considered by this policy rule.
          type: array
          items:
            $ref: '#/components/schemas/location'
        expense_locations_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        expense_creation_delay_days_max:
          nullable: true
          type: number
          example: 12
          description: >
            This value decides how delayed an expense creation can be. If the
            expense is created after this many days of spend date, this policy
            rule will be violated.
        expense_on_holiday_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that are created
            on holidays, this policy rule will be violated.
          default: true
          example: true
        expense_without_receipt_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that doesn't
            have receipt, this policy rule will be violated.
          default: true
          example: true
        expense_spent_at_max:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: >
            If an expense's spend date exceeds this value, this policy rule will
            be violated for that expense.
        expense_spent_at_min:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: >
            If an expense's spend date falls behind this value, this policy rule
            will be violated for that expense.
        expense_payment_modes:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/policy_payment_modes'
          description: |
            Payment mode for expense to be considered by the policy rule.
        expense_payment_modes_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        expense_without_ccc_match_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that are not
            matched to corporate credit card transaction, this policy rule will
            be violated.
          default: true
          example: true
        expense_include_foreign_currency:
          type: boolean
          description: >
            If this is set to true, then for all such expenses that are created
            in foreign currency, this policy rule will be applicable.
          default: false
          example: true
        expense_flight_travel_class:
          nullable: true
          type: array
          description: >
            This field is applicable only for Flight category. <br> List of
            travel classes considered by this policy rule.
          items:
            type: string
          example:
            - BUSINESS
            - ECONOMY
        expense_train_travel_class:
          nullable: true
          type: array
          description: >
            This field is applicable only for Train category. <br> List of
            travel classes considered by this policy rule.
          items:
            type: string
          example:
            - AC First Class
            - Second Sitting
        expense_vehicle_type:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/vehicle_type'
            - $ref: '#/components/schemas/null_field'
          description: |
            Vehicle type considered by this policy rule.
        expense_annual_distance_max:
          nullable: true
          type: number
          example: 1200
          description: >
            If an expense's annual distance exceeds this value, this policy rule
            will be violated for that expense.
        employee_level_ids:
          nullable: true
          type: array
          description: |
            Employee level ids considered by this policy rule.
          items:
            type: string
          example:
            - lvl1sdfad
            - lvl2sdfas
        employee_level_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: |
            Custom fields (if any)
        employee_custom_fields_op:
          nullable: true
          type: object
          description: |
            Operator for the employee_custom_fields.
          properties:
            field_name:
              type: string
        employee_department_ids:
          nullable: true
          type: array
          description: |
            Employee department ids considered by this policy rule.
          items:
            type: string
          example:
            - dept1asdfa
            - dept2adfad
        employee_department_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_locations:
          nullable: true
          description: >
            Location of employees considered by this policy rule. <br>

            If this is set, then for all such employees whose location is in
            `employee_locations`, this policy rule will be applicable.
          type: array
          items:
            $ref: '#/components/schemas/location'
        employee_locations_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_user_ids:
          nullable: true
          type: array
          description: |
            Employee user ids considered by this policy rule.
          items:
            type: string
          example:
            - usabcds1
            - usabcds2
        employee_user_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_titles:
          nullable: true
          type: array
          description: |
            Employee titles considered by this policy rule.
          items:
            type: string
          example:
            - CEO
            - Manager
        employee_titles_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        action_flag:
          type: boolean
          description: >
            If it is set to true, then the expense(s) violating this policy
            rule, will be flagged.
          default: false
          example: true
        action_show_warning:
          type: boolean
          description: >
            If it is set to true, then a warning is shown to the employee,
            whenever he attempts to create an expense that violates this policy
            rule.
          default: false
          example: true
        action_make_unreportable:
          type: boolean
          description: >
            If it is set to true, then the expense(s) violating this policy
            rule, will be made unreportable. <br>

            (Expense will be created but employee will not be able to add it to
            report).
          default: false
          example: true
        action_remove_employee_approver1:
          type: boolean
          description: >
            If this is set to true, then the employee's first approver will be
            removed from the report that contains expense(s) violating this
            policy rule.
          default: false
          example: true
        action_add_employee_approver2:
          type: boolean
          description: >
            If this is set to true, then the employee's second approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_employee_approver3:
          type: boolean
          description: >
            If this is set to true, then the employee's third approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_project_approver1:
          type: boolean
          description: >
            If this is set to true, then the project's first approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_project_approver2:
          type: boolean
          description: >
            If this is set to true, then the project's second approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_department_head_approver:
          type: boolean
          description: >
            If this is set to true, then the employee's department head approver
            will be added to the report that contains expense(s) violating this
            policy rule.
          default: false
          example: true
        action_cap_amount:
          type: boolean
          description: >
            If it is set to true, then expense's amount will be capped to
            `expense_amount_max` when the expense(s) violates this policy rule.
          default: false
          example: true
        action_add_approver_user_ids:
          nullable: true
          type: array
          description: >
            List of approver user ids that will be added to the report that
            contains expense(s) violating this policy rule.
          items:
            type: string
          example:
            - usabcds3
            - usabcds4
        action_override_distance_slab_rate:
          nullable: true
          type: number
          description: >
            When annual mileage distance limit exceeds
            `expense_annual_distance_max` for `expense_vehicle_type`, this rate
            will be applied afterwards.
          example: 20
    expense_policy_in:
      type: object
      required:
        - description
      additionalProperties: true
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: >
            This represents the id of the expense policy rule.<br><br>

            _Note: When creating the policy rule, this field shouldn't be
            set._<br>

            _When updating, this field should be set._
          example: tpr12345xyz
        description:
          allOf:
            - $ref: '#/components/schemas/description'
          nullable: false
          description: |
            This represents the description of the expense policy rule.
          example: Receipt is mandatory for expense above $50
        expense_limit_type:
          oneOf:
            - $ref: '#/components/schemas/expense_policy_limit_type'
          description: >
            Value signifying the limit type of the expense policy. <br><br>

            `INDIVIDUAL`: Amount limit will be checked against each expense.
            <br>

            `DAILY`: Amount limit will be checked against the total of all
            expenses in a day. <br>

            `NIGHTLY`: Amount limit will be checked against the hotel cost per
            night. <br>

            `WEEKLY`: Amount limit will be checked against the total of all
            expenses in a week. <br>

            `MONTHLY`: Amount limit will be checked against the total of all
            expenses in a month. <br>

            `QUARTERLY`: Amount limit will be checked against the total of all
            expenses in a financial quarter. <br>

            `HALF_YEARLY`: Amount limit will be checked against the total of all
            expenses in a financial half-year. <br>

            `YEARLY`: Amount limit will be checked against the total of all
            expenses in a financial year. <br>

            `LIFETIME`: Amount limit will be checked against the total amount of
            all expenses throughout employee duration in the organisation.
            <br><br>

            **Note: If this field is set(to any value), then the following
            fields are mandatory in the request body:** <br>

            - `expense_currency`

            - Either `expense_amount_max` or `expense_amount_min` <br>

            **Note: If this field is set to QUARTERLY, HALF_YEARLY or YEARLY,
            then the following additional fields are mandatory in the request
            body:** <br>

            - `expense_fiscal_start_month`
        expense_currency:
          allOf:
            - $ref: '#/components/schemas/currency'
          description: >
            The three-letter currency code following ISO standard <a

            href='https://www.iso.org/iso-4217-currency-codes.html'>ISO
            4217</a>.<br>

            _Note: `expense_amount_max` or `expense_amount_min` is mandatory if
            the field `expense_currency` is present in the request body._
        expense_amount_max:
          anyOf:
            - $ref: '#/components/schemas/amount'
          description: >
            If an expense's amount exceeds this value, this policy rule will be
            violated for that expense.<br>

            _Note: `expense_currency` and `expense_limit_type` is mandatory if
            the field `expense_amount_max` is present in the request body._
          example: 10000
        expense_amount_min:
          anyOf:
            - $ref: '#/components/schemas/amount'
          description: >
            If an expense's amount falls behind this value, this policy rule
            will be violated for that expense..<br>

            _Note: `expense_currency` and `expense_limit_type` is mandatory if
            the field `expense_amount_min` is present in the request body._
          example: 500
        expense_fiscal_start_month:
          type: number
          description: >
            Month number of start of fiscal year.<br>

            _Note: This fields is required when `expense_limit_type` is
            QUARTERLY, HALF_YEARLY or YEARLY._
          example: 4
          minimum: 1
          maximum: 12
        expense_distance_max:
          allOf:
            - $ref: '#/components/schemas/distance'
          description: >
            If an expense's distance exceeds this value, this policy rule will
            be violated for that expense.<br>

            _Note: `expense_category_ids` with mileage category is mandatory if
            the field `expense_distance_max` is present in the request body._
          example: 10000
        expense_distance_min:
          allOf:
            - $ref: '#/components/schemas/distance'
          description: >
            If an expense's distance falls behind this value, this policy rule
            will be violated for that expense.<br>

            _Note: `expense_category_ids` with mileage category is mandatory if
            the field `expense_distance_min` is present in the request body._
          example: 500
        expense_category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: >
            List of category ids considered by this policy rule. <br>

            _Note: You need to use field `expense_category_ids_op` along with
            this field._
          example:
            - 2222
            - 1221
        expense_category_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the categories listed in the field
            `expense_category_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the categories listed in
            the field `expense_category_ids`.
        expense_project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: >
            List of project ids considered by this policy rule. <br>

            _Note: You need to use field `expense_project_ids_op` along with
            this field._
          example:
            - 1234
            - 5678
        expense_project_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the projects listed in the field
            `expense_project_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the projects listed in the
            field `expense_project_ids`.
        expense_cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: >
            List of cost centers ids considered by this policy rule. <br>

            _Note: You need to use field `expense_cost_center_ids_op` along with
            this field._
          example:
            - 1987
            - 3456
        expense_cost_center_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            - If it is set to IN, this policy rule will be applicable to all the
            expenses that belong to any of the cost centers listed in the field
            `expense_cost_center_ids`.

            - If it is set to NOT_IN, this policy rule will be applicable to all
            the expenses that do not belong to any of the cost centers listed in
            the field `expense_cost_center_ids`.
        expense_allowed_exchange_rate_difference_percentage:
          type: number
          description: >
            Allowed percentage difference for exchange rates beyond which this
            policy rule will be violated.
          example: 10
          minimum: 0
          maximum: 100
        expense_allowed_distance_difference_percentage:
          type: number
          description: >
            Allowed distance percentage difference beyond which this policy rule
            will be violated.<br>

            _Note: `expense_category_ids` with mileage category is mandatory if
            the field `expense_allowed_distance_difference_percentage` is
            present in the request body._
          example: 8
          minimum: 0
          maximum: 100
        expense_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: >
            Custom fields (if any)<br>

            _Example -> "No. of days": 5_ <br>

            _Note: You need to use field `expense_custom_fields_op` along with
            this field._
        expense_custom_fields_op:
          type: object
          description: >
            Operator for the expense_custom_fields. <br>

            _Format -> field_name: operator_ <br>

            _Example -> "No. of days": "GREATER_THAN_EQUAL_TO"_ <br><br>

            Supported values based on field type: <br>

            `Boolean`: `IS`, `NOT_IS` <br>

            `Date`: `LESS_THAN_EQUAL_TO`, `GREATER_THAN_EQUAL_TO` <br>

            `Location`: `IN`, `NOT_IN` <br>

            `Number`: `LESS_THAN_EQUAL_TO`, `GREATER_THAN_EQUAL_TO` <br>

            `String`: `CONTAINS`, `EQUALS` <br>

            `Select`: `IN`, `NOT_IN`<br>

            _Note: This field is mandatory if the field `expense_custom_fields`
            is present in the request body._
          properties:
            field_name:
              type: string
        expense_locations:
          description: >
            Location of expense considered by this policy rule. <br>

            If this is set, then for all such expenses that have a location -
            like expenses of category Flight, Train, Bus, Hotel, etc. - this
            policy rule will be applicable. <br>

            _Note: You need to use field `expense_locations_op` along with this
            field._
          type: array
          items:
            $ref: '#/components/schemas/location'
        expense_locations_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field `expense_locations` is
            present in the request body._
        expense_creation_delay_days_max:
          type: number
          example: 12
          description: >
            This value decides how delayed an expense creation can be. If the
            expense is created after this many days of spend date, this policy
            rule will be violated.
        expense_on_holiday_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that are created
            on holidays, this policy rule will be violated.
          default: true
          example: true
        expense_without_receipt_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that doesn't
            have receipt, this policy rule will be violated.
          default: true
          example: true
        expense_spent_at_max:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: >
            If an expense's spend date exceeds this value, this policy rule will
            be violated for that expense.
        expense_spent_at_min:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: >
            If an expense's spend date falls behind this value, this policy rule
            will be violated for that expense
        expense_payment_modes:
          allOf:
            - $ref: '#/components/schemas/policy_payment_modes'
          description: >
            Payment mode for expense to be considered by the policy rule. <br>

            _Note: You need to use field `expense_payment_modes_op` along with
            this field._
        expense_payment_modes_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field `expense_payment_modes`
            is present in the request body._
        expense_without_ccc_match_allowed:
          type: boolean
          description: >
            If this is set to false, then for all such expenses that are not
            matched to corporate credit card transaction, this policy rule will
            be violated.
          default: true
          example: true
        expense_include_foreign_currency:
          type: boolean
          description: >
            If this is set to true, then for all such expenses that are created
            in foreign currency, this policy rule will be applicable.
          default: false
          example: true
        expense_flight_travel_class:
          type: array
          description: >
            This field is applicable only for Train category. <br> List of
            travel classes considered by this policy rule. _Note:
            `expense_category_ids` with train category is mandatory if the field
            `expense_train_travel_class` is present in the request body._
          items:
            type: string
          example:
            - BUSINESS
            - ECONOMY
        expense_train_travel_class:
          type: array
          description: >
            This field is applicable only for Train category. <br> List of
            travel classes considered by this policy rule. _Note:
            `expense_category_ids` with train category is mandatory if the field
            `expense_train_travel_class` is present in the request body._
          items:
            type: string
          example:
            - AC First Class
            - Second Sitting
        expense_vehicle_type:
          allOf:
            - $ref: '#/components/schemas/vehicle_type'
          description: >
            Vehicle type considered by this policy rule. <br>

            _Note: `expense_category_ids` with mileage category,
            `expense_annual_distance_max` and
            `action_override_distance_slab_rate` is mandatory if the field
            `expense_vehicle_type` is present in the request body._
        expense_annual_distance_max:
          type: number
          example: 1200
          description: >
            If an expense's annual distance exceeds this value, this policy rule
            will be violated for that expense.<br>

            _Note: `expense_category_ids` with mileage category,
            `expense_vehicle_type` and `action_override_distance_slab_rate` is
            mandatory if the field `expense_annual_distance_max` is present in
            the request body._
        employee_level_ids:
          type: array
          description: >
            Employee level ids considered by this policy rule. <br>

            _Note: You need to use field `employee_level_ids_op` along with this
            field._
          items:
            type: string
          example:
            - lvl1sdfad
            - lvl2sdfas
        employee_level_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            Note: This field is mandatory if the field `employee_level_ids` is
            present in the request payload/body.
        employee_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: >
            Custom fields (if any)<br>

            _Example -> "Employee Age": 30_ <br>

            _Note: You need to use field `employee_custom_fields_op` along with
            this field._
        employee_custom_fields_op:
          type: object
          description: >
            Operator for the employee_custom_fields. <br>

            _Format -> field_name: operator_ <br>

            _Example -> "Employee Age": "GREATER_THAN_EQUAL_TO"_ <br><br>

            Supported values based on field type: <br>

            `Boolean`: `IS`, `NOT_IS` <br>

            `Date`: `LESS_THAN_EQUAL_TO`, `GREATER_THAN_EQUAL_TO` <br>

            `Location`: `IN`, `NOT_IN` <br>

            `Number`: `LESS_THAN_EQUAL_TO`, `GREATER_THAN_EQUAL_TO` <br>

            `String`: `CONTAINS`, `EQUALS` <br>

            `Select`: `IN`, `NOT_IN`<br>

            _Note: This field is mandatory if the field `employee_custom_fields`
            is present in the request body._
          properties:
            field_name:
              type: string
        employee_department_ids:
          type: array
          description: >
            Employee department ids considered by this policy rule. <br>

            _Note: You need to use field `employee_department_ids_op` along with
            this field._
          items:
            type: string
          example:
            - dept1asdfa
            - dept2adfad
        employee_department_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field
            `employee_department_ids` is present in the request body._
        employee_locations:
          description: >
            Location of employees considered by this policy rule. <br>

            If this is set, then for all such employees whose location is in
            `employee_locations`, this policy rule will be applicable. <br>

            _Note: You need to use field `employee_locations_op` along with this
            field._
          type: array
          items:
            $ref: '#/components/schemas/location'
        employee_locations_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field `employee_locations` is
            present in the request body._
        employee_user_ids:
          type: array
          description: >
            Employee user ids considered by this policy rule. <br>

            _Note: You need to use field `employee_user_ids_op` along with this
            field._
          items:
            type: string
          example:
            - usabcds1
            - usabcds2
        employee_user_ids_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field `employee_user_ids` is
            present in the request body._
        employee_titles:
          type: array
          description: >
            Employee titles considered by this policy rule. <br>

            _Note: You need to use field `employee_titles_op` along with this
            field._
          items:
            type: string
          example:
            - CEO
            - Manager
        employee_titles_op:
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: >
            _Note: This field is mandatory if the field `employee_titles` is
            present in the request body._
        action_flag:
          type: boolean
          description: >
            If it is set to true, then the expense(s) violating this policy
            rule, will be flagged.
          default: false
          example: true
        action_show_warning:
          type: boolean
          description: >
            If it is set to true, then a warning is shown to the employee,
            whenever he attempts to create an expense that violates this policy
            rule.
          default: false
          example: true
        action_make_unreportable:
          type: boolean
          description: >
            If it is set to true, then the expense(s) violating this policy
            rule, will be made unreportable. <br>

            (Expense will be created but employee will not be able to add it to
            report).
          default: false
          example: true
        action_remove_employee_approver1:
          type: boolean
          description: >
            If this is set to true, then the employee's first approver will be
            removed from the report that contains expense(s) violating this
            policy rule.
          default: false
          example: true
        action_add_employee_approver2:
          type: boolean
          description: >
            If this is set to true, then the employee's second approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_employee_approver3:
          type: boolean
          description: >
            If this is set to true, then the employee's third approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_project_approver1:
          type: boolean
          description: >
            If this is set to true, then the project's first approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_project_approver2:
          type: boolean
          description: >
            If this is set to true, then the project's second approver will be
            added to the report that contains expense(s) violating this policy
            rule.
          default: false
          example: true
        action_add_department_head_approver:
          type: boolean
          description: >
            If this is set to true, then the employee's department head approver
            will be added to the report that contains expense(s) violating this
            policy rule.
          default: false
          example: true
        action_cap_amount:
          type: boolean
          description: >
            If it is set to true, then expense's amount will be capped to
            `expense_amount_max` when the expense(s) violates this policy rule.
          default: false
          example: true
        action_add_approver_user_ids:
          type: array
          description: >
            List of approver user ids that will be added to the report that
            contains expense(s) violating this policy rule.
          items:
            type: string
          example:
            - usabcds3
            - usabcds4
        action_override_distance_slab_rate:
          type: number
          description: >
            When annual mileage distance limit exceeds
            `expense_annual_distance_max` for `expense_vehicle_type`, this rate
            will be applied afterwards.<br>

            _Note: `expense_category_ids` with mileage category,
            `expense_vehicle_type` and `expense_annual_distance_max` is
            mandatory if the field `action_override_distance_slab_rate` is
            present in the request body._
          example: 20
    expense_policy_state_change_in:
      type: object
      required:
        - id
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tprXsN9xJXG4W
          description: |
            This represents the id of the expense policy rule.
    expense_policy_rule_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          example: tpr1234abcd
          description: >-
            This represents the id of the expense policy rule that is violated
            for this expense.
        description:
          anyOf:
            - $ref: '#/components/schemas/description'
          description: >
            This represents the description of the expense policy rule that is
            violated for this expense.
          example: Receipt is mandatory for expense above $50
        action_show_warning:
          type: boolean
          description: >
            A true value here means that policy calculation suggests showing a
            warning when the user attempts to create an expense that violates
            this expense policy rule.
          example: true
    expense_policy_expenses_query_object_params:
      type: object
      properties:
        category_id:
          type: string
          description: |
            Category ids query param to find the list of expenses.
          example: in.(60506)
        project_id:
          type: string
          description: |
            Project ids query param to find the list of expenses.
          example: in.(261155)
        cost_center_id:
          type: string
          description: |
            Cost center ids query param to find the list of expenses.
          example: in.(7475)
        currency:
          type: string
          description: |
            Currency query param to find the list of expenses.
          example: eq.USD
        mileage_rate_id:
          type: string
          description: |
            Mileage rate query param to find the list of expenses.
          example: eq.2
        employee_id:
          type: string
          description: |
            Employee id query param to find the list of expenses.
          example: eq.ouNSnadfaLA
    expense_policy_expenses_query_object:
      type: object
      description: >
        An expense may be violating an expense policy rule due to a group of
        other expenses. 

        These query params can be used to fetch those expenses because of which
        this expense is causing a violation. <br>

        Below params should be ANDed to get the correct list of violating
        expenses.
      properties:
        limit_start_date:
          type: string
          description: |
            Spend start date query param to find the list of violating expenses.
          example: '2021-12-01'
        limit_end_date:
          type: string
          description: |
            Spend end date query param to find the list of violating expenses.
          example: '2022-03-31'
        params:
          $ref: '#/components/schemas/expense_policy_expenses_query_object_params'
    expense_policy_individual_desired_states:
      type: object
      properties:
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: >
            List of approver ids that the policy calculation suggests adding to
            report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        run_status:
          nullable: false
          type: string
          enum:
            - VIOLATED_ACTION_SUCCESS
            - VIOLATED_ACTION_FAILURE
            - UNVIOLATED
          description: >
            This represent the status of policy computation for an expense
            against the policy. If the state is

            `UNVIOLATED`, it means that the expense is not violating the policy.
            If the state is `VIOLATION_ACTION_SUCCESS`,

            it means that expense is violating the policy and action stated in
            the object will be applied to

            expense. However, if the state is `VIOLATION_ACTION_FAILURE`, it
            means that the policy is violated for the

            expense but since some approver was missing or not setup properly,
            it will fail to take action 

            on the expense
          example: SUCCESS
        run_result:
          type: array
          items:
            type: string
          description: >
            List of human-readable action summaries that the policy calculation
            suggests for this expense. Note that, in

            case some approver was not setup properly for the given violation,
            this array will contain description of

            missing approvers. For example, Department head, Project head, etc.
          example:
            - flag the expense
            - cap the amount
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        expense_policy_rule_id:
          type: string
          description: |
            This represents the id of the expense policy rule.
          example: tprabsdfSYqd
        rule:
          $ref: '#/components/schemas/expense_policy_rule_embed'
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        expenses_query_object_params:
          nullable: true
          $ref: '#/components/schemas/expense_policy_expenses_query_object'
    expense_policy_final_desired_state:
      type: object
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        flag:
          type: boolean
          description: >
            A true value here means, that as per policy calculation this expense
            should be flagged.
          example: true
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        is_receipt_mandatory:
          type: boolean
          description: >
            A true value here means, that as per policy calculation this expense
            requires receipt.
          example: true
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: >
            List of approver ids that the policy calculation suggests adding to
            report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        remove_employee_approver1:
          type: boolean
          description: >
            A true value here means, that as per policy calculation, the
            employee's first approver should be removed from the report that
            contains this expense.
          example: true
        run_status:
          nullable: false
          type: string
          enum:
            - SUCCESS
            - FAILURE
          description: |
            This represent the run status of the policy.
          example: SUCCESS
        run_summary:
          type: array
          items:
            type: string
          description: >
            List of human-readable action summaries that the policy calculation
            suggests for this expense.
          example:
            - flag the expense
            - cap the amount
    expense_policy_states_out:
      type: object
      additionalProperties: false
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        individual_desired_states:
          type: array
          items:
            $ref: '#/components/schemas/expense_policy_individual_desired_states'
        final_desired_state:
          $ref: '#/components/schemas/expense_policy_final_desired_state'
    statements_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: stmtwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        file_name:
          type: string
          description: |
            Specifies the name of file uploaded by the user.
          example: amex.csv
        file_size:
          type: number
          description: >
            Specifies the size of file uploaded by the user. (The size is
            represented in bytes)
          example: 21
        no_of_debit:
          type: integer
          description: |
            Number of debit transactions in the statement uploaded by the user.
          example: 3
          nullable: true
        no_of_credit:
          type: integer
          description: |
            Number of credit transactions in the statement uploaded by the user.
          example: 3
          nullable: true
        no_of_transactions:
          type: integer
          description: |
            Number of transactions in the statement uploaded by the user.
          example: 6
        all_statement_columns:
          type: array
          items:
            type: string
          description: |
            This specifies headers of the statement uploaded by the user.
          example:
            - account_number
            - amount
        start_date:
          $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Start date of the statement period
          nullable: true
        end_date:
          $ref: '#/components/schemas/timestamptz_utc'
          description: |
            End date of the statement period
          nullable: true
        has_duplicate_statements:
          type: boolean
          description: >
            This specifies if the statement is complete duplicate of already
            uploaded statement or not.
          nullable: true
        duplicate_statement_ids:
          type: array
          description: >-
            Holds the list of statement_ids which are complete duplicate of the
            current statement
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - stmtge49ielgel
        has_duplicate_statement_line_items:
          type: boolean
          description: >
            Indicates whether there are any line items in this statement are
            duplicates.
          nullable: true
        duplicate_statement_line_items:
          type: array
          items:
            type: object
            properties:
              ids:
                type: array
                items:
                  $ref: '#/components/schemas/id_string'
                example:
                  - stlige49ielgel
                description: Ids of the current statement line items which are duplicates
              duplicate_line_item_statement_id:
                type: string
                description: |
                  Id of the existing duplicate statement
                example:
                  - stmpge49ielgel
                nullable: true
        unique_id:
          type: string
          description: |
            Unique hash value that is used to identify the statement.
          example: 74175aadf22675aa59df28b96d351cfb
        file_id:
          type: string
          description: |
            File id of the uploaded statement.
          example: fiit3pX9gzzP
          nullable: true
        is_processed:
          type: boolean
          description: >
            Indicates whether the corporate card transactions are created out of
            the statement.
        statement_mappings_id:
          type: string
          example: stmpdfddfd
          description: |
            Id of the mapping used to extract transaction from the statement.
          nullable: true
      required:
        - id
        - org_id
        - creator_user_id
        - created_at
        - updated_at
        - file_name
        - file_size
        - no_of_debit
        - no_of_credit
        - no_of_transactions
        - all_statement_columns
        - start_date
        - end_date
        - has_duplicate_statements
        - has_duplicate_statement_line_items
        - duplicate_statement_ids
        - duplicate_statement_line_items
        - unique_id
        - file_id
        - is_processed
        - statement_mappings_id
    statements_in:
      type: object
      properties:
        file_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: fidftadfdsdf
      required:
        - file_id
    statement_mappings_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: stmpwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        bank_name:
          type: string
          description: |
            Specifies the bank name of the statement.
          example: American Express
        is_debit_positive:
          type: boolean
          description: >
            Specifies the representation of the the amount in the statement, if
            true then the amount represented by 

            positive sign are debits, and if false then the amount represented
            by negative sign are debits.
          example: true
        transaction_date_column:
          type: string
          description: >
            Specifies the header name of the transaction date column in the
            statement.
          example: spent date
        merchant_column:
          type: string
          description: |
            Specifies the header name of the merchant column in the statement.
          example: merchant
        transaction_id_column:
          type: string
          description: >
            Specifies the header name of the transaction id / unique id column
            in the statement.
          nullable: true
          example: reference number
        amount_column:
          type: string
          description: |
            Specifies the header name of the amount column in the statement.
          example: amount
        name:
          type: string
          description: |
            Specifies the mapping name.
          example: amex_mapping
        card_number_column:
          type: string
          description: >
            Specifies the header name of the card number column in the
            statement.
          example: account number
        foreign_amount_column:
          type: string
          description: >
            Specifies the header name of the foreign amount column in the
            statement.
          nullable: true
          example: foreign amount
        foreign_currency_column:
          type: string
          description: >
            Specifies the header name of the foreign currency column in the
            statement.
          nullable: true
          example: foreign currency
        description_column:
          type: string
          description: >
            Specifies the header name of the description column in the
            statement.
          nullable: true
          example: description
        post_date_column:
          type: string
          description: |
            Specifies the header name of the post date column in the statement.
          example: post date
          nullable: true
        is_auto_created:
          type: boolean
          description: |
            Helps to identify if a statement mapping got auto created or not
          example: false
        card_network:
          type: string
          description: |
            Specifies the card network used by the card
          example: VISA
          nullable: true
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - bank_name
        - is_debit_positive
        - transaction_date_column
        - transaction_id_column
        - amount_column
        - name
        - card_number_column
        - merchant_column
        - foreign_amount_column
        - foreign_currency_column
        - description_column
        - post_date_column
        - is_auto_created
        - card_network
    statement_mappings_suggest_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: stmpwownwrng
        bank_name:
          type: string
          description: |
            Specifies the bank name of the statement.
          example: American Express
        is_debit_positive:
          type: boolean
          description: >
            Specifies the representation of the the amount in the statement, if
            true then the amount represented by 

            positive sign are debits, and if false then the amount represented
            by negative sign are debits.
          example: true
        transaction_date_column:
          type: string
          description: >
            Specifies the header name of the transaction date column in the
            statement.
          example: spent date
        merchant_column:
          type: string
          description: |
            Specifies the header name of the merchant column in the statement.
          example: merchant
        transaction_id_column:
          type: string
          description: >
            Specifies the header name of the transaction id / unique id column
            in the statement.
          nullable: true
          example: reference number
        amount_column:
          type: string
          description: |
            Specifies the header name of the amount column in the statement.
          example: amount
        name:
          type: string
          description: |
            Specifies the mapping name.
          example: amex_mapping
        card_number_column:
          type: string
          description: >
            Specifies the header name of the card number column in the
            statement.
          example: account number
        foreign_amount_column:
          type: string
          description: >
            Specifies the header name of the foreign amount column in the
            statement.
          nullable: true
          example: foreign amount
        foreign_currency_column:
          type: string
          description: >
            Specifies the header name of the foreign currency column in the
            statement.
          nullable: true
          example: foreign currency
        description_column:
          type: string
          description: >
            Specifies the header name of the description column in the
            statement.
          nullable: true
          example: description
        post_date_column:
          type: string
          description: |
            Specifies the header name of the post date column in the statement.
          example: post date
          nullable: true
        is_auto_created:
          type: boolean
          description: |
            Helps to identify if a statement mapping got auto created or not
          example: false
        card_network:
          type: string
          description: |
            Specifies the credit card network used by the card
          example: VISA
          nullable: true
      required:
        - id
        - bank_name
        - is_debit_positive
        - transaction_date_column
        - transaction_id_column
        - amount_column
        - name
        - card_number_column
        - merchant_column
        - foreign_amount_column
        - foreign_currency_column
        - description_column
        - post_date_column
        - is_auto_created
        - card_network
    card_transaction_from_statement_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: stmtadfdsdf
        statement_mapping:
          type: object
          properties:
            description_column:
              type: string
              description: |
                Specifies the mapping of description column on the statement
              nullable: true
              example: description
            transaction_date_column:
              type: string
              description: |
                Specifies the mapping of transaction date on the statement.
              example: txn date
            transaction_id_column:
              type: string
              description: >
                Specifies the mapping of transaction id / unique id on the
                statement.
              example: reference number
              nullable: true
            amount_column:
              type: string
              description: |
                Specifies the mapping of amount on the statement.
              example: amount
            card_number_column:
              type: string
              description: |
                Specifies the mapping of card number on the statement.
              example: account number
            merchant_column:
              type: string
              description: |
                Specifies the mapping of merchant on the statement.
              example: Amazon
            foreign_amount_column:
              type: string
              description: |
                Specifies the mapping of foreign amount on the statement.
              example: foreign amount
              nullable: true
            foreign_currency_column:
              type: string
              description: |
                Specifies the mapping of foreign currency on the statement.
              example: foreign currency
              nullable: true
            post_date_column:
              type: string
              description: >
                Specifies the header name of the post date column in the
                statement.
              example: post date
              nullable: true
            bank_name:
              type: string
              description: |
                Specifies the bank name of the statement
              example: American Express
            is_debit_positive:
              type: boolean
              description: >
                Specifies the representation of the the amount in the statement,
                if true then the amount represented by |

                positive sign are debits, and if false then the amount
                represented by negative sign are debits.
              example: true
            name:
              type: string
              description: |
                Specifies the mapping name.
              example: USD
              nullable: true
            card_network:
              type: string
              description: |
                Specifies the credit card network used by the card
              example: VISA
              nullable: true
          required:
            - description_column
            - transaction_date_column
            - transaction_id_column
            - amount_column
            - card_number_column
            - merchant_column
            - foreign_amount_column
            - foreign_currency_column
            - post_date_column
            - bank_name
            - is_debit_positive
            - name
            - card_network
        ignored_line_item_ids:
          type: array
          items:
            type: string
          description: >
            This specifies list of statement line items to be ignored in the
            statement.
          example:
            - stlisfdfadssd
      required:
        - id
        - statement_mapping
        - ignored_line_item_ids
    preview_out:
      properties:
        no_of_debit:
          type: integer
          description: |
            Number of debit transactions in the statement uploaded by the user.
          example: 3
          nullable: true
        no_of_credit:
          type: integer
          description: |
            Number of credit transactions in the statement uploaded by the user.
          example: 3
          nullable: true
        no_of_transactions:
          type: integer
          description: |
            Number of transactions in the statement uploaded by the user.
          example: 6
        transactions:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: |
                  Specifies the description of the transaction on the statement.
                nullable: true
                example: description
              bank_name:
                type: string
                description: |
                  Specifies the bank name of the statement
                example: American Express
              merchant:
                type: string
                description: |
                  Specifies the merchant of the statement
                example: Amazon
              transaction_date:
                $ref: '#/components/schemas/timestamptz_utc'
                description: |
                  Specifies the transaction date on the statement.
              amount:
                type: string
                description: |
                  Specifies the amount on the statement.
                example: 30
              card_number:
                type: string
                description: |
                  Specifies the card number on the statement.
                example: xxxx-3343
              unique_id:
                type: string
                description: |
                  Specifies the unique code / transaction id on the statement.
                example: ed0b2aa913c54b3f903a5030208e1872
              foreign_amount:
                type: string
                description: |
                  Specifies the foreign amount on the statement.
                nullable: true
                example: 48
              foreign_currency:
                type: string
                description: |
                  Specifies the foreign currency on the statement.
                nullable: true
                example: USD
              transaction_id:
                type: string
                description: |
                  Specifies the transaction id / unique id on the statement.
                nullable: true
                example: USD
              transaction_type:
                type: string
                description: >
                  Specifies the transaction type of the transactions on the
                  statement (credit / debit).
                example: debit
              post_date:
                $ref: '#/components/schemas/timestamptz_utc'
                description: |
                  Specifies the post date on the statement.
                nullable: true
            required:
              - description
              - bank_name
              - merchant
              - transaction_date
              - amount
              - card_number
              - unique_id
              - foreign_amount
              - foreign_currency
              - transaction_id
              - post_date
      required:
        - transactions
        - no_of_debit
        - no_of_credit
        - no_of_transactions
  parameters:
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    order:
      in: query
      name: order
      description: |
        use comma separated column names for sorting the results. <br>
        For sorting in descending order, use `column_name.desc`
      schema:
        type: string
        example: updated_at.desc,id
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
    time_interval_granularity:
      in: query
      name: time_interval_granularity
      description: |
        The time duration by which to group expenses to aggregate sum of amount.
        Supported operator is `eq`.
      schema:
        type: string
        default: eq.month
        enum:
          - eq.day
          - eq.month
          - eq.quarter
          - eq.year
        example: eq.month
    time_interval_preset:
      in: query
      name: time_interval_preset
      description: >
        Preset time durations which can be used to filter expenses by spend
        date.

        Default value is used if it is not specified and time_interval_start and
        time_interval_end params are also not specified.

        Supported operator is `eq`.
      schema:
        type: string
        default: eq.this_year
        enum:
          - eq.this_week
          - eq.this_month
          - eq.this_quarter
          - eq.this_year
        example: eq.this_year
    time_interval_start:
      in: query
      name: time_interval_start
      description: |
        Start of time duration for filtering expenses by spend date.
        Need not to be specified if time_interval_preset param is passed.
        Supported operator is `eq`.
      schema:
        type: string
        description: >-
          Date-time in [ISO8601
          format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
        example: '2020-06-01T13:14:54.804+00:00'
    time_interval_end:
      in: query
      name: time_interval_end
      description: |
        End of time duration for filtering expenses by spend date. 
        Need not to be specified if time_interval_preset param is passed.
        Supported operator is `eq`.
      schema:
        type: string
        description: >-
          Date-time in [ISO8601
          format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
        example: '2021-06-01T13:14:54.804+00:00'
    is_card_spend:
      in: query
      name: is_card_spend
      description: >
        For filtering out only those expenses where source account is corporate
        card account

        Supported operators are `eq`.<br>
      schema:
        type: string
        example: eq.true
    is_reimbursable:
      in: query
      name: is_reimbursable
      description: >
        For filtering out only those expenses which are reimbursable to the
        employee.

        Supported operators are `eq`.<br>
      schema:
        type: string
        example: eq.true
    merchant:
      in: query
      name: merchant
      description: |
        List of merchants for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(los-pollos-harmanos,saul-goodman)
    category_id:
      in: query
      name: category_id
      description: |
        Category IDs for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(cat123,cat345)
    project_id:
      in: query
      name: project_id
      description: |
        Project IDs for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(proj123,proj456)
    department_id:
      in: query
      name: department_id
      description: |
        Department IDs for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(dept123,dept345)
    user_id:
      in: query
      name: user_id
      description: |
        User IDs for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(us123,us456)
    corporate_card_id:
      in: query
      name: card_id
      description: |
        Corporate card IDs for filtering expenses.
        Supported operator is `in`.
      schema:
        type: string
        example: in.(bacc1234,bacc4567)
tags:
  - name: Accounting Exports
    description: >
      This API allows you to record export of Fyle resources to an external
      accounting exports
  - name: Accounts
    description: |
      This APIs gives access to your Employees's accounts data.
  - name: Advances
    description: |
      This API gives you access to manage your organisation's Advances data.
  - name: Automations
    description: |
      This API gives you access to automate your organisation's manual work.
  - name: Budgets
    description: |
      This API gives you access to Budgets.
  - name: Categories
    description: |
      These APIs gives you access to manage your organisation's Categories
  - name: Corporate Cards
    description: >
      This API gives you access to manage your organisation's Corporate Cards
      data.
  - name: Corporate Card Transactions
    description: >
      This API gives you access to manage your organisation's Corporate Card
      Transaction data.
  - name: Cost Centers
    description: >
      These APIs gives you access to manage your organisation's Cost Centers
      data.
  - name: Departments
    description: |
      These APIs gives you access to manage your organisation's Departments
  - name: Employees
    description: |
      These APIs gives you access to manage your organisation's Employees
  - name: Expenses
    description: |
      This API gives you access to your organisation's Expenses
  - name: Expense Policies
    description: |
      This API gives you access to your organisation's Expense Policies
  - name: Files
    description: |
      This API gives you access to creates a file in Fyle
  - name: Levels
    description: |
      These APIs gives you access to manage your organisation's Employee levels.
  - name: Mileage Rates
    description: |
      These APIs gives you access to manage your organisation's Mileage Rates
  - name: Per Diem Rates
    description: |
      These APIs gives you access to manage your organisation's Per Diem Rates
  - name: Projects
    description: |
      These APIs gives you access to manage your organisation's Projects
  - name: Reimbursements
    description: |
      These APIs gives you access to manage your organisation's Reimbursements
      data
  - name: Reminders
    description: |
      These APIs gives you access to manage your organisation's Reminders data
  - name: Reports
    description: |
      These APIs gives you access to manage your organisation's Reports data
  - name: Schedules
    description: |
      This API gives you access to manage Scheduled jobs.
  - name: Settlements
    description: |
      This API gives you access to manage your organisation's Settlements data.
  - name: Tax Groups
    description: |
      These APIs gives you access to manage your organisation's Tax Groups data.
  - name: Organisations
    description: |
      These APIs gives you access to manage organisations.
  - name: Statements
    description: >
      These APIs gives you access to add / view a bank statement for
      reconciliation.
  - name: Statement mappings
    description: >
      These APIs gives you access to manage statement mappings which is used for
      statement uploads.
paths:
  /admin/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: projects_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/admin_approver_project_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: projects_post
      tags:
        - Projects
      summary: Create or update a project
      description: |
        Create or update a project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/project_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/admin_approver_project_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/projects/bulk:
    post:
      operationId: projects_bulk_post
      tags:
        - Projects
      summary: Create or update projects in bulk
      description: |
        Create or update projects in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/project_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/cost_centers:
    get:
      operationId: cost_centers_list
      tags:
        - Cost Centers
      summary: List cost centers
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/admin_cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    post:
      operationId: cost_centers_post
      tags:
        - Cost Centers
      summary: Create or update a cost center
      description: |
        Create or update a cost center.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/cost_center_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/admin_cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/cost_centers/bulk:
    post:
      operationId: cost_centers_bulk_post
      tags:
        - Cost Centers
      summary: Create or update cost centers in bulk
      description: |
        Create or update cost centers in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/cost_center_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/cost_centers/restrict:
    post:
      operationId: cost_centers_restrict
      tags:
        - Cost Centers
      summary: Restrict cost center to users
      description: |
        Restrict cost center to users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/cost_center_restrict_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/admin_cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: categories_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/category_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Categories
      summary: Create or update a category
      description: |
        Create or update a category.
      operationId: categories_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/category_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/category_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/categories/bulk:
    post:
      tags:
        - Categories
      summary: Create or update categories in bulk
      description: |
        Create or update categories in bulk.
      operationId: categories_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/category_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/expense_fields:
    get:
      tags:
        - Expenses
      summary: List expense fields
      operationId: expense_fields_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_field_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Expenses
      summary: Create or update an expense fields
      operationId: expense_fields_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_field_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  data:
                    $ref: '#/components/schemas/expense_field_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/per_diem_rates:
    get:
      tags:
        - Per Diem Rates
      summary: List per diem rates
      operationId: per_diem_rates_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/per_diem_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: per_diem_rates_post
      tags:
        - Per Diem Rates
      summary: Create or update a per_diem_rate
      description: |
        Create or update a per_diem_rate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/per_diem_rate_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/per_diem_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/departments:
    get:
      tags:
        - Departments
      summary: List departments
      operationId: departments_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/department_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: departments_post
      tags:
        - Departments
      summary: Create or update a department
      description: |
        Create or update a department.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/department_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/department_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/mileage_rates:
    get:
      tags:
        - Mileage Rates
      summary: List mileage rates
      operationId: mileage_rates_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/mileage_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Mileage Rates
      summary: Create or update a mileage rate
      description: |
        Create or update a mileage rate.
      operationId: mileage_rates_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/mileage_rate_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/mileage_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/levels:
    get:
      tags:
        - Levels
      summary: List Levels
      operationId: levels_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/level_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: levels_post
      tags:
        - Levels
      summary: Create or update a level
      description: |
        Create or update a level.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/level_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/level_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/employees:
    get:
      tags:
        - Employees
      summary: List employees
      operationId: employees_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/employee_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/employees/invite/bulk:
    post:
      tags:
        - Employees
      summary: Create or update employees
      description: |
        Create or update employees
      operationId: invitations_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              additionalProperties: false
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/invitation_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/files:
    post:
      operationId: files_post
      tags:
        - Files
      summary: Create a file
      description: |
        Create a file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/admin_file_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/files/generate_urls/bulk:
    post:
      operationId: files_generate_urls_bulk_post
      tags:
        - Files
      summary: Bulk generate download and upload URLs
      description: >
        Once a file is created, its contents may need to be uploaded (or
        downloaded). To upload (or download) contents, you'll

        need to generate a temporary signed URL. This API accomplishes that. The
        signed URL is valid for 5 mins.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_generate_urls_action_in'
                  example:
                    - id: sdfd2391
                    - id: sdfd2392
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/file_generate_urls_action_out'
                    example:
                      - id: sdfd2391
                        name: uber_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x232sds
                        upload_url: https://aaa.bbb.cc/x232sds
                      - id: sdfd2392
                        name: lyft_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x22ddsds
                        upload_url: https://aaa.bbb.cc/x2sdssds
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/automations/report_submissions:
    post:
      tags:
        - Automations
      summary: Create or update Report Submission Automations
      description: |
        Create or update Report Submission Automations
      operationId: report_submission_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/automate_report_submission_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/automate_report_submission_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Automations
      summary: List Report Submission Automations
      operationId: report_submission_get
      description: |
        List Report Submission Automations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/automate_report_submission_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/automations/report_submissions/delete:
    post:
      tags:
        - Automations
      summary: Delete Report Submission Automation
      description: |
        Delete Report Submission Automation
      operationId: report_submission_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/delete_automate_report_submission_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/automate_report_submission_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/accounting_exports:
    get:
      tags:
        - Accounting Exports
      summary: List accounting exports
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: accounting_exports_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/accounting_export_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Accounting Exports
      summary: Create or update an accounting export
      operationId: accounting_export_post
      description: |
        Create or update an accounting export.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/accounting_export_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/accounting_export_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/accounting_export_lineitems:
    get:
      tags:
        - Accounting Exports
      summary: List accounting exports lineitems
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: accounting_export_lineitems_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/accounting_export_lineitem_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: accounting_export_lineitems_post
      tags:
        - Accounting Exports
      summary: Create or update an accounting export lineitem
      description: |
        Create or update an accounting export lineitem.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/accounting_export_lineitem_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/accounting_export_lineitem_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/accounting_export_lineitems/bulk:
    post:
      operationId: accounting_export_lineitems_bulk_post
      tags:
        - Accounting Exports
      summary: Create or update accounting export lineitems in bulk
      description: |
        Create or update accounting export lineitems in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              additionalProperties: false
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/accounting_export_lineitem_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      description: >
        This API gets you expenses submitted by any employee in the current
        organization.


        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: expenses_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/advance_requests:
    get:
      tags:
        - Advances
      summary: List advance requests
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: advance_requests_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/advances:
    get:
      tags:
        - Advances
      summary: List advances
      operationId: advances_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    post:
      tags:
        - Advances
      summary: Create or update an advances
      description: |
        Create or update an advances.
      operationId: advances_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/reminders:
    get:
      tags:
        - Reminders
      summary: List Reminders
      operationId: reminders_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/reminder_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: reminders_post
      tags:
        - Reminders
      summary: Create or update a reminder
      description: |
        Create or update a reminder.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/reminder_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/reminder_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/reminders/{id}:
    delete:
      tags:
        - Reminders
      summary: Delete a reminder
      description: |
        Delete a reminder.
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the reminder that needs to be deleted.
          schema:
            type: string
      operationId: reminders_delete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/reminder_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: reports_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/corporate_cards:
    get:
      tags:
        - Corporate Cards
      summary: List corporate cards
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: corporate_cards_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Corporate Cards
      summary: Create or update an corporate card
      description: |
        Create or update an corporate card.
      operationId: corporate_cards_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_cards/bulk:
    post:
      tags:
        - Corporate Cards
      summary: Create or update corporate cards in bulk
      description: |
        Create or update corporate cards in bulk
      operationId: corporate_cards_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/corporate_card_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/corporate_cards/assign:
    post:
      tags:
        - Corporate Cards
      summary: Assign corporate card to user
      description: |
        Assign a corporate card to a user
      operationId: corporate_cards_assign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_assign_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_cards/unassign:
    post:
      tags:
        - Corporate Cards
      summary: Unassign corporate card from user
      description: |
        Unassign a corporate card from a user
      operationId: corporate_cards_unassign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_id_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_unassign_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions:
    get:
      tags:
        - Corporate Card Transactions
      summary: List corporate card transactions
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: corporate_card_transactions_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_transaction_list_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Corporate Cards
      summary: Create or update corporate card transaction
      description: |
        Create or update an corporate card transactions.
      operationId: corporate_card_transactions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_post_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/bulk:
    post:
      tags:
        - Corporate Card Transactions
      summary: Bulk create or update corporate card transactions
      description: |
        Create or update corporate card transactions in bulk.
      operationId: corporate_card_transactions_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/corporate_card_transaction_in'
              required:
                - data
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/corporate_card_transactions/assign:
    post:
      tags:
        - Corporate Card Transactions
      summary: Assign a corporate card transaction
      description: |
        Assign corporate card transaction to a user.
      operationId: corporate_card_transactions_assign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_assign_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_assign_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/unassign:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unassign corporate card transaction
      description: |
        Unassign a corporate card transaction from a user.
      operationId: corporate_card_transactions_unassign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_unassign_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/mark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Mark a corporate card transaction as personal
      description: |
        Mark a corporate card transaction as personal
      operationId: corporate_card_transactions_mark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_mark_personal_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/unmark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmark a corporate card transaction which is marked as personal
      description: |
        Unmark a corporate card transaction which is marked as personal
      operationId: corporate_card_transactions_unmark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_unmark_personal_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Ignore a corporate card transaction
      description: |
        Ignore a corporate card transaction
      operationId: corporate_card_transactions_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_ignore_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/undo_ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Undo an ignored corporate card transaction
      description: |
        Undo an ignored corporate card transaction
      operationId: corporate_card_transactions_undo_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_undo_ignore_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/match:
    post:
      tags:
        - Corporate Card Transactions
      summary: Match corporate card transaction
      description: |
        Match corporate card transaction to expenses
      operationId: corporate_card_transactions_match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_match_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_match_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/corporate_card_transactions/unmatch:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmatch corporate card transaction
      description: |
        Unmatch a matched corporate card transaction
      operationId: corporate_card_transactions_unmatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_unmatch_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_unmatch_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/settlements:
    get:
      tags:
        - Settlements
      summary: List settlements
      operationId: settlements_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/settlement_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/reimbursements:
    get:
      tags:
        - Reimbursements
      summary: List reimbursements
      operationId: reimbursements_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/reimbursement_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/reimbursements/mark_paid/bulk:
    post:
      tags:
        - Reimbursements
      summary: Bulk mark paid reimbursements
      operationId: mark_paid_reimbursements_bulk
      description: |
        Marks reimbursement as paid and move reports to paid state.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/reimbursement_in_minimal'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/employee_account_summaries:
    get:
      tags:
        - Settlements
      summary: List employee accounts summaries
      operationId: employee_account_summaries_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/employee_account_summary_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/schedules:
    post:
      tags:
        - Schedules
      summary: Create or update a Schedule
      description: |
        Create or update a Schedule.
      operationId: schedules_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/schedule_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/schedule_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Schedules
      summary: List Schedule
      operationId: schedules_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schedule_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/spend_overview/summary:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview Summary
      operationId: spend_overview_summary
      description: >
        API to return spend overview summary data. Data returned by this API can
        be used to plot a time series graph depicting amount of spend over a
        period of time. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_granularity'
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/is_card_spend'
        - $ref: '#/components/parameters/is_reimbursable'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_interval_granularity:
                    $ref: '#/components/schemas/time_interval_granularity'
                  total_amount:
                    $ref: '#/components/schemas/total_amount'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spend_overview_summary_data_out'
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_merchant:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By Merchant
      operationId: spend_overview_by_merchant
      description: >
        API to return spend overview data grouped by merchant. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spend_overview_by_merchant_data_out'
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_project:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By Project
      operationId: spend_overview_by_project
      description: >
        API to return spend overview data grouped by project. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spend_overview_by_project_data_out'
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_category:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By Category
      operationId: spend_overview_by_category
      description: >
        API to return spend overview data grouped by category. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spend_overview_by_category_data_out'
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_department:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By Department
      operationId: spend_overview_by_department
      description: >
        API to return spend overview data grouped by department. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/spend_overview_by_department_data_out
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_user:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By User
      operationId: spend_overview_by_user
      description: >
        API to return spend overview data grouped by user of an org. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/corporate_card_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spend_overview_by_user_data_out'
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/spend_overview/by_corporate_card:
    get:
      tags:
        - Spend Overview
      summary: Spend Overview By Corporate Card
      operationId: spend_overview_by_corporate_card
      description: >
        API to return spend overview data grouped by corporate cards being used
        in an org. <br>

        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/time_interval_preset'
        - $ref: '#/components/parameters/time_interval_start'
        - $ref: '#/components/parameters/time_interval_end'
        - $ref: '#/components/parameters/merchant'
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/department_id'
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/spend_overview_by_corporate_card_data_out
        '202':
          description: Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/202'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '500':
          description: API Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /admin/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: accounts_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/account_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: accounts_post
      tags:
        - Accounts
      summary: Create an account
      description: |
        Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/account_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/account_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/tax_groups:
    get:
      tags:
        - Tax Groups
      summary: List tax groups
      operationId: tax_groups_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tax_group_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      operationId: tax_groups_post
      tags:
        - Tax Groups
      summary: Create or update a tax group
      description: |
        Create or update a tax group.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/tax_group_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/tax_group_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/tax_groups/bulk:
    post:
      operationId: tax_groups_bulk_post
      tags:
        - Tax Groups
      summary: Create or update tax groups in bulk
      description: |
        Create or update tax groups in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              additionalProperties: false
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/tax_group_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/budgets:
    post:
      tags:
        - Budgets
      summary: Create or update a Budget
      description: |
        Create or update a Budget
      operationId: budgets_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/budget_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/budget_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Budgets
      summary: List Budgets
      operationId: budgets_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/budget_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/budget_usages:
    get:
      tags:
        - Budgets
      summary: List Budget Usages
      operationId: budget_usages_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/budget_usage_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/orgs:
    get:
      tags:
        - Organisations
      summary: List Organisations
      operationId: orgs_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/org_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/expense_policy_rules:
    post:
      tags:
        - Expense Policies
      summary: Create or Update Expense Policy Rules
      description: >
        Create or Update Expense Policy Rules<br>

        **Apart from the required fields mentioned below, the request body
        should contain the following:**

        - You should choose at least one condition from **expense_*** or
        **employee_***.

        - You should choose at least one action from **action_***. <br><br>

        _When multiple conditions are provided, then there will AND operation in
        between them and the policy rule 

        will only be applicable on expenses if all of the conditions match.
        <br> 

        Similarly, for actions, if multiple actions are provided then all of the
        actions will be applied when conditions satisfy._
      operationId: expense_policy_rules_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_policy_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_policy_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      tags:
        - Expense Policies
      summary: Get Expense Policy Rules
      operationId: expense_policy_rules_get
      parameters:
        - in: query
          name: id
          description: >
            The id of the expense policy rule.<br>

            Supported operators are `eq`, `in`, `neq`, `not_in`.<br>

            id=eq."id" <br>

            id=in.("id1","id2","id3") <br>

            id=neq."id" <br>

            id=not_in.("id1","id2","id3")

            > If no id is passed then all the expense policy rules of the org
            will be returned.
          schema:
            type: string
            example: eq."tprmdNPsd"
        - in: query
          name: is_enabled
          description: |
            Whether to fetch only active expense policy rule.<br>
            Supported operators are `eq`.<br>
            is_enabled=eq.true <br>
            is_enabled=eq.false
          schema:
            type: string
            example: eq.true
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_policy_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/expense_policy_rules/enable:
    post:
      tags:
        - Expense Policies
      summary: Enable an Expense Policy Rule
      description: |
        Enable an Expense Policy Rule
      operationId: expense_policy_rules_enable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_policy_state_change_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_policy_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Object Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/expense_policy_rules/disable:
    post:
      tags:
        - Expense Policies
      summary: Disable an Expense Policy Rule
      description: |
        Disable an Expense Policy Rule
      operationId: expense_policy_rules_disable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_policy_state_change_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_policy_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Object Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/expense_policy_states:
    get:
      tags:
        - Expense Policies
      summary: Get policy states of Expenses
      description: |
        Get policy states of Expenses
      operationId: expense_policy_states_get
      parameters:
        - in: query
          name: expense_id
          description: >
            The id of the expense for which you are querying the policy
            states.<br>

            Supported operators are `eq`, `in`, `neq`, `not_in`.<br>

            expense_id=eq."id" <br>

            expense_id=in.("id1","id2","id3") <br>

            expense_id=neq."id" <br>

            expense_id=not_in.("id1","id2","id3")
          schema:
            type: string
            example: eq."txSdfsytrqw"
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_policy_states_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Object Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/statements:
    get:
      tags:
        - Statements
      summary: List Statements
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: statements_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/statements_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/statements/upload:
    post:
      tags:
        - Statements
      summary: Upload a statement
      description: >
        Upload a corporate card statement(csv or excel) to Fyle for
        reconciliation.
      operationId: statements_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/statements_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/statements_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/statement_mappings:
    get:
      tags:
        - Statement mappings
      summary: List of statement mappings
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: statement_mappings_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/statement_mappings_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/statements/suggest_mappings:
    post:
      tags:
        - Statements
      summary: Statement mapping suggestion
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: statement_mappings_suggest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    statement_id:
                      type: string
                      description: |
                        The id of the uploaded statement.
                  required:
                    - id
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: object
                    items:
                      $ref: '#/components/schemas/statement_mappings_suggest_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/statements/preview:
    post:
      tags:
        - Statements
      summary: Preview of the uploaded statement
      description: >
        This API helps in converting the statement with the mapping chosed and
        helps the user to preview it, this doesn't save the statement
      operationId: statements_preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/card_transaction_from_statement_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/preview_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /admin/statements/create_card_transactions:
    post:
      tags:
        - Statements
      summary: Create corporate card transactions out of the uploaded statement
      description: >
        This API helps in converting the statement with the mapping chosed and
        create card transactions out of the statement.
      operationId: statements_create_card_transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/card_transaction_from_statement_in'
              required:
                - data
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
