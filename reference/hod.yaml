openapi: 3.0.3
info:
  version: '1.0'
  title: Head of Department APIs
  termsOfService: https://www.fylehq.com/privacy/terms-and-conditions
  description: >
    These APIs are used by applications for Head of Department - typically to
    understand budget usages and analytics.
  contact:
    name: Platform Beta
    email: support@fylehq.com
servers:
  - url: https://us1.fylehq.com/platform/v1
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1
    description: India Region Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is invalid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    id_string:
      type: string
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    created_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was created in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was updated in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-11T13:14:55.201598+00:00'
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    id_integer:
      type: integer
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    name:
      type: string
      maxLength: 255
      description: >
        This represents the name of the resource. This should be unique in an
        organization
      example: foo123
    budget_type:
      nullable: false
      type: string
      enum:
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - HALF_YEARLY
        - YEARLY
        - ONE_TIME
      description: |
        Type of budgets 
      example: WEEKLY
    is_enabled:
      type: boolean
      description: >
        This indicates if the resource is enabled for use within the
        organisation.
      default: true
      example: true
    budget_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales Montly Budget
        type:
          $ref: '#/components/schemas/budget_type'
        amount_limit:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 10000
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    budget_usage_out:
      type: object
      required:
        - budget_id
        - budget_observer_ids
        - spent
        - amount_limit
        - budget
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/id_string'
        budget_id:
          $ref: '#/components/schemas/id_string'
        start_date:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T00.00.00Z
          description: Start date of the cycle of the budget
        end_date:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T00.00.00Z
          description: End date of the cycle of the budget
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        budget_observer_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - usge49ielgel
        spent:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 1000
        amount_limit:
          allOf:
            - $ref: '#/components/schemas/amount'
          example: 10000
        budget_department_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - 2222
            - 1221
          description: |
            List of department ids
        budget_project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids
        budget:
          $ref: '#/components/schemas/budget_out_embed'
tags:
  - name: Budget Usages
    description: |
      This API gives you insight of budgets in an organisation
paths:
  /hod/budget_usages:
    get:
      tags:
        - Budgets
      summary: List Budget Usages
      operationId: budget_usages_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/budget_usage_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
