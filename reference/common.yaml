openapi: 3.0.3
info:
  version: '3.0'
  title: Common APIs
  contact:
    name: Integrations
    email: support@fylehq.com
servers:
  - url: 'https://hulk.fyle.tech/platform/v1'
    description: Staging Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            '*': Grant all actions
  parameters:
    q:
      in: query
      name: q
      required: true
      description: >
        The query string on which to search. The service will return candidate
        matches based on this string and order results based on their perceived
        relevance.<br>

        q=bangalore
      schema:
        type: string
        example: bangalore
    types:
      in: query
      name: types
      required: true
      description: >
        The types of place results to return.<br>

        Note the `()` which represents the collection of multiple types.<br>

        For more information click <a
        href='https://developers.google.com/places/web-service/supported_types#table3'>here</a>.<br>

        types=(cities)
      schema:
        type: string
        example: (cities)
        enum:
          - (cities)
          - (regions)
          - geocode
          - address
          - establishment
    cordinates:
      in: query
      name: location
      description: >
        This param specifies the point around which you wish to retrieve place
        information.<br>

        location=latitude,longitude
      schema:
        type: string
        example: '26.595889,85.4891037'
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is valid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    place_out_minimal:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: It containes a textual identifier that uniquely identifies a place.
          example: ChIJify3BTzI5zsR2q86fwXrh74
        formatted_address:
          type: string
          example: '221 Baker St, Marylebone, London, United Kingdom'
    place_out:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: It containes a textual identifier that uniquely identifies a place.
          example: ChIJify3BTzI5zsR2q86fwXrh74
        city:
          type: string
          example: London
        state:
          type: string
          example: London
        country:
          type: string
          example: United Kingdom
        formatted_address:
          type: string
          example: '221 Baker St, Marylebone, London, United Kingdom'
        latitude:
          type: number
          example: 12.971599
        longitude:
          type: number
          example: 77.594566
    expense_extract_in:
      type: object
      properties:
        client:
          type: string
          maxLength: 255
          description: |
            Takes the platform name from where this API is requested.
          example: WEBAPP
        files:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 255
                description: |
                  Takes the name of the file which contains the receipt.
              content:
                type: string
                description: >
                  This field takes the base64 encoded representation of the
                  file.
                example: JVBERi0xLjQKMSAwIG9iago8PAovVGl0bGUgKP7/KQovQ3JlYX...
        meta:
          type: object
          description: |
            Additional optional data.
          properties:
            email:
              type: string
            spent_at:
              type: string
    timestamptz_utc:
      type: string
      nullable: true
      example: '2020-06-01T13:14:54.804+00:00'
    expense_extract_out:
      type: object
      properties:
        amount:
          type: number
          description: |
            Extracted expense amount from receipt.
          example: 1500
        category_name:
          type: string
          maxLength: 25
          description: |
            Extracted category of expense from receipt.
          example: Flight
        currency:
          type: string
          maxLength: 3
          example: USD
          description: >
            Extracted currency from the given receipt. <br>

            ISO 4217 currency codes that are usually of three upper case
            letters.

            See "https://www.iban.com/currency-codes" for examples.
        date:
          $ref: '#/components/schemas/timestamptz_utc'
        invoice_dt:
          $ref: '#/components/schemas/timestamptz_utc'
        vendor_name:
          type: string
          example: Uber
          maxLength: 255
          description: >
            Extracted string denoting the name of the vendor to which the
            expense was made
        source:
          type: string
          example: ROBOT
          description: |
            The name of the client which is extracting the data.
tags:
  - name: Places
    description: |
      These APIs gives the places suggestions and geographic data of a place.
  - name: Data Extraction
    description: |
      These APIs gives the expense relevant data from the reciepts
paths:
  /common/places:
    get:
      tags:
        - Places
      summary: List places
      description: |
        Lists all the place suggestions based on given query.
      operationId: places_list
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/types'
        - $ref: '#/components/parameters/cordinates'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/place_out_minimal'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  '/common/places/{id}':
    get:
      tags:
        - Places
      summary: Retrieve place details
      description: |
        Gives the exact geographic data for the given place id.
      operationId: places_get
      parameters:
        - in: path
          name: id
          required: true
          description: >
            It contains a textual identifier that uniquely identifies a
            place.<br>

            id=ChIJify3BTzI5zsR2q86fwXrh74
          schema:
            type: string
            example: ChIJify3BTzI5zsR2q86fwXrh74
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/place_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /common/expense_extract:
    post:
      tags:
        - Data Extraction
      summary: Retrieve expense data from receipt
      description: |
        Retrieve expense related data from the given receipt.
      operationId: post-vision-extract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_extract_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expense_extract_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
