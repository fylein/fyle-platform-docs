openapi: 3.0.3
info:
  version: '1.0'
  title: Approver APIs
  description: Fyle Platform Approver APIs
  contact:
    name: Integrations
    email: support@fylehq.com
servers:
  - url: 'https://hulk.fyle.tech/platform/v1'
    description: Staging Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            '*': Grant all actions
  parameters:
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000-08:00'
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000-08:00'
    last_approved_at:
      in: query
      name: last_approved_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    last_reimbursed_at:
      in: query
      name: last_reimbursed_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    last_submitted_at:
      in: query
      name: last_submitted_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    state:
      in: query
      name: state
      description: >
        Accepted states are DRAFT, COMPLETE, APPROVER_PENDING, APPROVED,
        PAYMENT_PENDING, PAYMENT_PROCESSING, PAID.<br>

        Supported operators are `eq`, `like`, `in`.<br>
      schema:
        type: string
        example: in.(COMPLETE)
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is valid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    id_string:
      type: string
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was created.
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was updated.
      example: '2020-06-11T13:14:55.201598+00:00'
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address of the employee.

        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
        822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: '([A-Z]{3})'
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
    report_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        last_reimbursed_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
    report_action_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of report that is to be approved
          example: rpa21A2rdj2
    reason:
      type: string
      description: |
        Explanation to the action if provided by the user
      example: All bills are in order
    is_enabled:
      type: boolean
      description: >
        This indicates if the resource is enabled for use within the
        organisation.
      default: true
      example: true
    webhook_url:
      type: string
      description: |
        URL Endpoint for webhook
      example: 'https://api.custom.com/webhook1'
    subscriptions_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - webhook_url
      properties:
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    approver_subscriptions_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        created_at:
          $ref: '#/components/schemas/created_at'
        approver_user_id:
          $ref: '#/components/schemas/fk_string'
    report_out_subscriptions:
      type: object
      additionalProperties: false
      properties:
        resource:
          type: string
          example: REPORT
        action:
          type: string
          enum:
            - PARTIALLY_APPROVED
            - SUBMITTED
            - APPROVER_ADDED
            - APPROVER_SENDBACK
            - APPROVED
            - APPROVER_REMOVED
            - PAYMENT_PENDING
            - PAYMENT_PROCESSING
            - PAID
            - COMMENTED
            - EXPENSES_ADDED
          example: APPROVED
        data:
          allOf:
            - $ref: '#/components/schemas/report_out'
            - type: object
              additionalProperties: false
              properties:
                updated_by_user:
                  $ref: '#/components/schemas/user_out_embed'
        reason:
          type: string
          example: comment given by Approver while approving the report.
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    advance_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advances.
            This id is always prefixed with `adv`.
          readOnly: true
          example: advkvnwrnpwi
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
    code:
      type: string
      nullable: true
      maxLength: 255
      description: >
        This represents a code that is typically used for syncing with other
        systems.
      example: C1234
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    id_integer:
      type: integer
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: '221 Baker St, Marylebone, London, United Kingdom'
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    timestamptz_utc:
      type: string
      nullable: true
      example: '2020-06-01T13:14:54.804+00:00'
    advance_request_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this advance request approval
    advance_request_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        policy_amount:
          type: number
          nullable: true
          description: |
            The advance request amount set by policy.
          example: 1500
        advance_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance:
          $ref: '#/components/schemas/advance_out_embed'
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - SENT_BACK
            - PULLED_BACK
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        is_policy_flagged:
          type: boolean
          nullable: true
          description: |
            Determines whether this report was flagged from a policy
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_approval_out_embed'
          description: |
            List of advance request approval objects
    advance_request_action_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of advance request that is to be approved
          example: rpa21A2rdj2
    card_transaction_match_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrn2
      required:
        - id
        - expense_ids
    foreign_currency:
      type: string
      nullable: true
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 3768
    card_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
    matched_expense_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        purpose:
          type: string
          nullable: true
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        matched_by_user_id:
          $ref: '#/components/schemas/user_id'
        matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was matched.
    string_detail:
      type: string
      description: >-
        Additional string details of the card transaction. Can hold details upto
        256 characters in length.
      nullable: true
      example: sample string
    double_precision_detail:
      type: number
      description: >-
        Additional floating point numeric details of the card transaction. Same
        as double precision.
      nullable: true
      example: 468.2923
    timestamp_detail:
      type: string
      format: date-time
      description: >
        Additional details of the card transaction. <a
        href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339, section
        5.6 compliant timestamp.</a>
      example: '2020-07-03T18:19:31.193Z'
    integer_detail:
      type: integer
      description: Additional integer details of the card transaction.
      nullable: true
      example: 5
    text_detail:
      type: string
      description: Additional text details of the card transaction.
      nullable: true
      example: sample text
    card_transaction_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        card:
          $ref: '#/components/schemas/card_out_embed'
        settlement_id:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: set7oisw24gju
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_personal_transaction:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_personal_transaction_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are auto-matically matched by the system
          example:
            - txwownwrng
        auto_matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
        user_matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched by the user
          example:
            - txwownwrn2
        user_matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        is_settled:
          type: boolean
          description: |
            Determines whether this card transaction is settled.
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last settled.
        merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_supplier_name:
          $ref: '#/components/schemas/string_detail'
        flight_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        flight_ticket_number:
          $ref: '#/components/schemas/string_detail'
        flight_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        flight_travel_date:
          $ref: '#/components/schemas/timestamp_detail'
        flight_service_class:
          $ref: '#/components/schemas/string_detail'
        flight_carrier_code:
          $ref: '#/components/schemas/string_detail'
        flight_fare_base_code:
          $ref: '#/components/schemas/string_detail'
        flight_trip_leg_number:
          $ref: '#/components/schemas/string_detail'
        hotel_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        hotel_supplier_name:
          $ref: '#/components/schemas/string_detail'
        hotel_check_in_date:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_nights:
          $ref: '#/components/schemas/integer_detail'
        hotel_checkout_date:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_country:
          $ref: '#/components/schemas/string_detail'
        hotel_city:
          $ref: '#/components/schemas/string_detail'
        hotel_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        fleet_product_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_product_supplier_name:
          $ref: '#/components/schemas/string_detail'
        fleet_service_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_service_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        car_rental_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_date:
          $ref: '#/components/schemas/timestamp_detail'
        car_rental_days:
          $ref: '#/components/schemas/integer_detail'
        car_return_date:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_issue_date:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_number:
          $ref: '#/components/schemas/string_detail'
        general_issuing_carrier:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_code:
          $ref: '#/components/schemas/string_detail'
        general_ticket_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        general_ticket_total_tax:
          $ref: '#/components/schemas/double_precision_detail'
        merchant_address:
          $ref: '#/components/schemas/text_detail'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - card_id
        - card
        - settlement_id
        - assignor_user_id
        - assignor
        - is_assigned
        - last_assigned_at
        - is_personal_transaction
        - last_personal_transaction_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_matched_expense_ids
        - auto_matched_expenses
        - auto_matched_at
        - user_matched_expense_ids
        - user_matched_expenses
        - last_user_matched_at
        - is_settled
        - last_settled_at
        - merchant_category_code
        - flight_merchant_category_code
        - flight_supplier_name
        - flight_travel_agency_name
        - flight_ticket_number
        - flight_total_fare
        - flight_travel_date
        - flight_service_class
        - flight_carrier_code
        - flight_fare_base_code
        - flight_trip_leg_number
        - hotel_merchant_category_code
        - hotel_supplier_name
        - hotel_check_in_date
        - hotel_nights
        - hotel_checkout_date
        - hotel_country
        - hotel_city
        - hotel_total_fare
        - fleet_product_merchant_category_code
        - fleet_product_supplier_name
        - fleet_service_merchant_category_code
        - fleet_service_supplier_name
        - car_rental_merchant_category_code
        - car_rental_supplier_name
        - car_rental_date
        - car_rental_days
        - car_return_date
        - general_ticket_issue_date
        - general_ticket_number
        - general_issuing_carrier
        - general_travel_agency_name
        - general_travel_agency_code
        - general_ticket_total_fare
        - general_ticket_total_tax
        - merchant_address
    card_transaction_unmatch_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrn2
      required:
        - id
        - expense_ids
    suggestions_in:
      type: object
      properties:
        org_id:
          allOf:
            - $ref: '#/components/schemas/org_id'
          readOnly: false
          example: orwruogwnngg
        user_id:
          allOf:
            - $ref: '#/components/schemas/user_id'
          readOnly: false
          example: uswjwgnwwgo
        amount:
          $ref: '#/components/schemas/amount'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
      required:
        - org_id
        - user_id
        - amount
        - spent_at
tags:
  - name: Reports
    description: |
      This API gives you access to your organisation's Expense Reports
  - name: Subscriptions
    description: |
      This API allows you to subscribe to different events.
  - name: Advances
    description: |
      This API gives you access to view your Issued Advances data.
  - name: Card Transactions
    description: |
      This API gives you access to perform action on Card Transactions.
  - name: Suggestions
    description: |
      This API gives you access to Expense Suggestions.
paths:
  /approver/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: get-reports
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/last_approved_at'
        - $ref: '#/components/parameters/last_reimbursed_at'
        - $ref: '#/components/parameters/last_submitted_at'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
        - in: query
          name: approvals
          description: >
            the approvals can be queried upon, for eg. to get reports which a
            certain approver still has to approve
          schema:
            type: string
            example: 'cs.[{"approver_id":"oulkAsh23","state":"APPROVAL_PENDING"}]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - offset
                  - data
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/reports/partially_approve:
    post:
      tags:
        - Reports
      summary: Approve reports
      description: Approve a report
      operationId: approve-reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_in'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: subscribe to different events using this API
      operationId: approver-subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/subscriptions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/approver_subscriptions_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
      callbacks:
        REPORT.*:
          '{$request.body#/data/webhook_url}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/report_out_subscriptions'
              responses:
                '200':
                  description: OK
  /approver/advance_requests:
    get:
      tags:
        - Advances
      summary: List advance requests
      operationId: list-advance-requests
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/advance_requests/partially_approve:
    post:
      tags:
        - Advances
      summary: Approve an advance request
      description: Approve an advance request
      operationId: approve-advance-request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_action_in'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/card_transactions/match:
    post:
      tags:
        - Card Transactions
      summary: Match card transaction
      description: |
        Match card transaction to expenses
      operationId: card_transactions_match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/card_transaction_match_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/card_transaction_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/card_transactions/unmatch:
    post:
      tags:
        - Card Transactions
      summary: Unmatch card transaction
      description: |
        Unmatch a matched card transaction
      operationId: card_transactions_unmatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/card_transaction_unmatch_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/card_transaction_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/suggestions/card_transactions:
    post:
      tags:
        - Suggestions
      summary: Get card transaction suggestions
      description: |
        Get card transaction suggestions to match with expenses
      operationId: suggestions_card_transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/suggestions_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/card_transaction_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
