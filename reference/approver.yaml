openapi: 3.0.3
info:
  version: '1.0'
  title: Approver APIs
  description: |
    These APIs are generally used by applications that want to enable approval of reports.
  contact:
    name: Platform Beta
    email: support@fylehq.com
servers:
  - url: https://us1.fylehq.com/platform/v1
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1
    description: India Region Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is invalid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: |
            This error means that the input access token is either not issued by Fyle or has expired.
            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: |
            This error means current user does not have enough permissions to perform this operation.
    '404':
      type: object
      properties:
        message:
          enum:
            - Resource not found
          type: string
          description: |
            This error means the requested resource was not found or the requester doesn't have sufficient access.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: |
        offset is used to skip that many number of objects before counting. <br>
        For example, if there are 2000 objects, <br>
        The first request will have offset as 0 and limit as 200 to return first 200 objects. <br>
        The second request will have offset as 200 and limit as 200 to return next 200 objects. <br>
      type: integer
      example: 10
    id_string:
      type: string
      maxLength: 15
      description: |
        This id is provided by Fyle to identify an object.
      example: sdfd2391
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was created in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was updated in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-11T13:14:55.201598+00:00'
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: |
        An immutable field that represents the email address of the employee.
        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee. Must be at least 3 characters.
          example: John Doe
    currency:
      type: string
      description: |
        The three-letter currency code following ISO standard <a href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: ([A-Z]{3})
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
        approver_order:
          type: integer
          description: |
            This number inidicates the order of the approver in the approval sequence for the report.
            The approver with the lowest approver_order is the first approver in the sequence.
          example: 1
    employee_id:
      type: string
      maxLength: 255
      description: |
        This id provided by Fyle to uniquely identify an employee within an organization.
        This id is always prefixed with `ou`.
      example: outGt9ju6qP
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    org_name:
      type: string
      maxLength: 255
      description: |
        This represents the name of the organization. This should be unique for all organizations
      example: foo123
    department_id:
      type: string
      maxLength: 255
      nullable: true
      example: dept9in4oIHpdR
    code:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents a code that is typically used for syncing with other systems.
      example: C1234
    name:
      type: string
      maxLength: 255
      description: |
        This represents the name of the resource. This should be unique in an organization
      example: foo123
    department_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        display_name:
          type: string
          example: Sales / Outbound Sales
          description: |
            This is a combination of name and sub_department separated by a / and spaces. In case if no sub_department is present it is same as name of the department.
    level_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          nullable: true
          description: |
            Band in which this level belongs to, you can group multiple levels into a single band.
          example: Associate
      required:
        - id
        - name
        - band
    has_accepted_invite:
      type: boolean
      description: |
        This boolean field represents whether the employee has accepted the current org's invite by verifying his/her email or not.
      example: true
    is_enabled:
      type: boolean
      description: |
        This indicates if the resource is enabled for use within the organisation.
      example: true
    phone_number:
      type: string
      example: '+12131234567'
      maxLength: 16
      description: |
        phone number is represented by +CC MMMMMM... where CC is the country code, and is one to three digits, and MMMMMM... is the area code (where applicable) and subscriber number Max 12 digits
      pattern: /^(\+\d{1,3}[- ]?)?\d{10}$/
    null_field:
      type: string
      nullable: true
    timestamptz_utc:
      type: string
      format: date-time
      nullable: true
      description: Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    joined_at:
      anyOf:
        - $ref: '#/components/schemas/null_field'
        - $ref: '#/components/schemas/timestamptz_utc'
      nullable: true
      description: |
        Date and time when the user joined the organization. Date-time will be in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
    employee_out_embed_for_report:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
        level:
          $ref: '#/components/schemas/level_out_embed'
        ach_account:
          additionalProperties: false
          type: object
          properties:
            added:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee has added ach account
            verified:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee's ach account is verified.
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        joined_at:
          $ref: '#/components/schemas/joined_at'
    user_out_embed_nullable:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee. Must be at least 3 characters.
          example: John Doe
    report_comments_out_embed:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - creator_user_id
        - creator_user
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        creator_user_id:
          $ref: '#/components/schemas/id_string'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
    advance_wallet_report_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        amount:
          $ref: '#/components/schemas/amount'
    report_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - user_id
        - user
        - purpose
        - currency
        - amount
        - tax
        - state
        - num_expenses
        - is_manually_flagged
        - is_policy_flagged
        - last_paid_at
        - last_approved_at
        - last_submitted_at
        - last_resubmitted_at
        - seq_num
        - source
        - approvals
        - employee
        - next_approver_user_ids
        - comments
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this report has been verified by a verifier
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            If physical has been collected for this report
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when the physical bill for this report was submitted.
          nullable: true
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been exported to external accounting system or not.
        last_paid_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        last_resubmitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was resubmitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed_for_report'
        next_approver_user_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - us123heh98
        state_display_name:
          type: string
          example: Sent Back
          description: readable state name
        comments:
          type: array
          items:
            $ref: '#/components/schemas/report_comments_out_embed'
          description: |
            List of comments on the report
        accounting_export_summary:
          type: object
          description: |
            Summary of accounting export for this report.
          properties:
            state:
              type: string
              enum:
                - COMPLETE
                - ERROR
                - IN_PROGRESS
                - SKIPPED
                - INITIATED
              example: COMPLETE
            skipped:
              type: number
              description: |
                Number of skipped expenses.
              example: 2
            error:
              type: number
              description: |
                Number of failed expenses.
              example: 0
            complete:
              type: number
              description: |
                Number of complete expenses.
              example: 5
            in_progress:
              type: number
              description: |
                Number of in progress expenses.
              example: 0
            initiate:
              type: number
              description: |
                Number of initiated expenses.
              example: 0
            tpa_id:
              type: string
              nullable: false
              description: |
                Third party app id.
              example: tpa_1234567890
        applied_advance_wallets:
          type: array
          items:
            $ref: '#/components/schemas/advance_wallet_report_out'
          nullable: true
          description: |
            List of applied advance wallets
    approver_report_in:
      type: object
      additionalProperties: false
      required:
        - purpose
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        purpose:
          type: string
          description: |
            Indicates purpose of the reports. It can only be updated for an existing report when the report is in `APPROVER_PENDING` state.
          example: '#1: Jun 2020'
    add_approver_in:
      type: object
      additionalProperties: false
      required:
        - id
        - approver_email
        - comment
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        approver_email:
          $ref: '#/components/schemas/email'
        comment:
          type: string
          description: |
            Specify why you are adding this approver
          example: Extra approval from finance required
    report_action_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of report that is to be approved
          example: rpa21A2rdj2
    reason:
      type: string
      description: |
        Explanation to the action if provided by the user
      example: All bills are in order
    bulk_error:
      type: object
      properties:
        error:
          type: string
          example: BulkError
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            type: object
            properties:
              row:
                type: integer
                description: |
                  This holds the info of which row contains bad data.
              key:
                oneOf:
                  - type: string
                  - type: integer
                description: |
                  This helps in identifying the error by unique key.
              message:
                type: string
                description: |
                  This explains what the error is in `human readable` text
    send_back_in:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: |
            Specify why you are sending back the report.
          example: Amount is incorrect
    query_params:
      type: string
      description: |
        This field contains the query param string similar to the query params passed in GET call for displaying data in the list view.
      example: state=eq.PAID
    reports_export_config_column_formula:
      type: object
      properties:
        function:
          type: string
          example: parse-format-time
        parameters:
          type: array
          items:
            anyOf:
              - type: object
              - type: string
              - type: number
              - type: integer
              - type: boolean
          example:
            - function: field
              parameters:
                - spent_at
            - yyyy-MM-dd'T'HH:mm:ss
            - dd-MM-yyyy
            - error in date formatting
      description: |
        Export column formula is a expression that is used to transform the data. Refer https://www.fylehq.com/help/en/articles/4422306-advanced-export-formulas for more details.
    reports_export_config:
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          enum:
            - xlsx
            - csv
            - pdf
          description: |
            Type of the export file.
          example: csv
        include_receipts:
          type: boolean
          description: |
            Whether to include receipts in the export file or not. Only required for PDF exports.
          example: true
        is_header_visible:
          type: boolean
          description: |
            Whether to show the header in the export file. Only required for CSV and XLSX exports.
          example: true
        separate_line_items_entry:
          type: object
          properties:
            enabled:
              type: boolean
              description: |
                Whether to show the double rows for each line item in the export file.
              example: false
            debit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for debit entries.
              example:
                - debit_amount
            credit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for credit entries.
              example:
                - credit_amount
          description: |
            Configure how to show the double rows for each line item in the export file, if enabled. Only required for CSV and XLSX exports.
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  Name of the column.
                example: Spent Date
              formula:
                allOf:
                  - $ref: '#/components/schemas/reports_export_config_column_formula'
                description: |
                  Formula to transform the data in the column.
          description: |
            Configure the columns to show in the export file. Only required for CSV and XLSX exports.
    reports_exports_out:
      type: object
      additionalProperties: false
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: refilumWHrlPf7K
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
        config:
          allOf:
            - $ref: '#/components/schemas/reports_export_config'
          nullable: false
        file_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: filumWHrlPf7K
        state:
          type: string
          nullable: false
          enum:
            - PENDING
            - PROCESSING
            - SUCCESS
            - ERROR
          description: |
            Status of the export.
          example: PENDING
    reports_exports_in:
      type: object
      additionalProperties: false
      required:
        - query_params
        - notify_emails
        - config
      properties:
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
          description: |
            List of emails to notify when the export is ready.
        config:
          allOf:
            - $ref: '#/components/schemas/reports_export_config'
          nullable: false
          description: |
            Configuration for the export.
    foreign_currency:
      type: string
      nullable: true
      description: |
        The three-letter currency code following ISO standard <a href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: |
        Amount value of the object, in original currency i.e the currency in which the object was initially created.
      example: 3768
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id is provided by Fyle to identify an object.
      example: 1234
    id_integer:
      type: integer
      description: |
        This id is provided by Fyle to identify an object.
      example: 1234
    cost_center_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
    category_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          nullable: true
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Engine / Turbo charged
          description: |
            This is a combination of name and sub_category separated by a / and spaces. In case if no sub_category is present it is same as name of the category.
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Fast and Furious / Formula One
          description: |
            This is a combination of name and sub_project separated by a / and spaces.
            In case if no sub_project is present it is same as name of the project.
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id is provided by Fyle to identify an object.
      example: sdfd2391
    account_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
    mileage_rate_out_embed_for_expense:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          example: Audi
        code:
          $ref: '#/components/schemas/code'
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
    per_diem_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    expense_custom_field:
      type: object
      description: |
        Expense custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
        type:
          type: string
          nullable: true
          enum:
            - TEXT
            - NUMBER
            - SELECT
            - BOOLEAN
            - MULTI_SELECT
            - LOCATION
            - USER_LIST
            - DATE
            - DEPENDENT_SELECT
            - null
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        is_enabled:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/is_enabled'
          nullable: true
    expense_custom_fields:
      type: array
      description: |
        Expense custom fields
      items:
        $ref: '#/components/schemas/expense_custom_field'
    flattened_custom_field:
      type: object
      description: |
        Custom fields in object format with keys as the name of the custom field and value as the value of the custom field. This is done to make it easier to query the custom fields.

        Example: `[{"name": "Custom Field 1", "value": "Value 1"}]` is flattened to `{"custom_field_1": "Value 1"}`

        NOTE: Key name is converted to snake case and spaces are replaced with underscores.
      nullable: false
      additionalProperties: true
      properties:
        cf1:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - string1
                - string2
      example:
        cf1: string1
        custom_field_2: Value 2
    report_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - last_approved_at
        - last_submitted_at
        - seq_num
        - title
        - state
        - last_paid_at
        - reimbursement_id
        - reimbursement_seq_num
      properties:
        id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: rpvgnwlgw34
        last_approved_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was approved.
        last_submitted_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was submitted.
        seq_num:
          type: string
          nullable: true
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        title:
          type: string
          nullable: true
          description: purpose for creating the report
          example: Business trip to London
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
            - null
          nullable: true
        amount:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/amount'
          nullable: true
        last_paid_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was reimbursed.
        last_verified_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was verified.
        reimbursement_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Reimbursement.
          example: reimntGt9ju6qP
        reimbursement_seq_num:
          type: string
          nullable: true
          description: |
            A unique, organization wide identifier for a particular reimbursement.<br>
            This id is always prefixed with `P/`.
          example: P/2020/11/29
        approvals:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
    file_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: figwiwpjww
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: application/pdf
    expense_policy_comment_out_embed:
      type: object
      additionalProperties: false
      required:
        - id
        - comment_type
        - comment_text
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: epc1a2f3farmk
        comment_type:
          type: string
          description: Type of the policy comment
        comment_text:
          type: string
          description: Text content of the policy comment
    expense_verification_out_embed:
      type: object
      additionalProperties: false
      properties:
        verifier_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        verifier_user:
          $ref: '#/components/schemas/user_out_embed'
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    employee_out_embed_for_expense:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
        level:
          $ref: '#/components/schemas/level_out_embed'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        custom_fields:
          type: array
          nullable: true
          description: |
            Custom fields
          items:
            $ref: '#/components/schemas/custom_field'
        flattened_custom_field:
          $ref: '#/components/schemas/flattened_custom_field'
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        joined_at:
          $ref: '#/components/schemas/joined_at'
      description: |
        NOTE: The data of this field is not realtime. It will get updated later even if `employee_id` is already up-to-date.
    card_number:
      type: string
      description: |
        Specifies the masked number of the card.
        Add only masked card-numbers, last four digits of the card.
      example: xxxx-4543
    bank_name:
      type: string
      description: |
        Specifies the name of bank who issued the card.
      example: Bank of America
    name_nullable:
      type: string
      maxLength: 255
      nullable: true
      description: |
        This represents the name of the resource. This should be unique in an organization
      example: foo123
    timestamptz_pst:
      type: string
      format: date-time
      nullable: true
      description: Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T01:18:19.292-08:00'
    spent_at:
      allOf:
        - $ref: '#/components/schemas/timestamptz_pst'
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the vendor to which the expense was made.
      example: Uber
    matched_corporate_card_transaction_out_embed:
      type: object
      nullable: true
      required:
        - id
        - corporate_card_id
        - corporate_card_number
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card_number:
          $ref: '#/components/schemas/card_number'
        corporate_card_nickname:
          type: string
          maxLength: 25
          nullable: true
          description: |
            Unique nickname assigned to the card
          example: Business Card
        corporate_card_cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        masked_corporate_card_number:
          $ref: '#/components/schemas/card_number'
        bank_name:
          nullable: true
          $ref: '#/components/schemas/bank_name'
        corporate_card_user_full_name:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/name_nullable'
          maxLength: 255
          description: |
            String denoting the card holder's full name
          example: John Doe
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          description: |
            Signifies spent date of a card transaction.
            This date cannot be in future.
        posted_at:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies post date of a card transaction.
            This date cannot be in future.
        status:
          type: string
          nullable: true
          enum:
            - PENDING
            - POSTED
            - null
          example: PENDING
          description: |
            Signifies status of a card transaction.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/foreign_amount'
        merchant:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/merchant'
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        matched_by:
          type: string
          nullable: true
          description: |
            String denoting the email of the user who matched the card transaction to an expense.
          example: john.ooe@fyle.in
    missing_mandatory_fields:
      type: object
      nullable: false
      properties:
        expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
        amount:
          type: boolean
          nullable: false
          description: |
            This field shows whether the amount field is present in the expense or not
        currency:
          type: boolean
          nullable: false
          description: |
            This field shows whether the currency field is present in the expense or not
      description: |
        This object contains all the fields which are mandatory bu tare missing in the expense.
    activity_details:
      type: object
      nullable: true
      properties:
        unique_meetings:
          type: number
          nullable: false
          example: 21
        total_meetings:
          type: number
          nullable: false
          example: 70
    extracted_data:
      type: object
      nullable: true
      properties:
        amount:
          type: number
          nullable: true
          example: 21
        vendor_name:
          type: string
          nullable: true
          example: Uber
        currency:
          type: string
          nullable: true
          example: USD
        category:
          type: string
          nullable: true
          example: Taxi
        date:
          type: string
          nullable: true
          example: '2020-07-20'
    split_group_amount:
      type: number
      nullable: true
      description: |
        The amount of expense before splitting.
      example: 3768
    is_billable:
      type: boolean
      nullable: true
      example: true
      description: This field marks whether a given expense is billable or not.
    dependent_expense_fields:
      type: object
      description: |
        Dependent expense fields details
      properties:
        parent_expense_field_id:
          type: integer
          description: |
            This id provided by Fyle to identify the parent expense field.
          example: 123
        dependent_expense_field_id:
          type: integer
          description: |
            This id provided by Fyle to identify the dependent expense field.
          example: 123
        dependent_expense_field_value_id:
          type: integer
          description: |
            This id provided by Fyle to identify dependent field value.
          example: 123
        name:
          type: string
          description: |
            This represents the name of the dependent expense field.
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    expense_rule_data_in:
      type: object
      nullable: true
      additionalProperties: false
      minProperties: 1
      properties:
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the merchant to which the Expense was made.
          example: Amazon
        is_billable:
          $ref: '#/components/schemas/is_billable'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 92895
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 1049
        custom_fields:
          type: array
          nullable: true
          description: |
            Custom fields
          items:
            $ref: '#/components/schemas/custom_field'
        dependent_fields:
          type: array
          nullable: true
          description: |
            Dependent expense fields
          items:
            $ref: '#/components/schemas/dependent_expense_fields'
    tax_group:
      type: object
      nullable: true
      description: |
        Tax group details.
      properties:
        name:
          type: string
          nullable: true
          description: |
            Name of the tax group.
          example: GST
        percentage:
          type: number
          nullable: true
          description: |
            Tax percentage.
          example: 5
    policy_checks:
      type: object
      description: |
        Policy checks details.
        NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
      properties:
        is_amount_limit_applied:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense amount is capped based on the policy calculation.
          example: true
        are_approvers_added:
          type: boolean
          description: |
            A true value here means, approvers are added to the expense based on the policy calculation.
          example: true
        is_flagged_ever:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense is flagged.
          example: true
        violations:
          type: array
          nullable: true
          description: |
            List of policy violations on this expense.
          items:
            type: object
            properties:
              policy_rule_description:
                type: string
                description: |
                  Description of the policy rule.
                example: Expense amount is greater than the policy limit
              policy_rule_id:
                allOf:
                  - $ref: '#/components/schemas/id_string'
                description: |
                  ID of the policy rule.
                example: tprCCiQiiuJZs
    commute_location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: false
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: false
          example: 12.971599
        longitude:
          type: number
          nullable: false
          example: 77.594566
    commute_details:
      type: object
      nullable: true
      description: |
        Commute details of the employee. This is used to deduct daily commute from the employee's mileage expenses.
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
        home_location:
          allOf:
            - $ref: '#/components/schemas/commute_location'
          description: |
            Home location of the employee.
          nullable: true
        work_location:
          allOf:
            - $ref: '#/components/schemas/commute_location'
          description: |
            Work location of the employee.
          nullable: true
        distance:
          type: number
          nullable: true
          description: |
            Distance between home and work location of the employee.
          example: 10.55
        distance_unit:
          type: string
          nullable: true
          description: |
            Unit of distance.
          enum:
            - KM
            - MILES
            - null
          example: MILES
    expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - user_id
        - user
        - org_id
        - created_at
        - updated_at
        - spent_at
        - source
        - merchant
        - currency
        - amount
        - claim_amount
        - policy_amount
        - admin_amount
        - foreign_currency
        - foreign_amount
        - purpose
        - cost_center_id
        - cost_center
        - category_id
        - category
        - project_id
        - project
        - source_account_id
        - advance_wallet_id
        - source_account
        - tax_amount
        - tax_group_id
        - is_billable
        - is_reimbursable
        - distance
        - distance_unit
        - mileage_calculated_distance
        - mileage_calculated_amount
        - mileage_rate_id
        - mileage_rate
        - mileage_is_round_trip
        - per_diem_rate_id
        - per_diem_rate
        - per_diem_num_days
        - started_at
        - ended_at
        - travel_classes
        - hotel_is_breakfast_provided
        - locations
        - custom_fields
        - code
        - state
        - state_display_name
        - seq_num
        - report_id
        - added_to_report_at
        - report
        - is_verified
        - last_verified_at
        - is_receipt_mandatory
        - is_exported
        - last_exported_at
        - file_ids
        - files
        - employee
        - is_corporate_card_transaction_auto_matched
        - matched_corporate_card_transaction_ids
        - matched_corporate_card_transactions
        - last_settled_at
        - missing_mandatory_fields
        - activity_details
        - creator_user_id
        - extracted_data
        - is_manually_flagged
        - is_policy_flagged
        - split_group_id
        - is_physical_bill_submitted
        - physical_bill_submitted_at
        - invoice_number
        - is_duplicate_present
        - expense_policy_comments
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        source:
          type: string
          description: |
            The name of the client app which is creating the expense.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: SLACK_APP
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the merchant to which the Expense was made.
          example: Uber
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          type: number
          nullable: true
          description: |
            The amount for which the expense was/will-be fyled.
            The amount will be in the currency that the organization's home currency.<br>

            Note that, this field is calculated from admin_amount, policy_amount, claim_amount.

            if admin_amount is present then this value will be same admin_amount.
            if policy_amount is present then this value will be same policy_amount.
            else this should be same as claim_amount.
          example: 1500
        claim_amount:
          type: number
          nullable: true
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        policy_amount:
          type: number
          nullable: true
          description: |
            The expense amount set by policy.
          example: 1500
        admin_amount:
          type: number
          nullable: true
          description: |
            The expense amount which is modified by admin or approver.
            This could be null if admin or approver has not edited your expense.
          example: null
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        cost_center:
          $ref: '#/components/schemas/cost_center_out_embed'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        category:
          $ref: '#/components/schemas/category_out_embed'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        project:
          $ref: '#/components/schemas/project_out_embed'
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        source_account:
          $ref: '#/components/schemas/account_out_embed'
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          type: boolean
          nullable: true
          example: true
          description: This fields marks whether a given expense is billable a not.
        is_reimbursable:
          type: boolean
          description: This fields marks whether a given expense is reimbursable a not.
          example: true
        distance:
          type: number
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          type: string
          nullable: true
          description: Unit of distance travelled.
          enum:
            - KM
            - MILES
            - null
          example: MILES
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance computed by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount computed by Fyle in mileage expenses.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 9080
        mileage_rate:
          $ref: '#/components/schemas/mileage_rate_out_embed_for_expense'
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
        per_diem_rate:
          $ref: '#/components/schemas/per_diem_rate_out_embed'
        per_diem_num_days:
          type: number
          nullable: true
          description: |
            Specific to per diem related expenses, number of days for which per diem claim is made.
          example: 2
        started_at:
          $ref: '#/components/schemas/timestamptz_utc'
        ended_at:
          $ref: '#/components/schemas/timestamptz_utc'
        travel_classes:
          description: |
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
            index 0 holds onward journey class, index 1 holds return journey travel class.
          type: array
          minItems: 0
          maxItems: 2
          items:
            type: string
          example:
            - ECONOMY
            - BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        locations:
          description: |
            This field will be present for travel related categories.
            For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
            For travel between Place A to Place c and stopping at Place B, this
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/location'
        custom_fields:
          $ref: '#/components/schemas/expense_custom_fields'
        custom_fields_flattened:
          $ref: '#/components/schemas/flattened_custom_field'
        code:
          type: string
          nullable: true
          description: |
            Id given by external systems like Gmail. To identify whether that entity
            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
            - UNREPORTABLE
          description: The state of the Expense.
        state_display_name:
          type: string
          example: Sent Back
          description: readable state name
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report.
          example: rpvgnwlgw34
        added_to_report_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was added to a report.
            If this expense is not added to a report, then this could be null.
        report:
          $ref: '#/components/schemas/report_out_embed'
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been verified by a verifier.
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was verified.
        is_receipt_mandatory:
          type: boolean
          nullable: true
          description: |
            Determines whether a receipt is missing for this expense when it is required.
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been exported to external accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: signifies when this expense was exported to an external accounting system.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
        expense_policy_comments:
          type: array
          items:
            $ref: '#/components/schemas/expense_policy_comment_out_embed'
          description: |
            List of expense policy comment objects
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/expense_verification_out_embed'
          description: |
            List of verification objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          nullable: true
          $ref: '#/components/schemas/employee_out_embed_for_expense'
        is_corporate_card_transaction_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this corporate card transaction is auto_matched.
        matched_corporate_card_transaction_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the corporate card transaction ids which are matched to this expense
          example:
            - btxnwownwrng
        matched_corporate_card_transactions:
          type: array
          items:
            $ref: '#/components/schemas/matched_corporate_card_transaction_out_embed'
          description: |
            Holds the corporate card transactions which are matched to this expense.
            NOTE: The data of this field is not realtime. It will get updated later even if `matched_corporate_card_transaction_ids` is already up-to-date.
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last settled.
        missing_mandatory_fields:
          $ref: '#/components/schemas/missing_mandatory_fields'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        activity_details:
          $ref: '#/components/schemas/activity_details'
        extracted_data:
          $ref: '#/components/schemas/extracted_data'
        is_manually_flagged:
          type: boolean
          nullable: true
          description: This fields marks whether a given expense is manually flagged or not.
          example: true
        is_policy_flagged:
          type: boolean
          nullable: true
          description: This fields marks whether a given expense is flagged by policy or not.
          example: true
        split_group_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id provided by Fyle to identify an object.
          example: txwownwrngx
        split_group_amount:
          $ref: '#/components/schemas/split_group_amount'
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            This fields marks if physical has been collected for the given expense.
          example: true
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when the physical bill for this report was submitted.
          nullable: true
        expense_rule_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id is provided by Fyle to identify an Expense Rule.
          example: ervgnwlgw34
        expense_rule_data:
          $ref: '#/components/schemas/expense_rule_data_in'
        is_split:
          type: boolean
          nullable: true
          description: |
            Whether the expense is split.
          example: true
        tax_group:
          $ref: '#/components/schemas/tax_group'
        approver_comments:
          type: array
          description: |
            Comments added by approvers.
            NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
          items:
            type: string
          example:
            - This is a comment by approver
        verifier_comments:
          type: array
          description: |
            Comments added by verifiers.
            NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
          items:
            type: string
          example:
            - This is a comment by verifier
        policy_checks:
          $ref: '#/components/schemas/policy_checks'
        accounting_export_summary:
          type: object
          description: |
            Summary of accounting export for this expense.
          properties:
            state:
              type: string
              enum:
                - COMPLETE
                - ERROR
                - IN_PROGRESS
                - SKIPPED
                - INITIATED
              example: COMPLETE
            error_type:
              type: string
              nullable: true
              enum:
                - ACCOUNTING_INTEGRATION_ERROR
                - MAPPING
                - null
              example: ACCOUNTING_INTEGRATION_ERROR
            url:
              type: string
              description: URL Endpoint for exported / failed expense
              example: https://app.example.com/expense/txwownwrng
            tpa_id:
              type: string
              nullable: false
              description: |
                Third party app id.
              example: tpa_1234567890
        report_last_paid_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when report of this expense was reimbursed.
        report_last_approved_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when report of this expense was approved.
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
        commute_deduction:
          type: string
          nullable: true
          maxLength: 12
          description: |
            Commute deduction type of the expense.
          example: ONE_WAY
          enum:
            - ONE_WAY
            - ROUND_TRIP
            - NO_DEDUCTION
            - null
        commute_details_id:
          type: integer
          nullable: true
          description: |
            Commute details id of the expense. This id is provided by Fyle to identify a commute details.
          example: 1234
        commute_details:
          $ref: '#/components/schemas/commute_details'
        is_duplicate_present:
          type: boolean
          nullable: false
          description: |
            Whether duplicate expenses is detected for this expense or not.
          example: true
    source:
      type: string
      description: |
        This value signifies the client from which this expense was created
      example: SLACK
    is_reimbursable:
      type: boolean
      nullable: true
      description: This field marks whether a given expense is reimbursable or not.
      example: true
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      nullable: true
      description: Unit of distance travelled.
      enum:
        - KM
        - MILES
      example: MILES
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus` category.
        Index 0 holds onward journey travel class, index 1 holds return journey travel class.
      type: array
      minItems: 0
      maxItems: 2
      nullable: true
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items. From location at array index i and To location at array index i+1.
      type: array
      nullable: true
      minItems: 0
      maxItems: 10
      items:
        type: object
        nullable: true
        properties:
          city:
            type: string
            nullable: true
            example: London
          state:
            type: string
            nullable: true
            example: London
          display:
            type: string
            nullable: true
          country:
            type: string
            nullable: true
            example: United Kingdom
          formatted_address:
            type: string
            nullable: true
            example: 221 Baker St, Marylebone, London, United Kingdom
          latitude:
            type: number
            nullable: true
            example: 12.971599
          longitude:
            type: number
            nullable: true
            example: 77.594566
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    approver_expense_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This id is provided by Fyle to identify an object.
        admin_amount:
          type: number
          nullable: false
          description: |
            The expense amount which is added or modified by admin or approver.
            - **Note:**
              - _This field is non-nullable_. 
          example: 1900
        spent_at:
          type: string
          format: date-time
          nullable: false
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
            - **Note:**
              - _This field is non-nullable_. 
          example: '2020-06-01T01:18:19.292-08:00'
        source:
          $ref: '#/components/schemas/source'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            Specific to mileage expense. This represents the Mileage's rate id given by Fyle
            during creation of mileage rate for which this expense is created.
          nullable: true
          example: 9080
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance computed by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount computed by Fyle in mileage expenses.
        commute_details_id:
          type: integer
          nullable: true
          description: |
            Commute details id of the expense. This id is provided by Fyle to identify a commute details.
          example: 1234
        commute_deduction:
          type: string
          nullable: true
          maxLength: 12
          description: |
            Commute deduction type of the expense.
          example: ONE_WAY
          enum:
            - ONE_WAY
            - ROUND_TRIP
            - NO_DEDUCTION
            - null
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
          description: |
            Specific to per diem expense. This represents the per diem's rate id given by Fyle
            during creation of per diem rate for which this expense is created. <br>
            This field is required for creating Per Diem Expenses.
        per_diem_num_days:
          type: number
          nullable: true
          example: 2
          description: |
            Specific to per diem related expenses, number of days for which per diem claim is made. <br>
            This field is required for creating Per Diem Expenses.
    attach_files_to_expense_in:
      type: object
      required:
        - id
        - file_ids
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txsjfwlrglw
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
          description: List of files to be attached to the expense
    expense_permissions_in:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Expense ID of the expense to check permissions for.
          example: tx0agOdICdbV
    expense_permissions_out:
      type: object
      required:
        - can_delete
        - can_edit
        - can_verify
        - can_remove_from_report
        - can_assign
        - can_add_to_report
      properties:
        can_delete:
          type: boolean
          description: |
            Indicates whether the user has permission to delete this expense.
          example: false
        can_edit:
          type: boolean
          description: |
            Indicates whether the user has permission to edit this expense.
          example: true
        can_verify:
          type: boolean
          description: |
            Indicates whether the user has permission to verify this expense.
          example: true
        can_remove_from_report:
          type: boolean
          description: |
            Indicates whether the user has permission to remove this expense from a report.
          example: false
        can_assign:
          type: boolean
          description: |
            Indicates whether the user has permission to assign this expense to another user.
          example: false
        can_add_to_report:
          type: boolean
          description: |
            Indicates whether the user has permission to add this expense to a report.
          example: true
    report_action_with_expenses_ids_to_eject:
      type: object
      additionalProperties: false
      required:
        - id
        - expense_ids
      properties:
        id:
          type: string
          description: |
            id of report, from which the expenses are to be ejected
          example: rpa21A2rdj2
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    filter_name:
      type: string
      nullable: false
      maxLength: 255
      description: |
        This represents the name of the filter.
      example: Code E0101
    is_shared:
      type: boolean
      nullable: true
      description: |
        This indicates if the filter should be shared with others in the org.
      default: false
      example: true
    query_string:
      type: string
      nullable: false
      maxLength: 255
      description: |
        This represents a query string which will be used to filter the data.
      example: code.eq.'E0101'
    sub_feature:
      type: string
      description: |
        This field can be used to setup a collection of filters. For example, if you have multiple filters
        for a single page, this can be used as an identifier to fetch all the filters for that page. <br>
        **Note: Only combination of alphabets, numbers and _(underscore) is allowed**
      nullable: true
      example: flagged_expenses
    report_filters_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpfilumWHrlPf7K
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    report_filters_in:
      type: object
      additionalProperties: false
      required:
        - name
        - query_string
      properties:
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
    report_filters_delete_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpfilumWHrlPf7K
    reports_stats_in:
      properties:
        query_params:
          type: string
          description: |
            Query param string similar to reports GET call. Use group_by_state=eq.true to get state-wise grouping of stats.
          nullable: false
          example: id=in.('rp123','rep1234')&group_by_state=eq.true
    reports_stats_out:
      oneOf:
        - type: array
          title: State-wise grouped stats
          description: Stats grouped by report state
          items:
            type: object
            required:
              - count
              - total_amount
              - state
              - failed_amount
              - failed_count
              - processing_amount
              - processing_count
              - reimbursable_amount
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching reports in this state.
                example: 5
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching reports in this state.
                example: 2200
              state:
                type: string
                enum:
                  - APPROVER_PENDING
                  - DRAFT
                  - PAYMENT_PROCESSING
                  - APPROVER_INQUIRY
                  - APPROVED
                  - PAYMENT_PENDING
                  - PAID
                description: Report state.
              failed_amount:
                type: number
                nullable: true
                description: Sum of reimbursable amount for ACH-failed reports, applicable only in PAYMENT_PROCESSING state.
                example: 200
              failed_count:
                type: integer
                nullable: true
                description: Count of ACH-failed reports, applicable only in PAYMENT_PROCESSING state.
                example: 1
              processing_amount:
                type: number
                nullable: true
                description: Sum of reimbursable amount for processing reports, applicable only in PAYMENT_PROCESSING state.
                example: 1500
              processing_count:
                type: integer
                nullable: true
                description: Count of processing reports, applicable only in PAYMENT_PROCESSING state.
                example: 3
              reimbursable_amount:
                type: number
                nullable: false
                description: Sum of reimbursable amounts for matching reports in this state.
                example: 500
        - type: object
          title: Overall stats
          description: Overall stats without state grouping (response for older mobile app versions).
          required:
            - count
            - total_amount
            - processing_amount
            - processing_count
            - failed_amount
            - failed_count
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching reports.
              example: 1
            total_amount:
              type: number
              nullable: false
              description: Total sum of amounts for all matching reports.
              example: 100
            processing_amount:
              type: number
              nullable: true
              description: Sum of reimbursable amounts for reports in processing state.
              example: 101
            processing_count:
              type: integer
              nullable: true
              description: Count of reports in processing state.
              example: 2
            failed_amount:
              type: number
              nullable: true
              description: Sum of reimbursable amounts for reports in processing state with ACH failures.
              example: 101
            failed_count:
              type: integer
              nullable: true
              description: Count of reports in processing state with ACH failures.
              example: 1
      example:
        - state: DRAFT
          count: 3
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 200
          total_amount: 350
        - state: APPROVER_PENDING
          count: 5
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 500
          total_amount: 2200
        - state: PAYMENT_PROCESSING
          count: 5
          failed_amount: 200
          failed_count: 1
          processing_amount: 1500
          processing_count: 3
          reimbursable_amount: 500
          total_amount: 2200
        - state: PAID
          count: 0
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 0
          total_amount: 0
    report_comments_in:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
      properties:
        id:
          type: string
          description: |
            id of the report, on which need to add comment
          example: rpa21A2rdj2
        comment:
          type: string
          description: |
            comment on the report
          example: We don't accept laundry bills
    report_comments_out:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - report_id
        - creator_user_id
        - creator_user
        - created_at
        - org_id
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        report_id:
          $ref: '#/components/schemas/id_string'
        creator_user_id:
          $ref: '#/components/schemas/id_string'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/id_string'
    report_permissions_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    report_permissions_out:
      type: object
      additionalProperties: false
      required:
        - can_edit
        - can_admin_or_approver_edit
        - can_delete
        - can_submit
        - can_export
        - can_resubmit
        - can_approve
        - can_admin_approve
        - can_send_back
        - can_verify
        - can_move_to_payment_pending
        - can_add_approver
        - can_remove_approver
      properties:
        can_edit:
          type: boolean
          example: true
        can_admin_or_approver_edit:
          type: boolean
          example: true
        can_delete:
          type: boolean
          example: true
        can_submit:
          type: boolean
          example: true
        can_export:
          type: boolean
          example: true
        can_resubmit:
          type: boolean
          example: true
        can_approve:
          type: boolean
          example: true
        can_admin_approve:
          type: boolean
          example: true
        can_send_back:
          type: boolean
          example: true
        can_verify:
          type: boolean
          example: true
        can_move_to_payment_pending:
          type: boolean
          example: true
        can_add_approver:
          type: boolean
          example: true
        can_remove_approver:
          type: boolean
          example: true
    round_off_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    webhook_url:
      type: string
      description: |
        URL Endpoint for webhook
      example: https://api.custom.com/webhook1
    approver_subscriptions_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        created_at:
          $ref: '#/components/schemas/created_at'
        approver_user_id:
          $ref: '#/components/schemas/fk_string'
    subscriptions_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - webhook_url
      properties:
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
    report_out_subscriptions_approver:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - data
        - reason
      properties:
        resource:
          type: string
          example: REPORT
        action:
          type: string
          enum:
            - SUBMITTED
            - COMMENTED
          example: SUBMITTED
        data:
          allOf:
            - $ref: '#/components/schemas/report_out'
            - type: object
              additionalProperties: false
              properties:
                updated_by_user:
                  $ref: '#/components/schemas/user_out_embed'
        reason:
          type: string
          example: Spender submitted the report.
    advance_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advances.
            This id is always prefixed with `adv`.
          readOnly: true
          example: advkvnwrnpwi
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
    advance_request_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
            - APPROVAL_REJECTED
          description: |
            State of this advance request approval
    employee_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
    user_id_nullable:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      nullable: true
      example: uswjwgnwwgo
    advance_request_comments_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: A comment on the advance request
          example: Advance request was created
        action:
          type: string
          description: Advance request action for which comment is added.
          example: SUBMITTED
        advance_request_id:
          $ref: '#/components/schemas/id_string'
        creator_type:
          type: string
          description: Describes whether the comment is system-generated or User made.
          enum:
            - SYSTEM
            - POLICY
            - USER
          example: USER
        creator_user_id:
          $ref: '#/components/schemas/user_id_nullable'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/org_id'
    advance_request_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance:
          $ref: '#/components/schemas/advance_out_embed'
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: |
            The name of the client app from which this advance was created.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: WEBAPP
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - SENT_BACK
            - PULLED_BACK
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_approval_out_embed'
          description: |
            List of advance request approval objects
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this advance request has been exported to external accounting system or not.
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_comments_out'
          description: |
            List of comments in the advance request
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
    advance_requests_approver_stats_in:
      properties:
        query_params:
          description: |
            Query param string similar to advance_requests GET call. Use group_by_currency=eq.true to get currency-wise grouping of stats.
          nullable: false
          example: id=in.('adr1263','adr1569')&group_by_currency=eq.true
    advance_requests_approver_stats_out:
      oneOf:
        - type: array
          title: Currency-wise grouped stats
          description: Stats grouped by advance request currency
          items:
            type: object
            required:
              - count
              - total_amount
              - currency
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching advance requests with this currency.
                example: 10
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching advance requests with this currency.
                example: 44545.4
              currency:
                type: string
        - type: object
          title: Overall stats
          description: Overall stats without currency grouping.
          required:
            - count
            - total_amount
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching advance requests.
              example: 353
            total_amount:
              type: number
              nullable: false
              description: Sum of amounts for all matching advance requests.
              example: 45882.4
      example:
        - currency: USD
          count: 10
          total_amount: 44545.4
        - currency: INR
          count: 0
          total_amount: 0
    advance_request_permissions_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: id of the advance request
          example: areqiwr3Wwirr
    advance_request_permissions_out:
      type: object
      additionalProperties: false
      properties:
        can_save:
          type: boolean
          description: Whether the user can save changes to this advance request
          example: true
        can_submit:
          type: boolean
          description: Whether the user can submit this advance request for approval
          example: false
        can_edit:
          type: boolean
          description: Whether the user can edit this advance request
          example: true
        can_add_approver:
          type: boolean
          description: Whether the user can add an approver to this advance request
          example: false
        can_disable_approver:
          type: boolean
          description: Whether the user can disable an approver for this advance request
          example: false
        can_reject:
          type: boolean
          description: Whether the user can reject this advance request
          example: false
        can_approve:
          type: boolean
          description: Whether the user can approve this advance request
          example: true
        can_inquire:
          type: boolean
          description: Whether the user can inquire about this advance request
          example: false
        can_pull_back:
          type: boolean
          description: Whether the user can pull back this advance request
          example: false
        can_pay:
          type: boolean
          description: Whether the user can mark this advance request as paid
          example: false
        can_delete:
          type: boolean
          description: Whether the user can delete this advance request
          example: true
    advance_request_comments_in:
      type: object
      additionalProperties: false
      required:
        - advance_request_id
        - comment
      properties:
        advance_request_id:
          $ref: '#/components/schemas/id_string'
          description: ID of the advance request to add comment to
          example: areq5F9xIaMURI
        comment:
          type: string
          description: Comment text to be added to the advance request
          example: test
    description:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents the description of the resource.
      example: Win the trophy
    restricted_spender_user_ids:
      type: array
      nullable: true
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id is provided by Fyle to identify an object.
        example: uswoirwlwwg
      example:
        - uswoirwlwwg
        - uswlgwkgw42
      description: |
        List of IDs of users who can access this object.
    approver_user_ids:
      type: array
      nullable: false
      maxItems: 2
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id is provided by Fyle to identify an object.
        example: uswoirwlwwg
      example:
        - uswoirwlwwg
        - uswlgwkgw42
      description: |
        List of IDs of users who are approvers of the project.
    admin_approver_project_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          maxLength: 513
          description: |
            This is a combination of name and sub_project separated by a / and spaces.
            In case if no sub_project is present it is same as name of the project.
          example: Fast and Furious / Formula One
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
        approver_user_ids:
          $ref: '#/components/schemas/approver_user_ids'
        approver_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are approvers for this project.
        category_ids:
          type: array
          nullable: true
          items:
            type: integer
            example: 16570
          description: List of categories that are applicable for the project.
    admin_approver_category_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: |
            This is a combination of name and sub_category separated by a / and spaces. In case if no sub_category is present it is same as name of the category.
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids for which this category can be used. If project_ids is null, then this category can be used for any project.
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
    approver_cost_center_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        restricted_spender_user_ids:
          $ref: '#/components/schemas/restricted_spender_user_ids'
    per_diem_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        rate:
          type: number
          example: 10
          description: Amount per night
    mileage_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        unit:
          type: string
          enum:
            - KM
            - MILES
        vehicle_type:
          type: string
          example: Audi
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
        slab_rates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                nullable: true
              limit:
                type: number
                nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    expense_policy_rule_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          example: tpr1234abcd
          description: This represents the id of the expense policy rule that is violated for this expense.
        description:
          anyOf:
            - $ref: '#/components/schemas/description'
          description: |
            This represents the description of the expense policy rule that is violated for this expense.
          example: Receipt is mandatory for expense above $50
        action_show_warning:
          type: boolean
          description: |
            A true value here means that policy calculation suggests showing a warning when the user attempts to create an expense that violates this expense policy rule.
          example: true
        action_make_unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means that policy calculation suggests making the expense unreportable when the user attempts to create an expense that violates this expense policy rule.
          example: true
    expense_policy_expenses_query_object_params:
      type: object
      properties:
        category_id:
          type: string
          description: |
            Category ids query param to find the list of expenses.
          example: in.(60506)
        project_id:
          type: string
          description: |
            Project ids query param to find the list of expenses.
          example: in.(261155)
        cost_center_id:
          type: string
          description: |
            Cost center ids query param to find the list of expenses.
          example: in.(7475)
        currency:
          type: string
          description: |
            Currency query param to find the list of expenses.
          example: eq.USD
        mileage_rate_id:
          type: string
          description: |
            Mileage rate query param to find the list of expenses.
          example: eq.2
        employee_id:
          type: string
          description: |
            Employee id query param to find the list of expenses.
          example: eq.ouNSnadfaLA
    expense_policy_expenses_query_object:
      type: object
      description: |
        An expense may be violating an expense policy rule due to a group of other expenses.
        These query params can be used to fetch those expenses because of which this expense is causing a violation. <br>
        Below params should be ANDed to get the correct list of violating expenses.
      properties:
        limit_start_date:
          type: string
          description: |
            Spend start date query param to find the list of violating expenses.
          example: '2021-12-01'
        limit_end_date:
          type: string
          description: |
            Spend end date query param to find the list of violating expenses.
          example: '2022-03-31'
        params:
          $ref: '#/components/schemas/expense_policy_expenses_query_object_params'
    expense_policy_individual_desired_states:
      type: object
      properties:
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        approver_policy_order:
          type: integer
          nullable: true
          description: |
            This represents the order of the approver policy related to this individual desired state record.
            If the policy does not add any approver, this field will be null.
          example: 1
        approver_source:
          type: string
          enum:
            - PRIMARY_APPROVER
            - SECONDARY_APPROVER_1
            - SECONDARY_APPROVER_2
            - PROJECT_APPROVER_1
            - PROJECT_APPROVER_2
            - DEPARTMENT_HEAD_APPROVER
            - EMAIL_APPROVER
            - null
          nullable: true
          description: |
            This represents the type of approver(source) that was added by the approver policy related to this individual
            desired state record. If the policy does not add any approver, this field will be null.
          example: PROJECT_APPROVER_1
        run_status:
          nullable: false
          type: string
          enum:
            - VIOLATED_ACTION_SUCCESS
            - VIOLATED_ACTION_FAILURE
            - UNVIOLATED
          description: |
            This represent the status of policy computation for an expense against the policy. If the state is
            `UNVIOLATED`, it means that the expense is not violating the policy. If the state is `VIOLATION_ACTION_SUCCESS`,
            it means that expense is violating the policy and action stated in the object will be applied to
            expense. However, if the state is `VIOLATION_ACTION_FAILURE`, it means that the policy is violated for the
            expense but since some approver was missing or not setup properly, it will fail to take action
            on the expense
          example: SUCCESS
        run_result:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
            case some approver was not setup properly for the given violation, this array will contain description of
            missing approvers. For example, Department approver, Project head, etc.
          example:
            - flag the expense
            - cap the amount
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        expense_policy_rule_id:
          type: string
          description: |
            This represents the id of the expense policy rule.
          example: tprabsdfSYqd
        rule:
          $ref: '#/components/schemas/expense_policy_rule_embed'
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        expenses_query_object_params:
          nullable: true
          $ref: '#/components/schemas/expense_policy_expenses_query_object'
    expense_policy_final_desired_state:
      type: object
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        flag:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense should be flagged.
          example: true
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means, that as per policy calculation this expense should be made unreportable.
          example: true
        is_receipt_mandatory:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense requires receipt.
          example: true
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        remove_employee_approver1:
          type: boolean
          description: |
            A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
          example: true
        run_status:
          nullable: false
          type: string
          enum:
            - SUCCESS
            - FAILURE
          description: |
            This represent the run status of the policy.
          example: SUCCESS
        run_summary:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense.
          example:
            - flag the expense
            - cap the amount
    expense_policy_states_out:
      type: object
      additionalProperties: false
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        individual_desired_states:
          type: array
          items:
            $ref: '#/components/schemas/expense_policy_individual_desired_states'
        final_desired_state:
          $ref: '#/components/schemas/expense_policy_final_desired_state'
    claim_amount:
      type: number
      description: |
        The expense amount as claimed by user.
      example: 1984.18
    spender_expense_check_mandatory_fields_in:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This represents the id of the expense.<br><br>
            _Note: This field is required when you are updating an already created expense and want to check it again for missing mandatory fields._
          example: tx0agOdICdbV
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          description: |
            It signifies when this expense was made. This date cannot be in future.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
        source:
          $ref: '#/components/schemas/source'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        claim_amount:
          allOf:
            - $ref: '#/components/schemas/claim_amount'
          description: |
            The expense amount as claimed by user.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
          example: 1984.18
        purpose:
          type: string
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        num_files:
          type: integer
          description: |
            Number of files/reciepts attached to expense
          example: 4
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
    expense_check_mandatory_fields_in:
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        spent_at:
          $ref: '#/components/schemas/spent_at'
        claim_amount:
          $ref: '#/components/schemas/claim_amount'
      allOf:
        - $ref: '#/components/schemas/spender_expense_check_mandatory_fields_in'
    expense_check_mandatory_fields_out:
      type: object
      additionalProperties: false
      required:
        - missing_amount
        - missing_currency
        - missing_receipt
        - missing_expense_field_ids
      properties:
        missing_amount:
          type: boolean
          description: |
            If this is set to true, then you need to send amount field with expense object.
          example: false
        missing_currency:
          type: boolean
          description: |
            If this is set to true, then you need to send currency field with expense object.
          example: false
        missing_receipt:
          type: boolean
          description: |
            If this is set to true, then you need to attach receipt to the expense.
          example: false
        missing_expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
    expense_comments_out:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - action
        - action_data
        - expense_id
        - creator_type
        - org_id
        - updated_at
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        action:
          type: string
          description: Expense action for which comment is added.
          enum:
            - ADMIN_APPROVED
            - APPROVED
            - APPROVER_REMOVED
            - AUTO_MATCHED
            - AUTO_MERGED
            - COMMENTED
            - COMMENTED_WITH_NOTIFICATION
            - COMMENTED_WITHOUT_NOTIFICATION
            - DATA_EXTRACTED
            - EJECTED_FROM_REPORT
            - EXPENSE_RULE_APPLIED
            - FILE_ATTACHED
            - FILE_DELETED
            - INVALID_EXPENSE_FIELD_REMOVED
            - MATCHED
            - PAID
            - PARTIALLY_APPROVED
            - POLICY_RESULT_APPLIED
            - UNMATCHED
          example: COMMENTED_WITH_NOTIFICATION
        action_data:
          type: object
          description: Data related to expense action.
          nullable: true
        expense_id:
          $ref: '#/components/schemas/id_string'
        creator_type:
          type: string
          description: Describes whether the comment is system-generated or User made.
          enum:
            - SYSTEM
            - POLICY
            - USER
          example: USER
        creator_user_id:
          $ref: '#/components/schemas/user_id_nullable'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/org_id'
    expense_comments_bulk_in:
      type: array
      additionalProperties: false
      description: |
        Array of expense comments to be added in bulk.
      items:
        type: object
        required:
          - expense_id
          - comment
          - notify
        properties:
          expense_id:
            $ref: '#/components/schemas/id_string'
          comment:
            type: string
            description: comment on the expense
            example: We don't accept laundry bills
          notify:
            type: boolean
            description: Whether to notify the user about the comment
            example: true
    expense_dismiss_duplicates_in:
      type: object
      required:
        - id
        - duplicate_expense_ids
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        duplicate_expense_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwoirwlwwg
            - txwlgwkgw42
          description: |
            List of expense IDs that needs to be dismissed as a duplicate from the target expense
    expense_duplicate_sets_out:
      type: object
      additionalProperties: false
      properties:
        expense_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwoirwlwwg
            - txwlgwkgw42
          description: |
            List of expense IDs that are part of the duplicate set
    expenses_stats_in:
      properties:
        query_params:
          nullable: false
          type: string
          description: |
            Query param string similar to expenses GET call. Use group_by_state=eq.true to get state-wise grouping of stats.
          example: id=in.('tx1263', 'tx1569')&group_by_state=eq.true
    expenses_stats_out:
      oneOf:
        - type: array
          title: State-wise grouped stats
          description: Stats grouped by expense state
          items:
            type: object
            required:
              - count
              - total_amount
              - state
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching expenses in this state
                example: 10
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching expenses in this state
                example: 44545.4
              state:
                type: string
                enum:
                  - COMPLETE
                  - DRAFT
                  - APPROVER_PENDING
                  - APPROVED
                  - PAYMENT_PENDING
                  - PAYMENT_PROCESSING
                  - PAID
                  - UNREPORTABLE
                description: Expense state
        - type: object
          title: Overall stats
          description: Overall stats without state grouping
          required:
            - count
            - total_amount
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching expenses
              example: 353
            total_amount:
              type: number
              nullable: false
              description: Sum of amounts for all matching expenses
              example: 45882.4
      example:
        - state: COMPLETE
          count: 343
          total_amount: 1337
        - state: DRAFT
          count: 10
          total_amount: 44545.4
        - state: PAID
          count: 0
          total_amount: 0
        - state: PAYMENT_PROCESSING
          count: 0
          total_amount: 0
        - state: APPROVER_PENDING
          count: 0
          total_amount: 0
        - state: PAYMENT_PENDING
          count: 0
          total_amount: 0
        - state: APPROVED
          count: 0
          total_amount: 0
        - state: UNREPORTABLE
          count: 0
          total_amount: 0
    expense_filters_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: exfilumWHrlPf7K
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    expense_filters_in:
      type: object
      additionalProperties: false
      required:
        - name
        - query_string
      properties:
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
    expense_filters_delete_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: exfilumWHrlPf7K
    expenses_export_config_column_formula:
      type: object
      properties:
        function:
          type: string
          example: parse-format-time
        parameters:
          type: array
          items:
            anyOf:
              - type: object
              - type: string
              - type: number
              - type: integer
              - type: boolean
          example:
            - function: field
              parameters:
                - spent_at
            - yyyy-MM-dd'T'HH:mm:ss
            - dd-MM-yyyy
            - error in date formatting
      description: |
        Export column formula is a expression that is used to transform the data. Refer https://www.fylehq.com/help/en/articles/4422306-advanced-export-formulas for more details.
    expenses_export_config:
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          enum:
            - xlsx
            - csv
          description: |
            Type of the export file.
          example: csv
        is_header_visible:
          type: boolean
          description: |
            Whether to show the header in the export file.
          example: true
        separate_line_items_entry:
          type: object
          properties:
            enabled:
              type: boolean
              description: |
                Whether to show the double rows for each line item in the export file.
              example: false
            debit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for debit entries.
              example:
                - debit_amount
            credit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for credit entries.
              example:
                - credit_amount
          description: |
            Configure how to show the double rows for each line item in the export file, if enabled.
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  Name of the column.
                example: Spent Date
              formula:
                allOf:
                  - $ref: '#/components/schemas/expenses_export_config_column_formula'
                description: |
                  Formula to transform the data in the column.
          description: |
            Configure the columns to show in the export file.
    expenses_exports_in:
      type: object
      additionalProperties: false
      required:
        - query_params
        - notify_emails
        - config
      properties:
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
          description: |
            List of emails to notify when the export is ready.
        config:
          allOf:
            - $ref: '#/components/schemas/expenses_export_config'
          nullable: false
          description: |
            Configuration for the export.
    expenses_exports_out:
      type: object
      additionalProperties: false
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: eefilumWHrlPf7K
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
        config:
          allOf:
            - $ref: '#/components/schemas/expenses_export_config'
          nullable: false
        file_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: filumWHrlPf7K
        state:
          type: string
          nullable: false
          enum:
            - PENDING
            - PROCESSING
            - SUCCESS
            - ERROR
          description: |
            Status of the export.
          example: PENDING
    split_expense_in:
      type: object
      properties:
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        source:
          $ref: '#/components/schemas/source'
        spent_at:
          type: string
          format: date-time
          nullable: false
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
            - **Note:**
              - This field is required while creating an expense.
              - _Not required when updating an expense, but is non-nullable_. 
          example: '2020-06-01T01:18:19.292-08:00'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        file_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          description: |
            List of file IDs to be attached to the expense.
          example:
            - fisjfwlrglw
            - fisjfwlrglw
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        merchant:
          $ref: '#/components/schemas/merchant'
        purpose:
          type: string
          example: Team lunch
        is_billable:
          $ref: '#/components/schemas/is_billable'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    expense_split_object:
      type: object
      properties:
        spent_at:
          type: string
          format: date-time
          nullable: false
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
            - **Note:**
              - This field is required while creating an expense.
              - _Not required when updating an expense, but is non-nullable_. 
          example: '2020-06-01T01:18:19.292-08:00'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          example: Team lunch
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    admin_expense_split_object:
      type: array
      items:
        required:
          - admin_amount
        allOf:
          - $ref: '#/components/schemas/expense_split_object'
        properties:
          admin_amount:
            type: number
            nullable: false
            description: |
              The expense amount which is added or modified by admin or approver.
            example: 1900
    admin_split_expense_in:
      type: object
      required:
        - id
        - admin_amount
      allOf:
        - $ref: '#/components/schemas/split_expense_in'
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This id is provided by Fyle to identify an object
            - When `id` is sent, default action is to update the expense
        admin_amount:
          type: number
          nullable: false
          description: |
            The expense amount which is added or modified by admin or approver.
          example: 1900
        splits:
          description: |
            This array contains the number of split expenses admin wants to create for the expense.
            The `admin_amount` provided for the original expense should be equal to the sum of
            `admin_amount` provided for each split. Each attribute in the splits array will take precedence
            to the original expense object. If any attribute is not provided in the split object, then
            null or default value will be taken for that attribute in the resultant split.
          allOf:
            - $ref: '#/components/schemas/admin_expense_split_object'
    expense_check_policies_individual_desired_states:
      type: object
      properties:
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        approver_policy_order:
          type: integer
          nullable: true
          description: |
            This represents the order of the approver policy related to this individual desired state record.
            If the policy does not add any approver, this field will be null.
          example: 1
        approver_source:
          type: string
          enum:
            - PRIMARY_APPROVER
            - SECONDARY_APPROVER_1
            - SECONDARY_APPROVER_2
            - PROJECT_APPROVER_1
            - PROJECT_APPROVER_2
            - DEPARTMENT_HEAD_APPROVER
            - EMAIL_APPROVER
            - null
          nullable: true
          description: |
            This represents the type of approver(source) that was added by the approver policy related to this individual
            desired state record. If the policy does not add any approver, this field will be null.
          example: PROJECT_APPROVER_1
        expense_policy_rule_id:
          type: string
          description: |
            This represents the id of the expense policy rule.
          example: tprabsdfSYqd
        expense_policy_rule:
          $ref: '#/components/schemas/expense_policy_rule_embed'
        run_status:
          nullable: false
          type: string
          enum:
            - VIOLATED_ACTION_SUCCESS
            - VIOLATED_ACTION_FAILURE
            - UNVIOLATED
          description: |
            This represents the status of policy computation for the input expense object against the policy represented by `expense_policy_rule_id`.
            If the state is `UNVIOLATED`, it means that the expense is not violating this policy. If the state is `VIOLATION_ACTION_SUCCESS`,
            it means that the expense is violating this policy and action stated in the object will be applied to the expense when it is saved.
            However, if the state is `VIOLATION_ACTION_FAILURE`, it means that this policy is violated for the expense but since some approver was
            missing or not set up properly, it will fail to take action on the expense when it is saved.
          example: SUCCESS
        run_result:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
            case some approver was not setup properly for the given violation, this array will contain description of
            missing approvers. For example, Department approver, Project head, etc.
          example:
            - flag the expense
            - cap the amount
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        expenses_query_object_params:
          nullable: true
          $ref: '#/components/schemas/expense_policy_expenses_query_object'
    expense_check_policies_final_desired_state:
      type: object
      properties:
        flag:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense should be flagged.
          example: true
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means, that as per policy calculation this expense should be made unreportable.
          example: true
        is_receipt_mandatory:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense requires receipt.
          example: true
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        remove_employee_approver1:
          type: boolean
          description: |
            A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
          example: true
        run_status:
          nullable: false
          type: string
          enum:
            - SUCCESS
            - FAILURE
          description: |
            This represent the run status of the policy.
          example: SUCCESS
        run_summary:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense.
          example:
            - flag the expense
            - cap the amount
    expense_check_policies_out:
      type: object
      additionalProperties: false
      properties:
        individual_desired_states:
          type: array
          items:
            $ref: '#/components/schemas/expense_check_policies_individual_desired_states'
        final_desired_state:
          $ref: '#/components/schemas/expense_check_policies_final_desired_state'
    file_in:
      type: object
      required:
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
    approver_file_in:
      allOf:
        - $ref: '#/components/schemas/file_in'
        - type: object
          required:
            - user_id
            - org_id
          properties:
            user_id:
              allOf:
                - $ref: '#/components/schemas/id_string'
              example: us82yutrio54
            org_id:
              allOf:
                - $ref: '#/components/schemas/id_string'
              example: ort677efgh98
    file_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          nullable: true
          type: string
          description: |
            Link to upload contents of this file
    file_generate_urls_action_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    file_generate_urls_action_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          nullable: true
          type: string
          description: |
            Link to upload contents of this file
    file_delete_action_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    role:
      type: string
      enum:
        - FYLER
        - APPROVER
        - ACCOUNTANT
        - TRAVEL_ADMIN
        - VERIFIER
        - PAYMENT_PROCESSOR
        - FINANCE
        - ADMIN
        - TRAVEL_AGENT
        - OWNER
        - AUDITOR
        - HOD
        - HOP
      description: |
        Roles are assigned by Admin.
      example: FYLER
    mileage_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          example: Audi
        code:
          $ref: '#/components/schemas/code'
    bank_ifsc:
      type: string
      example: SBIN0007587
      maxLength: 11
      description: |
        IFSC code of the bank account of the Employee
      pattern: ^[A-Z]{4}0[A-Z0-9]{6}$
    locale:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        abbreviation:
          type: string
          nullable: false
          maxLength: 4
          example: IST
          description: |
            Represents the abbreviation of the employee's locale.
        offset:
          type: string
          nullable: false
          maxLength: 9
          example: '05:30:00'
          description: |
            Represents the offset of the employee's timezone from UTC.
        timezone:
          type: string
          nullable: false
          maxLength: 19
          example: Asia/Kolkata
          description: |
            Represents the timezone of the employee.
      description: |
        Location and timezone settings of the employee.
    mileage_settings:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        mileage_rate_labels:
          type: array
          nullable: true
          items:
            type: string
            example: four_wheeler
          example:
            - four_wheeler
            - two_wheeler
        annual_mileage_of_user_before_joining_fyle:
          type: object
          nullable: true
          items:
            type: object
          example:
            two_wheeler: 44
      description: |
        Mileage settings of the employee.
    user_full_name:
      type: string
      maxLength: 255
      description: |
        String denoting the full name of an employee.
      example: Jon Snow
    delegatees:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_integer'
          description: |
            Delegation id.
          example: 100
        type:
          type: string
          enum:
            - SHORT_TERM
            - PERMANENT
          description: |
            Type of delegation.
          example: SHORT_TERM
        user_id:
          $ref: '#/components/schemas/user_id'
        email:
          allOf:
            - $ref: '#/components/schemas/email'
          description: |
            Email of the delegatee.
        full_name:
          allOf:
            - $ref: '#/components/schemas/user_full_name'
          description: |
            Full name of the delegatee.
        start_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time from which the delegation is active.
          nullable: false
        end_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time till which the delegation is active. If null, delegation is active indefinitely.
          nullable: true
    employee_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/fk_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        department_id:
          $ref: '#/components/schemas/fk_string'
        department:
          $ref: '#/components/schemas/department_out_embed'
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        joined_at:
          $ref: '#/components/schemas/joined_at'
        level_id:
          $ref: '#/components/schemas/fk_string'
        level:
          $ref: '#/components/schemas/level_out_embed'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        special_email:
          type: string
          maxLength: 127
          example: receipts+admin1_mb4w@fyle.ai
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        flattened_custom_field:
          $ref: '#/components/schemas/flattened_custom_field'
        project_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids that this employee is allowed to access.
        projects:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/project_out_embed'
          description: |
            List of projects that this employee is allowed to access.
        cost_center_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of cost center ids that this employee is allowed to access. [] (empty array) means access to all cost centers.
        cost_centers:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/cost_center_out_embed'
          description: |
            List of cost_ enters that this employee is allowed to access. [] (empty array) means access to all cost centers.
        per_diem_rate_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of per diem rate ids that this employee is allowed to access.
        per_diem_rates:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/per_diem_rate_out_embed'
          description: |
            List of per diem rates that this employee is allowed to access.
        mileage_rate_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of mileage rate ids that this employee is allowed to access.
        mileage_rates:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/mileage_rate_out_embed'
          description: |
            List of mileage rates that this employee is allowed to access.
        approver_user_ids:
          type: array
          maxLength: 3
          nullable: true
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - uswoirwlwwg
            - uswlgwkgw42
          description: |
            List of IDs of users who are approvers for this employee. Maximum 3.
        approver_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are approvers for this employee.
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        branch_account:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/name'
          example: null
          description: |
            The Account number of the bank account of the Employee.
        branch_ifsc:
          type: string
          nullable: true
          items:
            $ref: '#/components/schemas/bank_ifsc'
          example: null
          description: |
            IFSC code of the bank account of the Employee. Must be a 11 digit alphanumeric code.
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        is_mobile_verified:
          type: boolean
          nullable: true
          description: |
            Flag which indicates if mobile is verified or not.
          example: false
        locale:
          $ref: '#/components/schemas/locale'
        mileage_settings:
          $ref: '#/components/schemas/mileage_settings'
        ach_account:
          type: object
          nullable: true
          additionalProperties: false
          properties:
            added:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee has added ach account
            verified:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee's ach account is verified.
          description: |
            ACH account details of the employee.
        delegatees:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/delegatees'
          description: |
            List of users who are delegatees for this employee.
        category_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 3345
            - 3346
          description: |
            List of category ids that this employee is allowed to access.
        categories:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/category_out_embed'
          description: |
            List of categories that this employee is allowed to access.
    account_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          type: string
          nullable: true
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
        currency:
          $ref: '#/components/schemas/currency'
        current_balance_amount:
          type: number
          example: 90.9
        tentative_balance_amount:
          type: number
          example: 43.8
        org_id:
          $ref: '#/components/schemas/org_id'
        category_id:
          type: integer
          description: |
            This id is provided by Fyle to identify a category.
          nullable: true
          example: 49058
    spender_employee_settings_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          example: ous7FnPJtFRmN
          description: Unique identifier for the employee settings
        employee_id:
          $ref: '#/components/schemas/id_string'
          example: ouLdnA486RYD
          description: Unique identifier of the employee
        org_id:
          $ref: '#/components/schemas/org_id'
          example: org123
          description: Unique identifier of the organization
        created_at:
          $ref: '#/components/schemas/created_at'
          example: '2019-10-18T07:01:55.756Z'
          description: Timestamp when the settings were created
        updated_at:
          $ref: '#/components/schemas/updated_at'
          example: '2025-04-20T04:14:26.820Z'
          description: Timestamp when the settings were last updated
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of category ids that the employee has access to
        cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of cost centers that the employee has access to
        project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of projects that the employee has access to
        per_diem_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of per diem rates that the employee has access to
        mileage_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of mileage rate ids that the employee has access to
        insta_fyle_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for InstaFyle receipt scanning and data extraction
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether InstaFyle is allowed for the employee
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether InstaFyle is enabled for the employee
            static_camera_overlay_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether static camera overlay is enabled for receipt scanning
            extract_fields:
              type: array
              nullable: true
              items:
                type: string
              example:
                - AMOUNT
                - CURRENCY
                - CATEGORY
                - TXN_DT
              description: List of fields to extract from receipts
        notification_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for email and push notifications
          properties:
            email_allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether email notifications are allowed
            email_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether email notifications are enabled
            email_unsubscribed_events:
              type: array
              nullable: true
              items:
                type: string
              example: []
              description: List of events for which email notifications are unsubscribed
            push_allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether push notifications are allowed
            push_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether push notifications are enabled
            push_unsubscribed_events:
              type: array
              nullable: true
              items:
                type: string
              example:
                - EADVANCE_REQUESTS_CREATED
                - EADVANCE_REQUESTS_UPDATED
                - EADVANCE_REQUESTS_INQUIRY
              description: List of events for which push notifications are unsubscribed
            notify_user:
              type: boolean
              nullable: true
              example: true
              description: Whether to notify the user about events
            notify_delegatee:
              type: boolean
              nullable: true
              example: true
              description: Whether to notify the delegatee about events
        mileage_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for mileage tracking and rates
          properties:
            mileage_rate_labels:
              type: object
              nullable: true
              example: null
              description: Labels for different mileage rates
            annual_mileage_of_user_before_joining_fyle:
              type: object
              nullable: true
              example: {}
              description: Annual mileage limit for user before joining Fyle
        expense_form_autofills:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for automatic form filling in expenses
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether expense form autofill is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether expense form autofill is enabled
        data_extractor_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for data extraction from receipts
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether data extraction is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether data extraction is enabled
        in_app_chat_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for in-app chat functionality
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether in-app chat is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether in-app chat is enabled
            restore_id:
              type: string
              nullable: true
              example: null
              description: ID for restoring chat session
        payment_mode_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for payment modes
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether payment mode selection is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether payment mode selection is enabled
            allowed_payment_modes:
              type: array
              nullable: true
              items:
                type: string
              example:
                - PERSONAL_ACCOUNT
                - COMPANY_ACCOUNT
              description: List of payment modes allowed for the employee
        locale:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for user's locale and timezone
          properties:
            timezone:
              type: string
              nullable: true
              example: Asia/Kolkata
              description: User's timezone
            abbreviation:
              type: string
              nullable: true
              example: IST
              description: Timezone abbreviation
            offset:
              type: string
              nullable: true
              example: '05:30:00'
              description: Timezone offset from UTC
        is_personal_cards_enabled:
          type: boolean
          example: true
          description: Whether personal card usage is enabled
        default_project_id:
          type: string
          nullable: true
          example: null
          description: Default project ID for expenses
        default_payment_mode:
          type: string
          nullable: true
          example: null
          description: Default payment mode for expenses
        default_vehicle_type:
          type: string
          nullable: true
          example: null
          description: Default vehicle type for mileage expenses
    attach_files_to_advance_request_in:
      type: object
      required:
        - id
        - file_ids
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqsjfwlrglw
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
          description: List of files to be attached to the advance request
    advance_request_add_approver_in:
      type: object
      additionalProperties: false
      required:
        - id
        - approver_email
        - comment
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: ID of the advance request to add approver to
          example: areq5F9xIaMURI
        approver_email:
          $ref: '#/components/schemas/email'
          description: Email address of the approver to be added
          example: approver@example.com
        comment:
          type: string
          description: A comment explaining the reason for adding the approver
          example: Need your review on this advance
    advance_request_reject_in:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: ID of the advance request to be rejected
          example: areq5F9xIaMURI
        comment:
          type: string
          description: Reason for rejecting the advance request
          example: Budget exceeded
    advance_request_bulk_approve_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: ID of the advance request to be approved
          example: areq5F9xIaMURI
  parameters:
    limit:
      in: query
      name: limit
      description: |
        A limit on the number of objects to be returned. Allowed values are from 1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    expense_id:
      in: query
      name: expense_id
      description: |
        Expense id for filtering based on expenses. Supported operator is `eq`.
      schema:
        type: string
        example: expense_id=eq.txS9GZm5hsjh
tags:
  - name: Accounts
    description: |
      This API gives access to your accounts data.
  - name: Advances
    description: |
      This API gives you access to view your Issued Advances data.
  - name: Categories
    description: |
      These APIs gives you access to manage your organisation's Categories
  - name: Cost Centers
    description: |
      These APIs gives you access to manage your organisation's Cost Centers
  - name: Per Diem Rates
    description: |
      This API gives you access to manage your organisation's Per Diem Rates
  - name: Projects
    description: |
      These APIs gives you access to manage your organisation's Projects
  - name: Mileage Rates
    description: |
      This API gives you access to your organisation's Mileage Rates
  - name: Reports
    description: |
      This API gives you access to your organisation's Expense Reports
  - name: Subscriptions
    description: |
      This API allows you to subscribe to different events.
  - name: Employees
    description: |
      These APIs gives you access to manage your organisation's Employees
paths:
  /approver/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: reports_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Reports
      summary: Update Purpose
      operationId: update_purpose
      description: |
        This API is used to update the the purpose of an report by Approver. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/approver_report_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/reports/add_approver:
    post:
      tags:
        - Reports
      summary: Add Approver
      description: |
        Add another approver to the report
      operationId: report_add_approver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/add_approver_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/partially_approve:
    post:
      tags:
        - Reports
      summary: Approve reports
      description: Approve a report
      operationId: reports_approve_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_in'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/partially_approve/bulk:
    post:
      tags:
        - Reports
      summary: Approve reports bulk
      description: Approve reports in bulk
      operationId: reports_approve_post_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/report_action_in'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/reports/send_back:
    post:
      tags:
        - Reports
      summary: Send back report
      description: |
        Send back report to the employee 
      operationId: report_send_back
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/send_back_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/exports:
    get:
      tags:
        - Reports
      summary: Get Reports Export
      description: |
        Get reports export request details. This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: reports_exports_get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/reports_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Reports
      summary: Create Reports Export
      description: |
        Create Reports Export Request.
      operationId: reports_exports_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/reports_exports_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/reports_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      description: |
        This API gets expenses assigned to you to approve.

        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: expenses_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Expenses
      summary: Update an expense
      description: |
        Approver can update an expense already reported by an employee. Please note that the expense in `APPROVER_PENDING` or `APPROVED` state for the approver to be able to update it.
      operationId: expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/approver_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/attach_files/bulk:
    post:
      tags:
        - Expenses
      summary: Attach files to an expense in bulk
      description: |
        This API attaches files to an expense in bulk
      operationId: attach_files_to_expense_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/attach_files_to_expense_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/permissions:
    post:
      tags:
        - Expenses
        - Expense permissions
        - Permissions
      summary: Expense Permissions
      description: |
        Expense Permissions for the user
      operationId: expense_permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/eject_expenses:
    post:
      tags:
        - Reports
      summary: Eject expenses from a report
      description: Eject expenses from a report
      operationId: report_eject_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_with_expenses_ids_to_eject'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/filters:
    post:
      tags:
        - Reports
      summary: Create Report saved filters
      description: |
        Save report filters for personal use or share them among other approvers.
      operationId: report_filters_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/report_filters_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/report_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      tags:
        - Reports
      summary: List Report saved filters
      operationId: report_filters_get
      description: |
        List filters saved by the approver or shared among other approvers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_filters_out'
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/reports/filters/delete:
    post:
      tags:
        - Reports
      summary: Delete Report saved filter
      description: |
        Delete Report saved filter having the provided id.
      operationId: report_filters_post_action_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/report_filters_delete_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/report_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/stats:
    post:
      tags:
        - Reports
      summary: Reports Stats
      description: |
        Reports Stats
      operationId: reports_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/reports_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/reports_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/comments:
    post:
      tags:
        - Reports
      summary: Comment on a report
      description: Comment on a report
      operationId: report_comments_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_comments_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_comments_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/permissions:
    post:
      tags:
        - Reports
      summary: Reports Permissions
      description: |
        Reports Permissions for a user
      operationId: reports_permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/reports/round_off_amount:
    post:
      tags:
        - Reports
      summary: Round off report amount
      description: |
        Round off report amount. This API first rounds of expenses and then rounds off the total amount of the report.
      operationId: report_round_off_amount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/round_off_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: subscribe to different events using this API
      operationId: subscriptions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/subscriptions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/approver_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      callbacks:
        REPORT.*:
          '{$request.body#/data/webhook_url}':
            post:
              operationId: report_subscriptions_callback
              summary: Object that will be sent to the callback url
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/report_out_subscriptions_approver'
              responses:
                '200':
                  description: OK
    get:
      tags:
        - Subscriptions
      summary: List Approver Subscriptions
      operationId: subscriptions_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/approver_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/advance_requests:
    get:
      tags:
        - Advances
      summary: List advance requests
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: advance_requests_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/advance_requests/stats:
    post:
      tags:
        - Advances
      summary: Advances Requests Stats
      description: |
        Advances Requests Stats
      operationId: advance_requests_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_requests_approver_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_requests_approver_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/advance_requests/permissions:
    post:
      tags:
        - Advances
      summary: Advance Request Permissions
      description: |
        Returns a list of all possible actions that can be performed on an advance request by the current user.
      operationId: advance_requests_permissions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/advance_requests/comments:
    post:
      summary: Add comment to advance request
      operationId: advance_requests_comments_post
      description: |
        This API allows approvers to add comments to an advance request.
      tags:
        - Advances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_comments_in'
      responses:
        '200':
          description: Comment added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: projects_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/admin_approver_project_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: categories_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/admin_approver_category_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/cost_centers:
    get:
      tags:
        - Cost Centers
      summary: List cost centers
      operationId: cost_centers_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/approver_cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/per_diem_rates:
    get:
      tags:
        - Per Diem Rates
      summary: List per diem rates
      operationId: per_diem_rates_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/per_diem_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/mileage_rates:
    get:
      tags:
        - Mileage Rates
      summary: List mileage rates
      operationId: mileage_rates_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/mileage_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/expense_policy_states:
    get:
      tags:
        - Expense Policies
      summary: Get policy states of Expenses
      description: |
        Get policy states of Expenses
      operationId: expense_policy_states_get
      parameters:
        - in: query
          name: expense_id
          description: |
            The id of the expense for which you are querying the policy states.<br>
            Supported operators are `eq`, `in`, `neq`, `not_in`.<br>
            expense_id=eq."id" <br>
            expense_id=in.("id1","id2","id3") <br>
            expense_id=neq."id" <br>
            expense_id=not_in.("id1","id2","id3")
          schema:
            type: string
            example: eq."txSdfsytrqw"
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_policy_states_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Object Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/check_mandatory_fields:
    post:
      tags:
        - Expenses
      summary: Check expense for missing mandatory fields
      description: |
        Before updating employee's expense object
        into Fyle, based on the business requirements, you might want to check if you have added all the mandatory fields set up by your organization.
        You can easily do that by passing the same expense object with some extra optional fields documented below.
      operationId: check_mandatory_fields_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_check_mandatory_fields_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/expense_check_mandatory_fields_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/comments:
    get:
      tags:
        - Expenses
      summary: List expense comments
      description: List all the comments of an expense
      operationId: expense_comments_get
      parameters:
        - $ref: '#/components/parameters/expense_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/comments/bulk:
    post:
      tags:
        - Expenses
        - Expense comments
        - Comments
      summary: Bulk comment on expenses
      description: |
        Bulk comment on expenses as an approver. The API allows you to add comments to multiple expenses at once.
      operationId: expense_comments_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_comments_bulk_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/dismiss_duplicates/bulk:
    post:
      tags:
        - Expenses
      summary: Dismiss Duplicate expenses
      description: |
        This API helps dismissing similar expenses as a duplicates.
      operationId: dismiss_duplicates_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/expense_dismiss_duplicates_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/expenses/duplicate_sets:
    get:
      tags:
        - Expenses
      summary: List expense duplicate sets
      operationId: expense_duplicate_sets
      description: |
        This API provides the sets of the duplicate expenses for a particular employee.
      parameters:
        - in: query
          name: expense_id
          description: An expense_id for what we need to fetch the duplicate expenses.
          schema:
            type: string
            example: txdsjkF453kh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_duplicate_sets_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/expenses/stats:
    post:
      tags:
        - Expenses
      summary: Expenses Stats
      description: |
        Expenses Stats
      operationId: expenses_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expenses_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expenses_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/filters:
    post:
      tags:
        - Expenses
      summary: Create Expenses saved filters
      description: |
        Save expenses filters for personal use or share with other approvers.
      operationId: expenses_filters_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_filters_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      tags:
        - Expenses
      summary: List Expenses saved filters
      operationId: expenses_filters_get
      description: |
        List filters saved by the admin or shared with the admin.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/expenses/filters/delete:
    post:
      tags:
        - Expenses
      summary: Delete Expenses saved filter
      description: |
        Delete Expenses saved filter having the provided id.
      operationId: expenses_filters_post_action_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_filters_delete_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/exports:
    post:
      tags:
        - Expenses
      summary: Create Expenses Export
      description: |
        Create Expenses Export Request.
      operationId: expenses_exports_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expenses_exports_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expenses_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/expenses/split:
    post:
      tags:
        - Expenses
      summary: Split an expense
      description: |
        Approver can split an expense reported by spender which is not yet paid out.
      operationId: expenses_split_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/admin_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/split/check_policies:
    post:
      tags:
        - Expenses
      summary: Check for policy violations before splitting an expense
      description: |
        Before splitting an expense object
        into Fyle, based on the business requirements, you might want to check the resulting 
        expenses against the policy rules set up by your organization. You can easily do that by passing the same split expense object 
        to this API.
      operationId: expenses_split_check_policies_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/admin_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_check_policies_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses/split/check_mandatory_fields:
    post:
      tags:
        - Expenses
      summary: Check mandatory fields before splitting an expense
      description: |
        Before splitting an employee's expense object
        into Fyle, based on the business requirements, you might want to check if you have added all the mandatory fields set up by your organization.
        You can easily do that by passing the same expense split object documented below.
      operationId: expenses_split_check_mandatory_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/admin_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_check_mandatory_fields_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/files/bulk:
    post:
      operationId: files_post_bulk
      tags:
        - Files
      summary: Bulk create files
      description: |
        Create files in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/approver_file_in'
              additionalProperties: false
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/file_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/files/generate_urls/bulk:
    post:
      operationId: files_generate_urls_bulk_post
      tags:
        - Files
      summary: Bulk generate download and upload URLs
      description: |
        Once a file is created, its contents may need to be uploaded (or downloaded). To upload (or download) contents, you'll
        need to generate a temporary signed URL. This API accomplishes that. The signed URL is valid for 5 mins.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_generate_urls_action_in'
                  example:
                    - id: fi123819sa
                    - id: fi876833tu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/file_generate_urls_action_out'
                    example:
                      - id: sdfd2391
                        name: uber_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x232sds
                        upload_url: https://aaa.bbb.cc/x232sds
                      - id: sdfd2392
                        name: lyft_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x22ddsds
                        upload_url: https://aaa.bbb.cc/x2sdssds
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/files/delete/bulk:
    post:
      operationId: files_delete
      tags:
        - Files
      summary: Delete files bulk
      description: |
        Delete files bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_delete_action_in'
                  example:
                    - id: fi123819sa
                    - id: fi876833tu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/files/download:
    get:
      operationId: files_download_get
      tags:
        - Files
      summary: Download a file
      description: |
        Generates a download URL for a file and redirects client to that URL.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            example: fiNhunGsCQJb
      responses:
        '302':
          description: Redirect to file download URL
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/employees:
    get:
      tags:
        - Employees
      summary: List employees
      operationId: employees_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/employee_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      operationId: accounts_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/account_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/employee_settings:
    get:
      tags:
        - Employee Settings
      summary: Get Employee Settings
      operationId: approver_employee_settings_get
      description: |
        Get employee settings for a given employee.
      parameters:
        - in: query
          name: employee_id
          schema:
            type: string
          required: true
          description: The employee ID for user whom we need to fetch settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                  - count
                  - offset
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_employee_settings_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/advance_requests/attach_files/bulk:
    post:
      tags:
        - Advances
      summary: Bulk attach files to advance requests
      description: |
        Bulk attach files to advance requests
      operationId: advance_requests_bulk_attach_files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/attach_files_to_advance_request_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/advance_requests/add_approver:
    post:
      summary: Add approver to advance request
      operationId: advance_requests_add_approver_post
      description: |
        This API allows approvers to add an approver to an advance request.
      tags:
        - Advances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_add_approver_in'
            example:
              data:
                id: areq5F9xIaMURI
                approver_email: approver@example.com
                comment: Need your review on this advance
      responses:
        '200':
          description: Approver added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means the requested resource was not found or the requester doesn't have sufficient access.
  /approver/advance_requests/reject:
    post:
      tags:
        - Advances
      summary: Reject advance request
      description: |
        This API allows approvers to reject an advance request.
      operationId: advance_requests_reject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_reject_in'
              example:
                data:
                  id: areq5F9xIaMURI
                  comment: Budget exceeded
      responses:
        '200':
          description: Advance request has been rejected successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means the requested resource was not found or the requester doesn't have sufficient access.
  /approver/advance_requests/approve/bulk:
    post:
      tags:
        - Advances
      summary: Bulk approve advance requests
      description: |
        This API allows approvers to approve multiple advance requests in a single operation.
      operationId: advance_requests_bulk_approve
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/advance_request_bulk_approve_in'
      responses:
        '200':
          description: OK - All advance requests have been processed successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
