openapi: 3.0.3
info:
  version: '1.0'
  title: Approver APIs
  description: >
    These APIs are generally used by applications that want to enable approval
    of reports.
  contact:
    name: Platform Beta
    email: platform-beta@fylehq.com
servers:
  - url: https://us1.fylehq.com/platform/v1beta
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1beta
    description: India Region Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is valid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    '404':
      type: object
      properties:
        message:
          enum:
            - Resource not found
          type: string
          description: >
            This error means the requested resource was not found or the
            requester doesn't have sufficient access.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    id_string:
      type: string
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was created in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: 2020-06-01T13:14:54.804+00:00
    updated_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was updated in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: 2020-06-11T13:14:55.201598+00:00
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address of the employee.

        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
        822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: ([A-Z]{3})
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
    report_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - user_id
        - user
        - purpose
        - currency
        - amount
        - tax
        - state
        - num_expenses
        - is_manually_flagged
        - is_policy_flagged
        - last_paid_at
        - last_approved_at
        - last_submitted_at
        - seq_num
        - source
        - approvals
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this report has been verified by a verifier
        settlement_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: set5nlgnwgwl
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            If physical has been collected for this report
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: >
            Signifies if and when the physical bill for this report was
            submitted.
          nullable: true
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_paid_at:
          type: string
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
    report_action_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of report that is to be approved
          example: rpa21A2rdj2
    reason:
      type: string
      description: |
        Explanation to the action if provided by the user
      example: All bills are in order
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    timestamptz_utc:
      type: string
      format: date-time
      nullable: true
      description: >-
        Date-time in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: 2020-06-01T13:14:54.804+00:00
    foreign_currency:
      type: string
      nullable: true
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 3768
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    id_integer:
      type: integer
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    code:
      type: string
      nullable: true
      maxLength: 255
      description: >
        This represents a code that is typically used for syncing with other
        systems.
      example: C1234
    cost_center_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
    category_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          nullable: true
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        code:
          $ref: '#/components/schemas/code'
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
    account_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
    mileage_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          enum:
            - two_wheeler
            - four_wheeler
            - four_wheeler1
            - four_wheeler3
            - four_wheeler4
            - bicycle
            - electric_car
          example: four_wheeler
        code:
          $ref: '#/components/schemas/code'
    name:
      type: string
      maxLength: 255
      description: >
        This represents the name of the resource. This should be unique in an
        organization
      example: foo123
    per_diem_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    report_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - last_approved_at
        - last_submitted_at
        - seq_num
        - title
        - state
        - settlement_id
        - last_paid_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpvgnwlgw34
        last_approved_at:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was approved.
        last_submitted_at:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was submitted.
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        title:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        settlement_id:
          type: string
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Settlement.
        last_paid_at:
          type: string
          nullable: true
          format: date-time
          example: 2020-06-11T13:14:55.201598+00:00
          description: |
            Signifies if and when this report was reimbursed.
    file_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: figwiwpjww
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: application/pdf
    employee_id:
      type: string
      maxLength: 255
      description: >
        This id provided by Fyle to uniquely identify an employee within an
        organization.

        This id is always prefixed with `ou`.
      example: outGt9ju6qP
    department_id:
      type: string
      maxLength: 255
      nullable: true
      example: dept9in4oIHpdR
    department_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
    employee_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        department_id:
          $ref: '#/components/schemas/department_id'
        department:
          $ref: '#/components/schemas/department_out_embed'
    card_number:
      type: string
      description: |
        Specifies the masked number of the card.
        Add only masked card-numbers, last four digits of the card.
      example: xxxx-4543
    matched_corporate_card_transaction_out_embed:
      type: object
      required:
        - id
        - corporate_card_id
        - corporate_card_number
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card_number:
          $ref: '#/components/schemas/card_number'
    expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - user_id
        - user
        - org_id
        - created_at
        - updated_at
        - spent_at
        - source
        - merchant
        - currency
        - amount
        - claim_amount
        - policy_amount
        - admin_amount
        - foreign_currency
        - foreign_amount
        - purpose
        - cost_center_id
        - cost_center
        - category_id
        - category
        - project_id
        - project
        - source_account_id
        - source_account
        - tax_amount
        - tax_group_id
        - is_billable
        - is_reimbursable
        - distance
        - distance_unit
        - mileage_calculated_distance
        - mileage_calculated_amount
        - mileage_rate_id
        - mileage_rate
        - mileage_is_round_trip
        - per_diem_rate_id
        - per_diem_rate
        - num_days
        - started_at
        - ended_at
        - travel_classes
        - hotel_is_breakfast_provided
        - locations
        - custom_fields
        - code
        - state
        - seq_num
        - report_id
        - added_to_report_at
        - report
        - is_verified
        - last_verified_at
        - is_receipt_mandatory
        - is_exported
        - last_exported_at
        - file_ids
        - files
        - employee
        - is_corporate_card_transaction_auto_matched
        - matched_corporate_card_transaction_ids
        - matched_corporate_card_transactions
        - last_settled_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        source:
          type: string
          description: >
            The name of the client app which is creating the expense.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: SLACK_APP
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          type: number
          nullable: true
          description: >
            The amount for which the expense was/will-be fyled.

            The amount will be in the currency that the organization's home
            currency.<br>


            Note that, this field is calculated from admin_amount,
            policy_amount, claim_amount.


            if admin_amount is present then this value will be same
            admin_amount.

            if policy_amount is present then this value will be same
            policy_amount.

            else this should be same as claim_amount.
          example: 1500
        claim_amount:
          type: number
          nullable: true
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        policy_amount:
          type: number
          nullable: true
          description: |
            The expense amount set by policy.
          example: 1500
        admin_amount:
          type: number
          nullable: true
          description: |
            The expense amount which is modified by admin or approver.
            This could be null if admin or approver has not edited your expense.
          example: null
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        cost_center:
          $ref: '#/components/schemas/cost_center_out_embed'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        category:
          $ref: '#/components/schemas/category_out_embed'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        project:
          $ref: '#/components/schemas/project_out_embed'
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        source_account:
          $ref: '#/components/schemas/account_out_embed'
        tax_amount:
          type: number
          nullable: true
          description: Tax amount as setup by your organisation.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          type: boolean
          nullable: true
          example: true
          description: This fields marks whether a given expense is billable a not.
        is_reimbursable:
          type: boolean
          description: This fields marks whether a given expense is reimbursable a not.
          example: true
        distance:
          type: number
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          type: string
          nullable: true
          description: Unit of distance travelled.
          enum:
            - KM
            - MILES
            - null
          example: MILES
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance compluted by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount compluted by Fyle in mileage expenses.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 9080
        mileage_rate:
          $ref: '#/components/schemas/mileage_rate_out_embed'
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
        per_diem_rate:
          $ref: '#/components/schemas/per_diem_rate_out_embed'
        num_days:
          type: integer
          nullable: true
          description: >
            Specific to per diem related expenses, number of days ofr which per
            diem claim is made.
          example: 2
        started_at:
          $ref: '#/components/schemas/timestamptz_utc'
        ended_at:
          $ref: '#/components/schemas/timestamptz_utc'
        travel_classes:
          description: >
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi`
            category.

            index 0 holds onward journey class, index 1 holds return journey
            travel class.
          type: array
          minItems: 0
          maxItems: 2
          items:
            type: string
          example:
            - ECONOMY
            - BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        locations:
          description: >
            This field will be present for travel related categories.

            For travel between Place A to Place B, this array will contain two
            items, From location at array index 0 and To location at array index
            1.

            For travel between Place A to Place c and stopping at Place B, this
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/location'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report.
          example: rpvgnwlgw34
        added_to_report_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was added to a report.
            If this expense is not added to a report, then this could be null.
        report:
          $ref: '#/components/schemas/report_out_embed'
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been verified by a verifier.
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was verified.
        is_receipt_mandatory:
          type: boolean
          nullable: true
          description: |
            Determines whether a receipt is required for this expense.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: >-
            signifies when this expense was exported to an external accounting
            system.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        is_corporate_card_transaction_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this corporate card transaction is auto_matched.
        matched_corporate_card_transaction_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the corporate card transaction ids which are matched to this
            expense
          example:
            - btxnwownwrng
        matched_corporate_card_transactions:
          type: array
          items:
            $ref: '#/components/schemas/matched_corporate_card_transaction_out_embed'
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last settled.
    report_action_with_expenses_ids_to_eject:
      type: object
      additionalProperties: false
      required:
        - id
        - expense_ids
      properties:
        id:
          type: string
          description: |
            id of report, from which the expenses are to be ejected
          example: rpa21A2rdj2
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    is_enabled:
      type: boolean
      description: >
        This indicates if the resource is enabled for use within the
        organisation.
      default: true
      example: true
    webhook_url:
      type: string
      description: |
        URL Endpoint for webhook
      example: https://api.custom.com/webhook1
    approver_subscriptions_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        created_at:
          $ref: '#/components/schemas/created_at'
        approver_user_id:
          $ref: '#/components/schemas/fk_string'
    subscriptions_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - webhook_url
      properties:
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
    report_out_subscriptions:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - data
        - reason
      properties:
        resource:
          type: string
          example: REPORT
        action:
          type: string
          enum:
            - PARTIALLY_APPROVED
            - SUBMITTED
            - APPROVER_ADDED
            - APPROVER_SENDBACK
            - APPROVED
            - APPROVER_REMOVED
            - PAYMENT_PENDING
            - PAYMENT_PROCESSING
            - PAID
            - COMMENTED
            - EXPENSES_ADDED
          example: APPROVED
        data:
          allOf:
            - $ref: '#/components/schemas/report_out'
            - type: object
              additionalProperties: false
              properties:
                updated_by_user:
                  $ref: '#/components/schemas/user_out_embed'
        reason:
          type: string
          example: comment given by Approver while approving the report.
    description:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents the description of the resource.
      example: Win the trophy
    project_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
          items:
            type: integer
    category_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces. In case if no sub_category is present it is same as name of
            the category.
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of project ids for which this category can be used. If
            project_ids is null, then this category can be used for any project.
tags:
  - name: Categories
    description: |
      These APIs gives you access to manage your organisation's Categories
  - name: Projects
    description: |
      These APIs gives you access to manage your organisation's Projects
  - name: Reports
    description: |
      This API gives you access to your organisation's Expense Reports
  - name: Subscriptions
    description: |
      This API allows you to subscribe to different events.
paths:
  /approver/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: reports_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - offset
                  - data
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/reports/partially_approve:
    post:
      tags:
        - Reports
      summary: Approve reports
      description: Approve a report
      operationId: reports_approve_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_in'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      description: >
        This API gets expenses assigned to you to approve.


        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: expenses_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/reports/eject_expenses:
    post:
      tags:
        - Reports
      summary: Eject expenses from a report
      description: Eject expenses from a report
      operationId: report_eject_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: >-
                    #/components/schemas/report_action_with_expenses_ids_to_eject
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /approver/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: subscribe to different events using this API
      operationId: subscriptions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/subscriptions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/approver_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
      callbacks:
        REPORT.*:
          '{$request.body#/data/webhook_url}':
            post:
              operationId: report_subscriptions_callback
              summary: Object that will be sent to the callback url
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/report_out_subscriptions'
              responses:
                '200':
                  description: OK
    get:
      tags:
        - Subscriptions
      summary: List Approver Subscriptions
      operationId: subscriptions_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/approver_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: projects_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: categories_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/category_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
