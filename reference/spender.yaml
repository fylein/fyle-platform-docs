openapi: 3.0.3
info:
  version: '1.0'
  title: Spender APIs
  termsOfService: https://www.fylehq.com/privacy/terms-and-conditions
  contact:
    name: Platform Beta
    email: platform-beta@fylehq.com
  description: >
    These APIs are used by applications that operate on the Spender's behalf.
    Very commonly, it is to enable creation of expenses and reports.
servers:
  - url: https://us1.fylehq.com/platform/v1beta
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1beta
    description: India Region Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is valid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    '404':
      type: object
      properties:
        message:
          enum:
            - Resource not found
          type: string
          description: >
            This error means the requested resource was not found or the
            requester doesn't have sufficient access.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
    id_integer:
      type: integer
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was created in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: >
        Signifies when this object was updated in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-11T13:14:55.201598+00:00'
    code:
      type: string
      nullable: true
      maxLength: 255
      description: >
        This represents a code that is typically used for syncing with other
        systems.
      example: C1234
    description:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents the description of the resource.
      example: Win the trophy
    is_enabled:
      type: boolean
      description: >
        This indicates if the resource is enabled for use within the
        organisation.
      default: true
      example: true
    project_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
          items:
            type: integer
    cost_center_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    category_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces. In case if no sub_category is present it is same as name of
            the category.
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: >
            List of project ids for which this category can be used. If
            project_ids is null, then this category can be used for any project.
    category_ids:
      type: array
      description: |
        List of category ids.
      items:
        type: integer
        example: 16570
    expense_field_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        seq:
          type: integer
          example: 1
        field_name:
          type: string
          description: |
            This specifies the name of the expense field.
          example: Vendor description
        column_name:
          type: string
          description: >
            This specifies the name of column to which this expense field mapped
            to.
          example: Purpose
        type:
          type: string
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        options:
          type: array
          items:
            type: string
          description: >
            This specifies the option values of the expense field in case on
            SELECT or MULTI_SELECT type.
          example:
            - Chai
            - Coffee
        default_value:
          type: string
          nullable: true
          description: |
            This specifies the default value of the expense fields.
          example: Coffee
        placeholder:
          type: string
          nullable: true
          description: |
            This specifies the placeholder of the expense field.
          example: Enter vendor
        category_ids:
          $ref: '#/components/schemas/category_ids'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        is_custom:
          type: boolean
          description: |
            This field indicates if the expense field is custom or not.
          example: false
        is_mandatory:
          type: boolean
          description: |
            This specifies if the expense field is mandatory or not.
          example: true
        code:
          $ref: '#/components/schemas/code'
    mileage_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        unit:
          type: string
          enum:
            - KM
            - MILES
        vehicle_type:
          type: string
          enum:
            - two_wheeler
            - four_wheeler
            - four_wheeler1
            - four_wheeler3
            - four_wheeler4
            - bicycle
            - electric_car
          example: four_wheeler
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
        slab_rates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                nullable: true
              limit:
                type: number
                nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: ([A-Z]{3})
    org_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/org_id'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the org.
          example: Demo Account
        domain:
          type: string
          maxLength: 255
          description: >-
            This field specifies the domain with which the organisation is
            registered.
          example: example.com
        currency:
          $ref: '#/components/schemas/currency'
    id_string:
      type: string
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address of the employee.

        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
        822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    role:
      type: string
      enum:
        - FYLER
        - APPROVER
        - TRAVEL_ADMIN
        - VERIFIER
        - PAYMENT_PROCESSOR
        - FINANCE
        - ADMIN
        - TRAVEL_AGENT
        - OWNER
        - AUDITOR
        - HOD
        - HOP
      description: |
        Roles are assigned by Admin.
      example: FYLER
    my_profile_out:
      type: object
      additionalProperties: false
      properties:
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        org:
          $ref: '#/components/schemas/org_out_embed'
        user:
          $ref: '#/components/schemas/user_out_embed'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
    account_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          type: string
          nullable: true
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
        currency:
          $ref: '#/components/schemas/currency'
        current_balance_amount:
          type: number
          example: 90.9
        tentative_balance_amount:
          type: number
          example: 43.8
        org_id:
          $ref: '#/components/schemas/org_id'
        category_id:
          type: integer
          description: |
            This id is provided by Fyle to identify a category.
          nullable: true
          example: 49058
    name:
      type: string
      maxLength: 255
      description: >
        This represents the name of the resource. This should be unique in an
        organization
      example: foo123
    department_head_user_ids:
      type: array
      nullable: false
      maxItems: 1
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id provided by Fyle to identify an object.
        example: sdfd2391
      example:
        - uswoirwlwwg
      description: |
        List of IDs of users who are head of the department.
    department_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        department_head_user_ids:
          $ref: '#/components/schemas/department_head_user_ids'
        department_head_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are head of the department.
        doc_url:
          type: string
          nullable: true
          description: |
            Link to an external document that would be shared with employees
          example: https://fyle.stoplight.io/
    timestamptz_utc:
      type: string
      format: date-time
      nullable: true
      description: >-
        Date-time in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    foreign_currency:
      type: string
      nullable: true
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 3768
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id provided by Fyle to identify an object.
      example: 1234
    cost_center_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
    category_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          nullable: true
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        code:
          $ref: '#/components/schemas/code'
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: sdfd2391
    account_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
    mileage_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          enum:
            - two_wheeler
            - four_wheeler
            - four_wheeler1
            - four_wheeler3
            - four_wheeler4
            - bicycle
            - electric_car
          example: four_wheeler
        code:
          $ref: '#/components/schemas/code'
    per_diem_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    report_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - last_approved_at
        - last_submitted_at
        - seq_num
        - title
        - state
        - settlement_id
        - last_paid_at
        - reimbursement_id
        - reimbursement_seq_num
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpvgnwlgw34
        last_approved_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
        last_submitted_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        title:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        settlement_id:
          type: string
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Settlement.
        last_paid_at:
          type: string
          nullable: true
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
        reimbursement_id:
          type: string
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Reimbursement.
          example: reimntGt9ju6qP
        reimbursement_seq_num:
          type: string
          nullable: true
          description: >
            A unique, organization wide identifier for a particular
            reimbursement.<br>

            This id is always prefixed with `P/`.
          example: P/2020/11/29
    file_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: figwiwpjww
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: application/pdf
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
    employee_id:
      type: string
      maxLength: 255
      description: >
        This id provided by Fyle to uniquely identify an employee within an
        organization.

        This id is always prefixed with `ou`.
      example: outGt9ju6qP
    department_id:
      type: string
      maxLength: 255
      nullable: true
      example: dept9in4oIHpdR
    department_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
    employee_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        department_id:
          $ref: '#/components/schemas/department_id'
        department:
          $ref: '#/components/schemas/department_out_embed'
    card_number:
      type: string
      description: |
        Specifies the masked number of the card.
        Add only masked card-numbers, last four digits of the card.
      example: xxxx-4543
    matched_corporate_card_transaction_out_embed:
      type: object
      required:
        - id
        - corporate_card_id
        - corporate_card_number
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card_number:
          $ref: '#/components/schemas/card_number'
    missing_mandatory_fields:
      type: object
      nullable: false
      properties:
        expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
        amount:
          type: boolean
          nullable: false
          description: >
            This field shows whether the amount field is present in the expense
            or not 
        currency:
          type: boolean
          nullable: false
          description: >
            This field shows whether the currency field is present in the
            expense or not 
      description: >
        This object contains all the fields which are mandatory bu tare missing
        in the expense.
    activity_details:
      type: object
      nullable: true
      properties:
        unique_meetings:
          type: number
          nullable: false
          example: 21
        total_meetings:
          type: number
          nullable: false
          example: 70
    extracted_data:
      type: object
      nullable: true
      properties:
        amount:
          type: number
          nullable: true
          example: 21
        vendor_name:
          type: string
          nullable: true
          example: Uber
        currency:
          type: string
          nullable: true
          example: USD
        category:
          type: string
          nullable: true
          example: Taxi
        date:
          type: string
          nullable: true
          example: '2020-07-20'
    expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - user_id
        - user
        - org_id
        - created_at
        - updated_at
        - spent_at
        - source
        - merchant
        - currency
        - amount
        - claim_amount
        - policy_amount
        - admin_amount
        - foreign_currency
        - foreign_amount
        - purpose
        - cost_center_id
        - cost_center
        - category_id
        - category
        - project_id
        - project
        - source_account_id
        - source_account
        - tax_amount
        - tax_group_id
        - is_billable
        - is_reimbursable
        - distance
        - distance_unit
        - mileage_calculated_distance
        - mileage_calculated_amount
        - mileage_rate_id
        - mileage_rate
        - mileage_is_round_trip
        - per_diem_rate_id
        - per_diem_rate
        - per_diem_num_days
        - started_at
        - ended_at
        - travel_classes
        - hotel_is_breakfast_provided
        - locations
        - custom_fields
        - code
        - state
        - seq_num
        - report_id
        - added_to_report_at
        - report
        - is_verified
        - last_verified_at
        - is_receipt_mandatory
        - is_exported
        - last_exported_at
        - file_ids
        - files
        - employee
        - is_corporate_card_transaction_auto_matched
        - matched_corporate_card_transaction_ids
        - matched_corporate_card_transactions
        - last_settled_at
        - missing_mandatory_fields
        - activity_details
        - creator_user_id
        - extracted_data
        - is_manually_flagged
        - is_policy_flagged
        - split_group_id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        source:
          type: string
          description: >
            The name of the client app which is creating the expense.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: SLACK_APP
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          type: number
          nullable: true
          description: >
            The amount for which the expense was/will-be fyled.

            The amount will be in the currency that the organization's home
            currency.<br>


            Note that, this field is calculated from admin_amount,
            policy_amount, claim_amount.


            if admin_amount is present then this value will be same
            admin_amount.

            if policy_amount is present then this value will be same
            policy_amount.

            else this should be same as claim_amount.
          example: 1500
        claim_amount:
          type: number
          nullable: true
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        policy_amount:
          type: number
          nullable: true
          description: |
            The expense amount set by policy.
          example: 1500
        admin_amount:
          type: number
          nullable: true
          description: |
            The expense amount which is modified by admin or approver.
            This could be null if admin or approver has not edited your expense.
          example: null
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        cost_center:
          $ref: '#/components/schemas/cost_center_out_embed'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        category:
          $ref: '#/components/schemas/category_out_embed'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        project:
          $ref: '#/components/schemas/project_out_embed'
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        source_account:
          $ref: '#/components/schemas/account_out_embed'
        tax_amount:
          type: number
          nullable: true
          description: Tax amount as setup by your organisation.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          type: boolean
          nullable: true
          example: true
          description: This fields marks whether a given expense is billable a not.
        is_reimbursable:
          type: boolean
          description: This fields marks whether a given expense is reimbursable a not.
          example: true
        distance:
          type: number
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          type: string
          nullable: true
          description: Unit of distance travelled.
          enum:
            - KM
            - MILES
            - null
          example: MILES
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance compluted by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount compluted by Fyle in mileage expenses.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 9080
        mileage_rate:
          $ref: '#/components/schemas/mileage_rate_out_embed'
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
        per_diem_rate:
          $ref: '#/components/schemas/per_diem_rate_out_embed'
        per_diem_num_days:
          type: integer
          nullable: true
          description: >
            Specific to per diem related expenses, number of days ofr which per
            diem claim is made.
          example: 2
        started_at:
          $ref: '#/components/schemas/timestamptz_utc'
        ended_at:
          $ref: '#/components/schemas/timestamptz_utc'
        travel_classes:
          description: >
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi`
            category.

            index 0 holds onward journey class, index 1 holds return journey
            travel class.
          type: array
          minItems: 0
          maxItems: 2
          items:
            type: string
          example:
            - ECONOMY
            - BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        locations:
          description: >
            This field will be present for travel related categories.

            For travel between Place A to Place B, this array will contain two
            items, From location at array index 0 and To location at array index
            1.

            For travel between Place A to Place c and stopping at Place B, this
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/location'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report.
          example: rpvgnwlgw34
        added_to_report_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was added to a report.
            If this expense is not added to a report, then this could be null.
        report:
          $ref: '#/components/schemas/report_out_embed'
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been verified by a verifier.
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was verified.
        is_receipt_mandatory:
          type: boolean
          nullable: true
          description: >
            Determines whether a receipt is missing for this expense when it is
            required.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: >-
            signifies when this expense was exported to an external accounting
            system.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        is_corporate_card_transaction_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this corporate card transaction is auto_matched.
        matched_corporate_card_transaction_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the corporate card transaction ids which are matched to this
            expense
          example:
            - btxnwownwrng
        matched_corporate_card_transactions:
          type: array
          items:
            $ref: '#/components/schemas/matched_corporate_card_transaction_out_embed'
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last settled.
        missing_mandatory_fields:
          $ref: '#/components/schemas/missing_mandatory_fields'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        activity_details:
          $ref: '#/components/schemas/activity_details'
        extracted_data:
          $ref: '#/components/schemas/extracted_data'
        is_manually_flagged:
          type: boolean
          nullable: true
          description: >-
            This fields marks whether a given expense is manually flagged or
            not.
          example: true
        is_policy_flagged:
          type: boolean
          nullable: true
          description: >-
            This fields marks whether a given expense is flagged by policy or
            not.
          example: true
        split_group_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id provided by Fyle to identify an object.
          example: txwownwrngx
    timestamptz_pst:
      type: string
      format: date-time
      nullable: true
      description: >-
        Date-time in [ISO8601
        format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T01:18:19.292-08:00'
    spent_at:
      allOf:
        - $ref: '#/components/schemas/timestamptz_pst'
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
    source:
      type: string
      enum:
        - WEBAPP
        - SLACK
        - TPA
        - CORPORATE_CARD
      description: |
        Enum value signifying the client from which this expense was created
      example: SLACK
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the vendor to which the expense was made.
      example: Uber
    claim_amount:
      type: number
      description: |
        The expense amount as claimed by user.
      example: 1984.18
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      nullable: true
      description: Unit of distance travelled.
      enum:
        - KM
        - MILES
      example: MILES
    travel_classes:
      description: >
        This field is applicable only for `Flight`, `Train`, `Bus` category.

        Index 0 holds onward journey travel class, index 1 holds return journey
        travel class.
      type: array
      minItems: 0
      maxItems: 2
      nullable: true
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    locations:
      description: >
        This field will be present for travel related categories.

        For travel between Place A to Place B, this array will contain two
        items. From location at array index i and To location at array index
        i+1.
      type: array
      nullable: true
      minItems: 0
      maxItems: 10
      items:
        $ref: '#/components/schemas/location'
    spender_expense_in:
      type: object
      additionalProperties: false
      required:
        - claim_amount
        - spent_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        spent_at:
          $ref: '#/components/schemas/spent_at'
        source:
          $ref: '#/components/schemas/source'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        claim_amount:
          $ref: '#/components/schemas/claim_amount'
        purpose:
          type: string
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        tax_amount:
          type: number
          nullable: true
          description: Tax amount as setup by your organization.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          $ref: '#/components/schemas/foreign_currency'
        is_reimbursable:
          $ref: '#/components/schemas/foreign_currency'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    expense_add_comment_action_in:
      type: object
      required:
        - id
        - comment
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txsjfwlrglw
        comment:
          type: string
          description: Comment made on the expense.
          example: This is a food expense.
    expense_attach_receipt_in:
      type: object
      required:
        - id
        - file_id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txsjfwlrglw
        file_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: fisjfwlrglw
    expense_creation_from_receipt_in:
      type: object
      required:
        - file_name
        - file_content
      properties:
        file_name:
          type: string
          maxLength: 255
          description: |
            Takes the name of the file which contains the receipt.
          example: very_important.jpeg
        file_content:
          type: string
          description: |
            This field takes the base64 encoded representation of the file.
          example: JVBERi0xLjQKMSAwIG9iago8PAovVGl0bGUgKP7/KQovQ3JlYX...
        source:
          $ref: '#/components/schemas/source'
    per_diem_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        rate:
          type: number
          example: 10
          description: Amount per night
    merchant_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        display_name:
          type: string
          description: |
            Merchant name
          example: Uber
    webhook_url:
      type: string
      description: |
        URL Endpoint for webhook
      example: https://api.custom.com/webhook1
    spender_subscriptions_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        created_at:
          $ref: '#/components/schemas/created_at'
        user_id:
          $ref: '#/components/schemas/fk_string'
    subscriptions_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - webhook_url
      properties:
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    report_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - user_id
        - user
        - purpose
        - currency
        - amount
        - tax
        - state
        - num_expenses
        - is_manually_flagged
        - is_policy_flagged
        - last_paid_at
        - last_approved_at
        - last_submitted_at
        - seq_num
        - source
        - approvals
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this report has been verified by a verifier
        settlement_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: set5nlgnwgwl
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            If physical has been collected for this report
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: >
            Signifies if and when the physical bill for this report was
            submitted.
          nullable: true
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this expense has been exported to external
            accounting system or not.
        last_paid_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
    report_out_subscriptions:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - data
        - reason
      properties:
        resource:
          type: string
          example: REPORT
        action:
          type: string
          enum:
            - PARTIALLY_APPROVED
            - SUBMITTED
            - APPROVER_ADDED
            - APPROVER_SENDBACK
            - APPROVED
            - APPROVER_REMOVED
            - PAYMENT_PENDING
            - PAYMENT_PROCESSING
            - PAID
            - COMMENTED
            - EXPENSES_ADDED
          example: APPROVED
        data:
          allOf:
            - $ref: '#/components/schemas/report_out'
            - type: object
              additionalProperties: false
              properties:
                updated_by_user:
                  $ref: '#/components/schemas/user_out_embed'
        reason:
          type: string
          example: comment given by Approver while approving the report.
    schedule_config:
      type: object
      nullable: false
      properties:
        type:
          nullable: false
          type: string
          example: interval
          enum:
            - interval
            - date
            - cron
        when:
          nullable: false
          oneOf:
            - type: object
              additionalProperties: false
              properties:
                weeks:
                  type: number
                  example: 2
                days:
                  type: number
                  example: 12
                hours:
                  type: number
                  example: 6
                minutes:
                  type: number
                  example: 30
                seconds:
                  type: number
                  example: 30
                end_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                start_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                timezone:
                  nullable: true
                  type: string
                  example: UTC
                jitter:
                  nullable: true
                  type: number
                  example: 20
            - type: object
              additionalProperties: false
              properties:
                day:
                  type: string
                  example: last
                hour:
                  type: number
                  example: 23
                timezone:
                  nullable: true
                  type: string
                  example: Asia/Kolkata
            - type: object
              additionalProperties: false
              properties:
                run_date:
                  nullable: true
                  type: string
                  example: '2021-05-12T10:16:50.410Z'
    schedule_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        config:
          $ref: '#/components/schemas/schedule_config'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to which the object is associated.
          readOnly: true
          example: uswjwgnwwgo
          nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    event_payload:
      nullable: true
      type: object
      properties:
        resource_id:
          nullable: true
          type: string
          example: tx123TRew12
        resource_name:
          nullable: true
          type: string
          example: TRANSACTION
    schedule_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        event_payload:
          $ref: '#/components/schemas/event_payload'
        config:
          $ref: '#/components/schemas/schedule_config'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        event_name:
          type: string
          nullable: true
          example: report.created
    report_action_with_expenses_ids_to_eject:
      type: object
      additionalProperties: false
      required:
        - id
        - expense_ids
      properties:
        id:
          type: string
          description: |
            id of report, from which the expenses are to be ejected
          example: rpa21A2rdj2
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    reason:
      type: string
      description: |
        Explanation to the action if provided by the user
      example: All bills are in order
    advance_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advances.
            This id is always prefixed with `adv`.
          readOnly: true
          example: advkvnwrnpwi
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
    advance_request_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this advance request approval
    advance_request_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        policy_amount:
          type: number
          nullable: true
          description: |
            The advance request amount set by policy.
          example: 1500
        advance_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance:
          $ref: '#/components/schemas/advance_out_embed'
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - SENT_BACK
            - PULLED_BACK
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        is_policy_flagged:
          type: boolean
          nullable: true
          description: |
            Determines whether this report was flagged from a policy
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_approval_out_embed'
          description: |
            List of advance request approval objects
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this advance request has been exported to
            external accounting system or not.
    advance_request_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    advance_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        payment_mode:
          type: string
          enum:
            - CARD
            - BANK_TRANSFER
            - CHEQUE_DD
            - FOREX
          example: CASH
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: accwiofowiww
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: >
            The name of the client app from which this advance was created.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not

            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        code:
          $ref: '#/components/schemas/code'
        issued_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance was issued.
          nullable: true
        card_number:
          type: string
          nullable: true
          example: XXXXXXXXXXXX1234
        settlement_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: set5nlgnwgwl
          nullable: true
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this advance has been exported to external
            accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: >-
            signifies when this advance was exported to an external accounting
            system.
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    corporate_card_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          nullable: true
          description: |
            The unique id of an user to whom the card is assigned
          example: uswjwgnwwgo
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          $ref: '#/components/schemas/card_number'
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        data_feed_source:
          type: string
          nullable: true
          description: >
            signifies the source of how card is added and how further card
            transactions could be synced
          example: BANK FEED - CDF
        code:
          type: string
          nullable: true
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity

            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last assigned.
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card.
          nullable: true
          example: uswjwgnwwgo
        is_visa_enrolled:
          type: boolean
          description: |
            If the card is enrolled with direct visa_feed
          nullable: false
        is_dummy:
          type: boolean
          description: |
            If the card is a test card
          nullable: false
        last_ready_for_verification_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was ready to be verified 
          example: '2022-02-01T07:20:30.951475+00:00'
          nullable: true
        last_verification_attempt_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the last card verification was attempted
          nullable: true
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was verified
          example: '2022-02-01T07:20:39.207250+00:00'
          nullable: true
        verification_status:
          type: string
          nullable: false
          description: |
            Verification status of the corporate card
          enum:
            - VERIFIED
            - NOT_VERIFIED
            - READY_FOR_VERIFICATION
      required:
        - id
        - org_id
        - user_id
        - created_at
        - updated_at
        - bank_name
        - card_number
        - cardholder_name
        - data_feed_source
        - code
        - last_synced_at
        - last_assigned_at
        - assignor_user_id
        - is_visa_enrolled
        - is_dummy
        - last_ready_for_verification_at
        - last_verification_attempt_at
        - last_verified_at
        - verification_status
    user_out_embed_nullable:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    corporate_card_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
    matched_expense_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - currency
        - amount
        - spent_at
        - merchant
        - purpose
        - foreign_currency
        - foreign_amount
        - state
        - seq_num
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        merchant:
          type: string
          nullable: true
          maxLength: 255
          description: >
            String denoting the name of the merchant to which the Expense was
            made.
          example: Uber
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
    string_detail:
      type: string
      description: >-
        Additional string details of the card transaction. Can hold details upto
        256 characters in length.
      nullable: true
      example: sample string
    double_precision_detail:
      type: number
      description: >-
        Additional floating point numeric details of the card transaction. Same
        as double precision.
      nullable: true
      example: 468.2923
    timestamp_detail:
      type: string
      format: date-time
      description: >
        Additional details of the card transaction. <a
        href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339, section
        5.6 compliant timestamp.</a>
      example: '2020-07-03T18:19:31.193Z'
      nullable: true
    integer_detail:
      type: integer
      description: Additional integer details of the card transaction.
      nullable: true
      example: 5
    text_detail:
      type: string
      description: Additional text details of the card transaction.
      nullable: true
      example: sample text
    corporate_card_transaction_metadata:
      type: object
      nullable: true
      description: >
        Additional data that can optionally be stored. Some example details are
        added for reference.
      properties:
        merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_supplier_name:
          $ref: '#/components/schemas/string_detail'
        flight_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        flight_ticket_number:
          $ref: '#/components/schemas/string_detail'
        flight_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        flight_travel_date:
          $ref: '#/components/schemas/timestamp_detail'
        flight_service_class:
          $ref: '#/components/schemas/string_detail'
        flight_carrier_code:
          $ref: '#/components/schemas/string_detail'
        flight_fare_base_code:
          $ref: '#/components/schemas/string_detail'
        flight_trip_leg_number:
          $ref: '#/components/schemas/string_detail'
        hotel_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        hotel_supplier_name:
          $ref: '#/components/schemas/string_detail'
        hotel_checked_in_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_nights:
          $ref: '#/components/schemas/integer_detail'
        hotel_checked_out_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_country:
          $ref: '#/components/schemas/string_detail'
        hotel_city:
          $ref: '#/components/schemas/string_detail'
        hotel_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        fleet_product_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_product_supplier_name:
          $ref: '#/components/schemas/string_detail'
        fleet_service_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_service_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        car_rental_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_started_at:
          $ref: '#/components/schemas/timestamp_detail'
        car_rental_days:
          $ref: '#/components/schemas/integer_detail'
        car_rental_ended_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_issued_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_number:
          $ref: '#/components/schemas/string_detail'
        general_issuing_carrier:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_code:
          $ref: '#/components/schemas/string_detail'
        general_ticket_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        general_ticket_total_tax:
          $ref: '#/components/schemas/double_precision_detail'
        merchant_address:
          $ref: '#/components/schemas/text_detail'
    is_implicitly_merged:
      type: boolean
      nullable: false
      description: >
        This indicates if the corporate credit card transaction was result of
        implicit merge.
      default: false
      example: false
    is_implicit_merge_blocked:
      type: boolean
      nullable: false
      description: >
        This indicates if the corporate credit card transaction can be
        considered again for implicit merge or not.
      default: false
      example: false
    corporate_card_transaction_list_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to whom the card transaction is assigned.
          readOnly: true
          nullable: true
          example: null
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          nullable: false
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: set7oisw24gju
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example:
            - txwownwrng
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        is_exported:
          type: boolean
          nullable: true
          description: >
            Determines whether this CCC transaction has been exported to
            external accounting system or not.
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - is_exported
        - metadata
    corporate_card_transaction_id_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
      required:
        - id
    corporate_card_transaction_mark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: true
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_ignore_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: true
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_undo_ignore_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_match_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_match_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmatch_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_unmatch_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the name of the vendor to which the card transaction
            was made.

            Note: This is not same as the merchant added in Fyle but just a
            string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: >
            Determines whether this card transaction is marked as personal
            transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: >
            Holds the expense ids which are automatically suggested to be
            matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        settlement_id:
          type: string
          maxLength: 255
          nullable: true
          description: >
            String denoting the category of the card transaction

            Note: This is not same as the category added in Fyle but just a
            string
          example: null
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
        is_implicitly_merged:
          $ref: '#/components/schemas/is_implicitly_merged'
        is_implicit_merge_blocked:
          $ref: '#/components/schemas/is_implicit_merge_blocked'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - settlement_id
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    spender_employee_out:
      type: object
      additionalProperties: false
      properties:
        user_id:
          $ref: '#/components/schemas/fk_string'
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee.
          example: John Doe
    tax_group_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tgwfjbgqo32
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the tax_group.
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 18
          description: percentage of tax levied.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    file_in:
      type: object
      required:
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
    file_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: text/csv
    file_generate_urls_action_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    file_generate_urls_action_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          type: string
          description: |
            Link to download this file
  parameters:
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in
        RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
    order:
      in: query
      name: order
      description: |
        use comma separated column names for sorting the results. <br>
        For sorting in descending order, use `column_name.desc`
      schema:
        type: string
        example: updated_at.desc,id
    q:
      in: query
      name: q
      description: A search query to filter the results.
      schema:
        type: string
        example: Ritas
tags:
  - name: Accounts
    description: |
      These APIs gives access to your account's data.
  - name: Advances
    description: |
      This API gives you access to view your Cash Advances data.
  - name: Categories
    description: |
      This API gives you list of your organisation's Categories data.
  - name: Corporate Cards
    description: |
      This API gives you access to your Cards data.
  - name: Corporate Card Transactions
    description: |
      This API gives you access to your Corporate Card Transaction data.
  - name: Cost Centers
    description: |
      These APIs gives you access to Cost Centers data.
  - name: Departments
    description: |
      These APIs gives you access to Departments data.
  - name: Expenses
    description: |
      This API gives you access to your Expenses data.
  - name: Employees
    description: |
      These APIs gives you access to manage your organisation's Employees
  - name: Merchants
    description: >
      This API gives you access to merchants, primarily to help with
      autocomplete.
  - name: Mileage Rates
    description: |
      These APIs gives access to your organisation's Mileage Rates
  - name: My Profile
    description: |
      This API gives you access to manage your profile data.
  - name: Per Diem Rates
    description: |
      These APIs gives you access to your Per Diem Rates
  - name: Projects
    description: |
      These APIs gives you access to Projects data.
  - name: Reports
    description: |
      This API gives you access to your Expense Reports data.
  - name: Schedules
    description: |
      This API let you create Scheduled jobs. 
      This API gives you access to your Corporate Cards data.
  - name: Subscriptions
    description: |
      This API allows you to subscribe to different events.
  - name: Tax Groups
    description: |
      These APIs gives you access to manage your organisation's Tax Groups data.
paths:
  /spender/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: projects_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/cost_centers:
    get:
      operationId: cost_centers_list
      tags:
        - Cost Centers
      summary: List cost centers
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: categories_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/category_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expense_fields:
    get:
      tags:
        - Expenses
      summary: List expense fields
      operationId: expense_fields_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_field_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/mileage_rates:
    get:
      tags:
        - Mileage Rates
      summary: List mileage rates
      operationId: mileage_rates_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/mileage_rate_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/my_profile:
    get:
      tags:
        - My Profile
      summary: Retrieve my profile
      operationId: my_profile_get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/my_profile_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      operationId: accounts_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/account_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/departments:
    get:
      tags:
        - Departments
      summary: List departments
      operationId: departments_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/department_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      operationId: expenses_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: |
                      The total number of objects that can be requested.
                    type: integer
                    example: 10000
                  offset:
                    description: >
                      offset is used to skip that many number of objects before
                      counting. <br>

                      For example, if there are 2000 objects, <br>

                      The first request will have offset as 0 and limit as 1000
                      to return first 1000 objects. <br>

                      The second request will have offset as 1000 and limit as
                      1000 to return next 1000 objects. <br>
                    type: integer
                    example: 10
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Expenses
      summary: Create or update expense
      description: |
        Create or update an expense.
      operationId: expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/expenses/{id}:
    delete:
      tags:
        - Expenses
      summary: Delete an expense
      description: |
        Delete an expense.
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the expense that needs to be deleted.
          schema:
            type: string
      operationId: expenses_delete
      responses:
        '204':
          description: The expense was deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/add_comment:
    post:
      tags:
        - Expenses
      summary: Add comment on an expense
      description: |
        This API creates comment on a specific expense.
      operationId: expenses_add_comment_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_add_comment_action_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/attach_receipt:
    post:
      tags:
        - Expenses
      summary: Attach Receipt to an expense
      description: |
        This API attach Receipt to an existing expense
      operationId: attach_receipt_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_attach_receipt_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/create_from_receipt:
    post:
      tags:
        - Expenses
      summary: Create Expense from a receipt
      description: |
        This API create expense from Base64 of a receipt
      operationId: create_from_receipt_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_creation_from_receipt_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/per_diem_rates:
    get:
      tags:
        - Per Diem Rates
      summary: List per diem rates
      operationId: per_diem_rates_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/per_diem_rate_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/merchants:
    get:
      tags:
        - Merchants
      summary: List merchants
      operationId: merchants_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/merchant_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: subscribe to different events using this API
      operationId: subscriptions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/subscriptions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/spender_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
      callbacks:
        REPORT.*:
          '{$request.body#/data/webhook_url}':
            post:
              operationId: report_subscriptions_callback
              summary: Object that will be sent to the callback url
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/report_out_subscriptions'
              responses:
                '200':
                  description: OK
    get:
      tags:
        - Subscriptions
      summary: List Spender Subscriptions
      operationId: subscriptions_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/schedules:
    post:
      tags:
        - Schedules
      summary: Create or update a Schedule
      description: |
        Create or update a Schedule.
      operationId: schedules_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/schedule_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/schedule_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Schedules
      summary: List Schedule
      operationId: schedules_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schedule_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/reports:
    get:
      operationId: reports_list
      tags:
        - Reports
      summary: List expense reports
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/reports/eject_expenses:
    post:
      tags:
        - Reports
      summary: Eject expenses from a report
      description: Eject expenses from a report
      operationId: reports_eject_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: >-
                    #/components/schemas/report_action_with_expenses_ids_to_eject
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests:
    get:
      tags:
        - Advances
      summary: List advance requests
      operationId: advance_requests_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    post:
      tags:
        - Advances
      summary: Create or update an advance requests
      description: |
        Create or update an advance requests.
      operationId: advance_requests_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advances:
    get:
      tags:
        - Advances
      summary: List advances
      operationId: advances_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/corporate_cards:
    get:
      tags:
        - Corporate Cards
      summary: List of corporate cards assigned to user
      operationId: corporate_cards_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/corporate_card_transactions:
    get:
      tags:
        - Corporate Card Transactions
      summary: List corporate card transactions
      operationId: corporate_card_transactions_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_transaction_list_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/corporate_card_transactions/mark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Mark a corporate card transaction as personal
      description: |
        Mark a corporate card transaction as personal
      operationId: corporate_card_transactions_mark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_mark_personal_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/unmark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmark a corporate card transaction which is marked as personal
      description: |
        Unmark a corporate card transaction which is marked as personal
      operationId: corporate_card_transactions_unmark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_unmark_personal_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Ignore a corporate card transaction
      description: |
        Ignore a corporate card transaction
      operationId: corporate_card_transactions_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_ignore_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/undo_ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Undo an ignored corporate card transaction
      description: |
        Undo an ignored corporate card transaction
      operationId: corporate_card_transactions_undo_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_undo_ignore_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/match:
    post:
      tags:
        - Corporate Card Transactions
      summary: Match corporate card transaction
      description: |
        Match corporate card transaction to expenses
      operationId: corporate_card_transactions_match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_match_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_match_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/unmatch:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmatch corporate card transaction
      description: |
        Unmatch a matched corporate card transaction
      operationId: corporate_card_transactions_unmatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_unmatch_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: >-
                      #/components/schemas/corporate_card_transaction_unmatch_out
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/employees:
    get:
      tags:
        - Employees
      summary: List employees
      operationId: employees_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_employee_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/tax_groups:
    get:
      tags:
        - Tax Groups
      summary: List tax groups
      operationId: tax_groups_list
      description: >
        This API supports very rich filtering on all response fields and
        pagination via query parameters. To understand how to use these
        parameters, please see the [Guide to Data
        APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tax_group_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/files:
    post:
      operationId: files_post
      tags:
        - Files
      summary: Create a file
      description: |
        Create a file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/file_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/files/generate_urls:
    post:
      tags:
        - Files
      summary: Generate download and upload URLs
      description: >
        Once a file is created, its contents may need to be uploaded (or
        downloaded). To upload (or download) contents, you'll

        need to generate a temporary signed URL. This API accomplishes that. The
        signed URL is valid for 5 mins.
      operationId: files_generate_urls_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/file_generate_urls_action_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_generate_urls_action_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
