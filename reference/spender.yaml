openapi: 3.0.3
info:
  version: '1.0'
  title: Spender APIs
  termsOfService: https://www.fylehq.com/privacy/terms-and-conditions
  contact:
    name: Platform Beta
    email: support@fylehq.com
  description: |
    These APIs are used by applications that operate on the Spender's behalf. Very commonly, it is to enable creation of expenses and reports.
servers:
  - url: https://us1.fylehq.com/platform/v1
    description: US Region Server
  - url: https://in1.fylehq.com/platform/v1
    description: India Region Server
tags:
  - name: Accounts
    description: |
      These APIs gives access to your account's data.
  - name: Advances
    description: |
      This API gives you access to view your Cash Advances data.
  - name: Automations
    description: |
      This API gives you access to organisation's automations data.
  - name: Categories
    description: |
      This API gives you list of your organisation's Categories data.
  - name: Corporate Cards
    description: |
      This API gives you access to your Cards data.
  - name: Corporate Card Transactions
    description: |
      This API gives you access to your Corporate Card Transaction data.
  - name: Cost Centers
    description: |
      These APIs gives you access to Cost Centers data.
  - name: Departments
    description: |
      These APIs gives you access to Departments data.
  - name: Expenses
    description: |
      This API gives you access to your Expenses data.
  - name: Expense Policies
    description: |
      This API gives you access to your organisation's Expense Policies
  - name: Employees
    description: |
      These APIs gives you access to manage your organisation's Employees
  - name: Employee Settings
    description: |
      These APIs gives you access to manage employee settings
  - name: Merchants
    description: |
      This API gives you access to merchants, primarily to help with autocomplete.
  - name: Mileage Rates
    description: |
      These APIs gives access to your organisation's Mileage Rates
  - name: My Profile
    description: |
      This API gives you access to manage your profile data.
  - name: Per Diem Rates
    description: |
      These APIs gives you access to your Per Diem Rates
  - name: Projects
    description: |
      These APIs gives you access to Projects data.
  - name: Reports
    description: |
      This API gives you access to your Expense Reports data.
  - name: Schedules
    description: |
      This API let you create Scheduled jobs. 
      This API gives you access to your Corporate Cards data.
  - name: Subscriptions
    description: |
      This API allows you to subscribe to different events.
  - name: Tax Groups
    description: |
      These APIs gives you access to manage your organisation's Tax Groups data.
  - name: Feature Configs
    description: |
      These APIs gives you access to manage feature configs.
  - name: Expense Policy Comments
    description: |
      These APIs gives you access to manage expense policy comments.
  - name: Secondary Emails
    description: |
      These APIs gives you access to manage your secondary email addresses.
paths:
  /spender/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: projects_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/cost_centers:
    get:
      operationId: cost_centers_list
      tags:
        - Cost Centers
      summary: List cost centers
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/cost_center_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: categories_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/category_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expense_fields:
    get:
      tags:
        - Expenses
      summary: List expense fields
      operationId: expense_fields_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_field_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/dependent_expense_field_values:
    get:
      tags:
        - Expenses
      summary: List dependent expense field values
      operationId: dependent_expense_field_values_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - in: query
          name: limit
          description: |
            A limit on the number of objects to be returned. Allowed values are from 1 to 200.
          schema:
            type: integer
            example: 10
            default: 100
            maximum: 200
        - in: query
          name: is_enabled
          schema:
            type: string
            default: eq.true
        - in: query
          name: parent_expense_field_id
          required: true
          schema:
            type: string
            example: eq.123
        - in: query
          name: expense_field_id
          required: true
          schema:
            type: string
            example: eq.123
        - in: query
          name: parent_expense_field_value
          required: true
          schema:
            type: string
            example: ilike.abc%
        - in: query
          name: expense_field_value
          schema:
            type: string
            example: ilike.abc%
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/dependent_expense_field_values_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/mileage_rates:
    get:
      tags:
        - Mileage Rates
      summary: List mileage rates
      operationId: mileage_rates_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/mileage_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/my_profile:
    get:
      tags:
        - My Profile
      summary: Retrieve my profile
      operationId: my_profile_get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/my_profile_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/recently_used_fields:
    get:
      tags:
        - Recently Used Fields
      summary: Retrieve recently used fields
      operationId: recently_used_fields_get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/recently_used_fields_out'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      operationId: accounts_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/account_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/departments:
    get:
      tags:
        - Departments
      summary: List departments
      operationId: departments_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/department_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      operationId: expenses_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      parameters:
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: |
                      The total number of objects that can be requested.
                    type: integer
                    example: 10000
                  offset:
                    description: |
                      offset is used to skip that many number of objects before counting. <br>
                      For example, if there are 2000 objects, <br>
                      The first request will have offset as 0 and limit as 1000 to return first 1000 objects. <br>
                      The second request will have offset as 1000 and limit as 1000 to return next 1000 objects. <br>
                    type: integer
                    example: 10
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Expenses
      summary: Create or update expense
      description: |
        Create or update an expense.<br> To create/edit per diem expenses, please send category id of per diem category, along with some required additional fields mentioned below
      operationId: expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/expenses/bulk:
    post:
      tags:
        - Expenses
      summary: Update expenses in bulk
      description: |
        Update expenses in bulk.
      operationId: expenses_post_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/spender_expenses_bulk_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/delete/bulk:
    post:
      tags:
        - Expenses
      summary: Delete Expenses in Bulk
      description: |
        Delete multiple expenses in bulk.
      operationId: expenses_delete_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/expense_delete_in'
      responses:
        '200':
          description: The expenses were deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/expenses/attach_receipt:
    post:
      tags:
        - Expenses
      summary: Attach Receipt to an expense
      description: |
        This API attach Receipt to an existing expense
      operationId: attach_receipt_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_attach_receipt_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/create_from_receipt:
    post:
      tags:
        - Expenses
      summary: Create Expense from a receipt
      description: |
        This API create expense from Base64 of a receipt
      operationId: create_from_receipt_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_creation_from_receipt_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/create_from_file/bulk:
    post:
      tags:
        - Expenses
      summary: Create Expenses from files
      description: |
        This API creates expenses from existing files.
      operationId: create_from_file_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/expense_creation_from_file_in'
              additionalProperties: false
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/attach_files/bulk:
    post:
      tags:
        - Expenses
      summary: Attach files to an expense in bulk
      description: |
        This API attaches files to an expense in bulk
      operationId: attach_files_to_expense_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/attach_files_to_expense_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/permissions:
    post:
      tags:
        - Expenses
        - Expense permissions
        - Permissions
      summary: Expense Permissions
      description: |
        Expense Permissions for the user
      operationId: expense_permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/per_diem_rates:
    get:
      tags:
        - Per Diem Rates
      summary: List per diem rates
      operationId: per_diem_rates_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/per_diem_rate_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/merchants:
    get:
      tags:
        - Merchants
      summary: List merchants
      operationId: merchants_list
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/display_name'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/merchant_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: subscribe to different events using this API
      operationId: subscriptions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  $ref: '#/components/schemas/subscriptions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/spender_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
      callbacks:
        REPORT.*:
          '{$request.body#/data/webhook_url}':
            post:
              operationId: report_subscriptions_callback
              summary: Object that will be sent to the callback url
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/report_out_subscriptions_spender'
              responses:
                '200':
                  description: OK
    get:
      tags:
        - Subscriptions
      summary: List Spender Subscriptions
      operationId: subscriptions_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_subscriptions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/schedules:
    post:
      tags:
        - Schedules
      summary: Create or update a Schedule
      description: |
        Create or update a Schedule.
      operationId: schedules_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/schedule_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/schedule_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Schedules
      summary: List Schedule
      operationId: schedules_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schedule_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/reports:
    post:
      tags:
        - Reports
      summary: Create or update an Expense Report.
      description: |
        Create or update an Expense Report.
      operationId: reports_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_report_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      operationId: reports_list
      tags:
        - Reports
      summary: List expense reports
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/reports/delete/bulk:
    post:
      tags:
        - Reports
      summary: Delete Reports in Bulk
      description: |
        Delete multiple reports in bulk.
      operationId: reports_delete_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/report_delete_in'
      responses:
        '200':
          description: The reports were deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/reports/add_expenses:
    post:
      tags:
        - Reports
      summary: Add expenses to a report
      description: Add expenses to a report
      operationId: reports_add_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_with_expenses_ids_to_add'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/eject_expenses:
    post:
      tags:
        - Reports
      summary: Eject expenses from a report
      description: Eject expenses from a report
      operationId: reports_eject_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_with_expenses_ids_to_eject'
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/submit:
    post:
      tags:
        - Reports
      summary: Submit report
      description: Submit report
      operationId: reports_submit_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_submit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/resubmit:
    post:
      tags:
        - Reports
      summary: Resubmit report
      description: Resubmit report
      operationId: reports_resubmit_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_action_resubmit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/stats:
    post:
      tags:
        - Reports
      summary: Reports Stats
      description: |
        Reports Stats
      operationId: reports_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/reports_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/reports_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/suggest_purpose:
    post:
      tags:
        - Reports
      summary: Suggests purpose for an Expense Report
      description: Suggests purpose of an Expense Report
      operationId: suggests_purpose
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_purpose_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_purpose_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/filters:
    post:
      tags:
        - Reports
      summary: Create Report saved filters
      description: |
        Save report filters for personal use or share them among other spenders.
      operationId: report_filters_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/report_filters_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/report_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      tags:
        - Reports
      summary: List Report saved filters
      operationId: report_filters_get
      description: |
        List filters saved by the spender or shared among other spenders.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/report_filters_out'
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/reports/filters/delte:
    post:
      tags:
        - Reports
      summary: Delete Report saved filter
      description: |
        Delete Report saved filter having the provided id.
      operationId: report_filters_post_action_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/report_filters_delete_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/report_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/comments:
    post:
      tags:
        - Reports
      summary: Comment on a report
      description: Comment on a report
      operationId: report_comments_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_comments_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_comments_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/permissions:
    post:
      tags:
        - Reports
      summary: Reports Permissions
      description: |
        Reports Permissions for a user
      operationId: reports_permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/report_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/report_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/reports/exports:
    get:
      tags:
        - Reports
      summary: Get Reports Export
      description: |
        Get reports export request details. This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: reports_exports_get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/reports_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Reports
      summary: Create Reports Export
      description: |
        Create Reports Export Request.
      operationId: reports_exports_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/reports_exports_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/reports_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/advance_requests:
    get:
      tags:
        - Advances
      summary: List advance requests
      operationId: advance_requests_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    post:
      tags:
        - Advances
      summary: Create or update an advance requests
      description: |
        Create or update an advance requests.
      operationId: advance_requests_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/stats:
    post:
      tags:
        - Advances
      summary: Advance Requests Stats
      description: |
        Advance Requests Stats
      operationId: advance_requests_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_requests_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_requests_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advances:
    get:
      tags:
        - Advances
      summary: List advances
      operationId: advances_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/advances/stats:
    post:
      tags:
        - Advances
      summary: Advances Stats
      description: |
        Advances Stats
      operationId: advances_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advances_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advances_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_wallets:
    get:
      tags:
        - Advances
      summary: List advance wallets
      operationId: advance_wallets_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_wallet_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/corporate_cards:
    get:
      tags:
        - Corporate Cards
      summary: List of corporate cards assigned to user
      operationId: corporate_cards_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/corporate_cards/yodlee_accounts:
    get:
      tags:
        - Corporate Cards
      summary: List of yodlee corporate cards assigned to user
      operationId: corporate_card_yodlee_accounts_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/yodlee_accounts_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/corporate_card_transactions:
    get:
      tags:
        - Corporate Card Transactions
      summary: List corporate card transactions
      operationId: corporate_card_transactions_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/corporate_card_transaction_list_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/corporate_card_transactions/expenses/stats:
    post:
      tags:
        - Corporate Card Transactions
      summary: Get corporate card transactions expenses stats
      description: |
        Get stats of corporate card transaction expenses grouped by card number and expense state.
      operationId: corporate_card_transactions_expenses_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transactions_expenses_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transactions_expenses_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/mark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Mark a corporate card transaction as personal
      description: |
        Mark a corporate card transaction as personal
      operationId: corporate_card_transactions_mark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_mark_personal_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/unmark_personal:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmark a corporate card transaction which is marked as personal
      description: |
        Unmark a corporate card transaction which is marked as personal
      operationId: corporate_card_transactions_unmark_personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_unmark_personal_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Ignore a corporate card transaction
      description: |
        Ignore a corporate card transaction
      operationId: corporate_card_transactions_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_ignore_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/undo_ignore:
    post:
      tags:
        - Corporate Card Transactions
      summary: Undo an ignored corporate card transaction
      description: |
        Undo an ignored corporate card transaction
      operationId: corporate_card_transactions_undo_ignore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_id_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_undo_ignore_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/match:
    post:
      tags:
        - Corporate Card Transactions
      summary: Match corporate card transaction
      description: |
        Match corporate card transaction to expenses
      operationId: corporate_card_transactions_match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_match_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_match_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/corporate_card_transactions/unmatch:
    post:
      tags:
        - Corporate Card Transactions
      summary: Unmatch corporate card transaction
      description: |
        Unmatch a matched corporate card transaction
      operationId: corporate_card_transactions_unmatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/corporate_card_transaction_unmatch_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/corporate_card_transaction_unmatch_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/employees:
    get:
      tags:
        - Employees
      summary: List employees
      operationId: employees_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_employee_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Employees
      summary: Update employee profile details
      description: |
        Allows employee to update specific profile details.
      operationId: spender_employee_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_employee_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/spender_employee_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/employees/current:
    get:
      tags:
        - Employees
      summary: Get current employee
      operationId: employees_current
      description: |
        Get the current employee details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/spender_employee_current_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/employees/commute_details:
    post:
      tags:
        - Employees
      summary: Update Commute Details
      description: |
        Update spender's commute details to use commute deduction feature in mileage expenses.
      operationId: employee_commute_details_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - commute_details
                  properties:
                    commute_details:
                      $ref: '#/components/schemas/commute_details_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/spender_commute_details_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/employees/commute_details/delete:
    post:
      tags:
        - Employees
      summary: Delete Commute Details
      description: |
        Delete spender's commute details. Spender will not be able to use commute deduction feature in mileage expenses.
      operationId: employee_commute_details_delete_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - id
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/id_integer'
                      description: Current commute details id of the spender. This id is provided by Fyle to identify an object.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/commute_details'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/employees/delegatees:
    post:
      tags:
        - Employees
      summary: Assign delegatees
      operationId: employees_delegatees_post
      description: |
        Assign delegatees to employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_delegatees_post_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/spender_delegatees_post_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/employees/delegators:
    get:
      tags:
        - Employees
      summary: Employee's Delegators
      operationId: employees_delegators_list
      description: |
        Get a list of delegators for the employee. Delegators are employees who have delegated their account access to the employee.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_delegators_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/employees/delegatees/delete:
    post:
      tags:
        - Employees
      summary: Remove delegatee
      description: |
        Remove a delegatee from the spender's account.
      operationId: employees_delegatee_delete_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - id
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/id_integer'
                      description: Delegation id of spender and delegatee. This id is provided by Fyle to identify an object.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/spender_delegatees_delete_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/employees/mark_active:
    post:
      tags:
        - Employees
      summary: Mark Active
      description: |
        Mark an employee as active post verification
      operationId: employees_mark_active_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/employees/send_mobile_verification_code:
    post:
      tags:
        - Employees
      summary: Send mobile verification code
      operationId: employees_send_mobile_verification_code_post
      description: |
        Send mobile verification code to employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/employees_send_mobile_verification_code_post_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
  /spender/employees/check_mobile_verification_code:
    post:
      tags:
        - Employees
      summary: Check Mobile Verification Code
      description: |
        Check a mobile verification code
      operationId: employees_check_mobile_verification_code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/employee_check_mobile_verification_code_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/employee_settings:
    get:
      tags:
        - Employee Settings
      summary: Get Employee Settings
      operationId: employee_settings_get
      description: |
        Get employee settings for the authenticated user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                  - count
                  - offset
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_employee_settings_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    post:
      tags:
        - Employee Settings
      summary: Update Employee Settings
      operationId: employee_settings_post
      description: |
        Update employee settings for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_employee_settings_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/spender_employee_settings_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/virtual_cards:
    get:
      tags:
        - Virtual Cards
      summary: List virtual cards
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      operationId: virtual_cards_list
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/virtual_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/virtual_cards/get_current_amount:
    post:
      tags:
        - Virtual Cards
      summary: Get current balance amount of the virtual card
      description: |
        To get the current balance amount of the virtual card
      operationId: virtual_cards_get_current_balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/virtual_cards_id_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/virtual_cards_get_current_balance_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/virtual_cards/show_card_details:
    post:
      tags:
        - Virtual Cards
      summary: Show full card details
      description: |
        To get the card details of the virtual card
      operationId: virtual_cards_show_card_details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/virtual_cards_id_in'
              required:
                - data
              additionalProperties: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/virtual_cards_show_card_details_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/tax_groups:
    get:
      tags:
        - Tax Groups
      summary: List tax groups
      operationId: tax_groups_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tax_group_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/files:
    post:
      operationId: files_post
      tags:
        - Files
      summary: Create a file
      description: |
        Create a file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/file_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/files/bulk:
    post:
      operationId: files_post_bulk
      tags:
        - Files
      summary: Bulk create files
      description: |
        Create files in bulk.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_in'
              additionalProperties: false
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/file_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/files/generate_urls:
    post:
      tags:
        - Files
      summary: Generate download and upload URLs
      description: |
        Once a file is created, its contents may need to be uploaded (or downloaded). To upload (or download) contents, you'll
        need to generate a temporary signed URL. This API accomplishes that. The signed URL is valid for 5 mins.
      operationId: files_generate_urls_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/file_generate_urls_action_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_generate_urls_action_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/files/generate_urls/bulk:
    post:
      operationId: files_generate_urls_bulk_post
      tags:
        - Files
      summary: Bulk generate download and upload URLs
      description: |
        Once a file is created, its contents may need to be uploaded (or downloaded). To upload (or download) contents, you'll
        need to generate a temporary signed URL. This API accomplishes that. The signed URL is valid for 5 mins.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_generate_urls_action_in'
                  example:
                    - id: sdfd2391
                    - id: sdfd2392
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/file_generate_urls_action_out'
                    example:
                      - id: sdfd2391
                        name: uber_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x232sds
                        upload_url: https://aaa.bbb.cc/x232sds
                      - id: sdfd2392
                        name: lyft_expenses_vmrpw.pdf
                        content_type: application/pdf
                        download_url: https://aaa.bbb.cc/x22ddsds
                        upload_url: https://aaa.bbb.cc/x22ddsds
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/files/delete/bulk:
    post:
      operationId: files_delete
      tags:
        - Files
      summary: Delete files bulk
      description: |
        Delete files bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_delete_action_in'
                  example:
                    - id: fi123819sa
                    - id: fi876833tu
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/files/download:
    get:
      operationId: files_download_get
      tags:
        - Files
      summary: Download a file
      description: |
        Generates a download URL for a file and redirects client to that URL.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            example: fiNhunGsCQJb
      responses:
        '302':
          description: Redirect to file download URL
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/files/upload_html:
    post:
      operationId: files_upload_html
      tags:
        - Files
      summary: Upload html
      description: |
        Upsert html file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    expense_id:
                      type: string
                      description: ID of the expense to which this html file needs to be attached
                      example: txdtyereJtR6
                    html_content:
                      type: string
                      description: Base64 encoded representation of the HTML content
                      example: JVBERi0xLjQKMSAwIG9iago8PAovVGl0bGUgKP7/KQovQ3JlYX...
                  required:
                    - expense_id
                    - html_content
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/file_out_download_url'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expense_policy_rules:
    get:
      tags:
        - Expense Policies
      summary: Get Expense Policy Rules
      operationId: expense_policy_rules_get
      parameters:
        - in: query
          name: id
          description: |
            The id of the expense policy rule.<br>
            Supported operators are `eq`, `in`, `neq`, `not_in`.<br>
            id=eq."id" <br>
            id=in.("id1","id2","id3") <br>
            id=neq."id" <br>
            id=not_in.("id1","id2","id3")
            > If no id is passed then all the expense policy rules of the org will be returned.
          schema:
            type: string
            example: eq."tprmdNPsd"
        - in: query
          name: is_enabled
          description: |
            Whether to fetch only active expense policy rule.<br>
            Supported operators are `eq`.<br>
            is_enabled=eq.true <br>
            is_enabled=eq.false
          schema:
            type: string
            example: eq.true
        - in: query
          name: is_retired
          description: |
            Whether to fetch retired expense policy rule.<br>
            Supported operators are `eq`.<br>
            is_retired=eq.true <br>
            is_retired=eq.false
          schema:
            type: string
            example: eq.true
        - in: query
          name: is_approver_policy
          description: |
            Whether to fetch expense policy rules that add an approver to an expense on violation.<br>
            Supported operators are `eq`.<br>
            is_approver_policy=eq.true <br>
            is_approver_policy=eq.false
          schema:
            type: string
            example: eq.true
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_policy_out'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expense_policy_states:
    get:
      tags:
        - Expense Policies
      summary: Get policy states of Expenses
      description: |
        Get policy states of Expenses
      operationId: expense_policy_states_get
      parameters:
        - in: query
          name: expense_id
          description: |
            The id of the expense for which you are querying the policy states.<br>
            Supported operators are `eq`, `in`, `neq`, `not_in`.<br>
            expense_id=eq."id" <br>
            expense_id=in.("id1","id2","id3") <br>
            expense_id=neq."id" <br>
            expense_id=not_in.("id1","id2","id3")
          schema:
            type: string
            example: eq."txSdfsytrqw"
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_policy_states_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Object Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/check_policies:
    post:
      tags:
        - Expenses
      summary: Check expense for policy violation
      description: |
        Before creating or updating an [expense object](https://docs.fylehq.com/docs/fyle-platform-docs/b5ec89140e06b-create-or-update-expense)
        into Fyle, based on the business requirements, you might want to check that 
        expense against the policy rules set up by your organization. You can easily do that by passing the same expense object 
        that you want to create/update to this API, along with some extra optional fields documented below.
        Note that, however based on whether you are creating or updating an expense, some fields may be mandatory as mentioned explicitly by _Note_.
      operationId: check_policies_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expense_check_policies_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_check_policies_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/check_policies/bulk:
    post:
      tags:
        - Expenses
      summary: Check multiple expenses for policy violations in bulk
      description: |
        Bulk version of the `check_policies` API that allows you to check multiple expenses for policy violations in one request.

        **NOTE:** This API can only be used to check policies for existing expenses that you want to update. The API will evaluate all the expenses against the configured policy rules and return an array of policy violation information for each expense in the request payload.
      operationId: check_policies_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_check_policies_bulk_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expense_check_policies_bulk_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/automations/report_submissions/next_at:
    post:
      tags:
        - Automations
      summary: Fetch Report Submission Automation next run time
      description: |
        Fetch Report Submission Automation next run time
      operationId: fetch_auto_report_submission_next_run_time
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/spender_automate_report_submission_next_at_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/automations/recurring_expenses:
    post:
      tags:
        - Automations
      summary: Create Recurring Expense
      description: |
        Create a recurring expense automation that will automatically create expenses based on the specified schedule.
      operationId: recurring_expense_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/recurring_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/recurring_expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    get:
      tags:
        - Automations
      summary: List Recurring Expenses
      operationId: recurring_expense_get
      description: |
        List all recurring expense automations for the current user.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/recurring_expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/automations/recurring_expenses/disable:
    post:
      tags:
        - Automations
      summary: Disable Recurring Expense
      description: |
        Disable a recurring expense automation. This will stop the automatic creation of expenses.
      operationId: recurring_expense_disable_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/recurring_expense_disable_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/recurring_expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/check_mandatory_fields:
    post:
      tags:
        - Expenses
      summary: Check expense for missing mandatory fields
      description: |
        Before creating or updating an [expense object](https://docs.fylehq.com/docs/fyle-platform-docs/b5ec89140e06b-create-or-update-expense)
        into Fyle, based on the business requirements, you might want to check if you have added all the mandatory fields set up by your organization.
        You can easily do that by passing the same expense object with some extra optional fields documented below.
      operationId: check_mandatory_fields_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  allOf:
                    - $ref: '#/components/schemas/spender_expense_check_mandatory_fields_in'
                    - type: object
                      properties:
                        expense_policy_comments:
                          type: array
                          items:
                            type: object
                            properties:
                              comment_type:
                                type: string
                                description: The comment type
                              comment_text:
                                type: string
                                description: The comment text
                                nullable: true
                          example:
                            - comment_type: MISSING_FIELDS
                              comment_text: Reason for missing fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/expense_check_mandatory_fields_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/check_mandatory_fields/bulk:
    post:
      tags:
        - Expenses
      summary: Check multiple expense for missing mandatory fields in bulk.
      description: |
        Before updating multiple [expense objects](https://docs.fylehq.com/docs/fyle-platform-docs/b5ec89140e06b-create-or-update-expense)
        into Fyle, based on the business requirements, you might want to check if all the mandatory fields set up by your organization are added.
        This endpoint allows you to validate multiple expense objects in a single request by passing an array of expense objects along with some extra optional fields documented below.
      operationId: check_mandatory_fields_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/spender_expense_check_mandatory_fields_bulk_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/expense_check_mandatory_fields_bulk_out'
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/comments:
    get:
      tags:
        - Expenses
      summary: List expense comments
      description: List all the comments of an expense
      operationId: expense_comments_get
      parameters:
        - $ref: '#/components/parameters/expense_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/comments/bulk:
    post:
      tags:
        - Expenses
        - Expense comments
        - Comments
      summary: Bulk comment on expenses
      description: |
        Bulk comment on expenses as a spender. The API allows you to add comments to multiple expenses at once.
      operationId: expense_comments_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_comments_bulk_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/dismiss_duplicates/bulk:
    post:
      tags:
        - Expenses
      summary: Dismiss Duplicate expenses
      description: |
        This API helps dismissing similar expenses as a duplicates.
      operationId: dismiss_duplicates_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/expense_dismiss_duplicates_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/expenses/duplicate_sets:
    get:
      tags:
        - Expenses
      summary: List expense duplicate sets
      operationId: expense_duplicate_sets
      description: |
        This API provides the sets of the duplicate expenses for a particular employee.
      parameters:
        - in: query
          name: expense_id
          description: An expense_id for what we need to fetch the duplicate expenses.
          schema:
            type: string
            example: txdsjkF453kh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_duplicate_sets_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expenses/stats:
    post:
      tags:
        - Expenses
      summary: Expenses Stats
      description: |
        Expenses Stats
      operationId: expenses_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/expenses_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/expenses_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/filters:
    post:
      tags:
        - Expenses
      summary: Create Expenses saved filters
      description: |
        Save expenses filters for personal use or share with other spenders.
      operationId: expenses_filters_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_filters_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
    get:
      tags:
        - Expenses
      summary: List Expenses saved filters
      operationId: expenses_filters_get
      description: |
        List filters saved by the spender or shared among other spenders.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expenses/filters/delete:
    post:
      tags:
        - Expenses
      summary: Delete Expenses saved filter
      description: |
        Delete Expenses saved filter having the provided id.
      operationId: expenses_filters_post_action_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense_filters_delete_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_filters_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/exports:
    post:
      tags:
        - Expenses
      summary: Create Expenses Export
      description: |
        Create Expenses Export Request.
      operationId: expenses_exports_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expenses_exports_in'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expenses_exports_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/expenses/split:
    post:
      tags:
        - Expenses
      summary: Split an expense
      description: |
        Spender can split an existing expense or create splits for a new expense object.
      operationId: expenses_split_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/spender_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/split/check_policies:
    post:
      tags:
        - Expenses
      summary: Check for policy violations before splitting an expense
      description: |
        Before splitting an expense object
        into Fyle, based on the business requirements, you might want to check the resulting 
        expenses against the policy rules set up by your organization. You can easily do that by passing the same split expense object 
        to this API.
      operationId: expenses_split_check_policies_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/spender_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_check_policies_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/split/check_mandatory_fields:
    post:
      tags:
        - Expenses
      summary: Check mandatory fields before splitting an expense
      description: |
        Before splitting an employee's expense object
        into Fyle, based on the business requirements, you might want to check if you have added all the mandatory fields set up by your organization.
        You can easily do that by passing the same expense split object documented below.
      operationId: expenses_split_check_mandatory_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/spender_split_expense_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_check_mandatory_fields_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/expenses/merge:
    post:
      tags:
        - Expenses
      summary: Merge expenses
      description: |
        Merge expenses.
      operationId: merge_expenses_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expenses_merge_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/feature_configs:
    get:
      tags:
        - Feature Configs
      summary: List feature configs.
      operationId: feature_configs_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/feature_config_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/feature_configs/bulk:
    post:
      tags:
        - Feature Configs
      summary: Create or update feature configs.
      description: |
        This API allows you to create or update feature configs.
      operationId: feature_configs_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/feature_config_spender_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: object
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/personal_cards:
    post:
      operationId: personal_cards_post
      tags:
        - Personal Cards
      summary: Creates Personal Cards
      description: |
        Creates Personal Cards.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/personal_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    get:
      tags:
        - Personal Cards
      summary: List Personal Cards
      operationId: personal_cards_get
      description: |
        List personal cards added by the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/personal_card_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/personal_cards/delete:
    post:
      tags:
        - Personal Cards
      summary: Delete Personal Card
      description: |
        Delete spender's Personal Card details.
      operationId: personal_cards_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - id
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/id_string'
                      description: Personal card id of the spender. This id is provided by Fyle to identify an object.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/personal_card_delete_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/personal_cards/access_token:
    post:
      tags:
        - Personal Cards
      summary: Personal card access token
      operationId: personal_cards_access_token
      description: |
        Get access token for opening the yodlee Iframe.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/personal_card_access_token_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/personal_cards/mfa:
    post:
      tags:
        - Personal Cards
      summary: Personal card MFA
      operationId: personal_cards_mfa
      description: |
        Get MFA details for opening the MFA dialog before fetching the personal card transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/personal_card_mfa_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/personal_card_mfa_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/personal_card_transactions:
    post:
      operationId: personal_card_transactions_post
      tags:
        - Personal Card Transactions
      summary: Creates Personal Card Transactions
      description: |
        Creates Personal Card Transactions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - personal_card_id
                  properties:
                    personal_card_id:
                      allOf:
                        - $ref: '#/components/schemas/id_string'
                      description: Personal card id of the spender. This id is provided by Fyle to identify an object.
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    get:
      tags:
        - Personal Card Transactions
      summary: Get Personal Card Transactions
      operationId: personal_card_transactions_get
      parameters:
        - in: query
          name: personal_card_id
          description: |
            The id of the personal cards for which the transactions need to be fetched.<br>
            Supported operators are `eq` .<br>
            id=eq."id" <br>
            > If no id is passed then all the personal card transactions of the user will be returned.
          schema:
            type: string
            example: eq."btxnxzApu30fvX"
        - in: query
          name: state
          description: |
            Whether to fetch only INITIALIZED state personal card transactions.<br>
            Supported operators are `eq`.<br>
            state=eq."id" <br>
            > If no state is passed then all the personal card transactions of the user will be returned.
          schema:
            type: string
            example: eq."INITIALIZED"
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/personal_card_transaction_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/personal_card_transactions/match:
    post:
      tags:
        - Personal Card Transactions
      summary: Match Personal Card Transactions with expense
      description: |
        Match personal card transactions with expense
      operationId: personal_card_transactions_match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  required:
                    - id
                    - expense_split_group_id
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/id_string'
                      description: Personal card id of the spender. This id is provided by Fyle to identify an object.
                      example: btxnAnsad23ms
                    expense_split_group_id:
                      allOf:
                        - $ref: '#/components/schemas/id_string'
                      description: Personal card id of the spender. This id is provided by Fyle to identify an object.
                      example: txaisd2asdJ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/personal_card_transaction_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/personal_card_transactions/hide/bulk:
    post:
      tags:
        - Personal Card Transactions
      summary: Hide Personal Card Transactions
      description: |
        Hide personal card transaction
      operationId: personal_card_transactions_hide_bulk_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/personal_card_transaction_hide_in'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/bulk_error'
                  - type: object
                    properties:
                      error:
                        type: string
                        nullable: true
                      message:
                        type: string
                        nullable: true
                      data:
                        type: string
                        nullable: true
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /spender/personal_card_transactions/expense_suggestion:
    get:
      tags:
        - Personal Card Transactions
      summary: Personal Card Transactions Expense Suggestions
      operationId: personal_card_transactions_expense_suggestions
      description: |
        This API provides the sets of the duplicate expenses for a particular employee.
      parameters:
        - in: query
          name: amount
          description: Amount for finding similar expense to match a personal card transaction.
          schema:
            type: number
            example: 80.23
        - in: query
          name: spent_at
          description: Date for finding similar expense to match a personal card transaction.
          schema:
            type: string
            example: '2024-05-14'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/expense_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/personal_card_transactions/stats:
    post:
      tags:
        - Personal Card Transactions
      summary: Personal Card Transaction Stats
      description: |
        Personal Card Transaction Stats
      operationId: personal_card_transactions_stats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/personal_card_transactions_stats_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/personal_card_transactions_stats_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/orgs:
    get:
      tags:
        - Organisations
      summary: List Organisations
      operationId: orgs_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/get_spender_orgs_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/orgs/bank_details:
    get:
      tags:
        - Organisations
      summary: List Bank Account Status of Organisations
      operationId: orgs_bank_details_list
      description: |
        This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spender_org_bank_details_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /spender/expense_policy_comments:
    post:
      tags:
        - Expense Policy Comments
      summary: Add expense policy comment
      description: |
        This API adds or updates expense policy comments. 

        **Note:** 
        - If the specified `comment_type` already exists for the expense, the API will update the existing comment's `comment_text` with the new value provided, rather than creating a new comment entry.
        - If the `comment_type` is specified and the `comment_text` is null or an empty string, the comment will be deleted for that expense.
      operationId: add_expense_policy_comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    expense_id:
                      type: string
                      description: The expense ID
                    expense_policy_comments:
                      type: array
                      items:
                        type: object
                        properties:
                          comment_type:
                            type: string
                            description: The comment type
                          comment_text:
                            type: string
                            description: The comment text
                            nullable: true
                  required:
                    - expense_id
                    - expense_policy_comments
                  additionalProperties: false
              required:
                - data
              additionalProperties: false
            example:
              data:
                expense_id: txGCcvnhUbrP
                expense_policy_comments:
                  - comment_type: MISSING_FIELDS
                    comment_text: Reason for missing fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: object
                    properties:
                      expense_id:
                        type: string
                        description: The expense ID
                      expense_policy_comments:
                        type: array
                        items:
                          type: object
                          properties:
                            comment_type:
                              type: string
                              description: The comment type
                            comment_text:
                              type: string
                              description: The comment text
                    required:
                      - expense_id
                      - expense_policy_comments
                    additionalProperties: false
              example:
                data:
                  expense_id: txGCcvnhUbrP
                  expense_policy_comments:
                    - comment_type: MISSING_FIELDS
                      comment_text: Reason for missing fields
        '400':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/submit:
    post:
      tags:
        - Advances
      summary: Submit an advance request
      description: |
        Submit an advance request.
      operationId: advance_requests_submit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means the requested resource was not found or the requester doesn't have sufficient access.
  /spender/advance_requests/permissions:
    post:
      tags:
        - Advances
      summary: Advance Request Permissions
      description: |
        Returns a list of all possible actions that can be performed on an advance request by the current user.
      operationId: advance_requests_permissions_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_permissions_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_permissions_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/pull_back:
    post:
      operationId: advance_requests_pull_back_post
      summary: Pull back advance request
      description: |
        Allows a spender to pull back their advance request.
      tags:
        - Advances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_action_pull_back_in'
            example:
              data:
                id: areqGsQdgSoteL
                comment: sending back
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/attach_files/bulk:
    post:
      tags:
        - Advances
      summary: Bulk attach files to advance requests
      description: |
        Bulk attach files to advance requests
      operationId: advance_requests_bulk_attach_files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/attach_files_to_advance_request_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/advance_request_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/comments:
    post:
      summary: Add comment to advance request
      operationId: advance_requests_comments_post
      description: |
        This API allows spenders to add comments to an advance request.
      tags:
        - Advances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_comments_in'
      responses:
        '200':
          description: Comment added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_comments_out'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/delete:
    post:
      tags:
        - Advances
      summary: Delete an advance request
      description: |
        Delete an advance request.
      operationId: advance_requests_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/advance_request_delete_in'
      responses:
        '200':
          description: The advance request was deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/secondary_emails:
    get:
      tags:
        - Secondary Emails
      summary: List Secondary Emails
      operationId: secondary_emails_list
      description: |
        List secondary emails of the spender.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    $ref: '#/components/schemas/count'
                  offset:
                    $ref: '#/components/schemas/offset'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/secondary_email_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Secondary Emails
      summary: Add Secondary Email
      operationId: secondary_emails_add
      description: |
        Add a new secondary email address for the spender.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/secondary_email_in'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/secondary_email_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /spender/secondary_emails/check:
    post:
      tags:
        - Secondary Emails
      summary: Check Secondary Email
      operationId: secondary_emails_check
      description: |
        Check whether the email is available for usage as a secondary email or is already added to another account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: object
                  additionalProperties: false
                  required:
                    - email
                  properties:
                    email:
                      allOf:
                        - $ref: '#/components/schemas/email'
                      description: |
                        The email address to check for availability.
                      example: test-xyz@test.in
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: object
                    additionalProperties: false
                    description: |
                      Empty data object indicating the check was successful.
                    example: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /spender/secondary_emails/delete:
    post:
      tags:
        - Secondary Emails
      summary: Delete Secondary Email
      operationId: secondary_emails_delete
      description: |
        Delete a secondary email address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  type: object
                  additionalProperties: false
                  required:
                    - id
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/id_string'
                      description: |
                        The unique identifier of the secondary email to delete.
                      example: seu2gy8ulk32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: object
                    additionalProperties: false
                    description: |
                      Empty data object indicating the deletion was successful.
                    example: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /spender/advance_requests/custom_fields:
    get:
      tags:
        - Advances
      summary: Get advance request custom fields
      description: |
        This API allows spenders to retrieve all active custom fields for advance requests in their organization.
      operationId: advance_requests_custom_fields_get
      responses:
        '200':
          description: Successfully retrieved custom fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/advance_request_custom_fields_out'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: |
                      This error means current user does not have enough permissions to perform this operation. 
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is invalid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: |
            This error means that the input access token is either not issued by Fyle or has expired.
            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: |
            This error means current user does not have enough permissions to perform this operation.
    '404':
      type: object
      properties:
        message:
          enum:
            - Resource not found
          type: string
          description: |
            This error means the requested resource was not found or the requester doesn't have sufficient access.
    '409':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request resulted in a conflict
    '500':
      type: object
      properties:
        message:
          type: string
          description: |
            API server hit an internal error and could not process request. This is likely a bug.
    count:
      type: integer
      description: |
        The total number of objects that can be requested.
      example: 10000
    offset:
      description: |
        offset is used to skip that many number of objects before counting. <br>
        For example, if there are 2000 objects, <br>
        The first request will have offset as 0 and limit as 200 to return first 200 objects. <br>
        The second request will have offset as 200 and limit as 200 to return next 200 objects. <br>
      type: integer
      example: 10
    id_integer:
      type: integer
      description: |
        This id is provided by Fyle to identify an object.
      example: 1234
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      readOnly: true
      example: orwruogwnngg
    created_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was created in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    updated_at:
      type: string
      format: date-time
      description: |
        Signifies when this object was updated in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-11T13:14:55.201598+00:00'
    code:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents a code that is typically used for syncing with other systems.
      example: C1234
    description:
      type: string
      nullable: true
      maxLength: 255
      description: |
        This represents the description of the resource.
      example: Win the trophy
    is_enabled:
      type: boolean
      description: |
        This indicates if the resource is enabled for use within the organisation.
      example: true
    project_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          maxLength: 513
          description: |
            This is a combination of name and sub_project separated by a / and spaces.
            In case if no sub_project is present it is same as name of the project.
          example: Fast and Furious / Formula One
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
          items:
            type: integer
        category_ids:
          type: array
          nullable: true
          items:
            type: integer
            example: 16570
          description: List of categories that are applicable for the project.
    cost_center_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    category_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          nullable: true
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: |
            This is a combination of name and sub_category separated by a / and spaces. In case if no sub_category is present it is same as name of the category.
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        code:
          $ref: '#/components/schemas/code'
        restricted_project_ids:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/id_integer'
          example:
            - 2222
            - 1221
          description: |
            List of project ids for which this category can be used. If project_ids is null, then this category can be used for any project.
    category_ids:
      type: array
      description: |
        List of category ids.
      items:
        type: integer
        example: 16570
    expense_field_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        seq:
          type: integer
          example: 1
        field_name:
          type: string
          description: |
            This specifies the name of the expense field.
          example: Vendor description
        column_name:
          type: string
          description: |
            This specifies the name of column to which this expense field mapped to.
          example: Purpose
        type:
          type: string
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        options:
          type: array
          items:
            type: string
          description: |
            This specifies the option values of the expense field in case on SELECT or MULTI_SELECT type.
          example:
            - Chai
            - Coffee
        default_value:
          type: string
          nullable: true
          description: |
            This specifies the default value of the expense fields.
          example: Coffee
        placeholder:
          type: string
          nullable: true
          description: |
            This specifies the placeholder of the expense field.
          example: Enter vendor
        category_ids:
          $ref: '#/components/schemas/category_ids'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        is_custom:
          type: boolean
          description: |
            This field indicates if the expense field is custom or not.
          example: false
        is_mandatory:
          type: boolean
          description: |
            This specifies if the expense field is mandatory or not.
          example: true
        code:
          $ref: '#/components/schemas/code'
        parent_field_id:
          type: integer
          nullable: true
          description: |
            This specifies the `id` of the parent expense field and denotes that the expense field is a dependent custom field. NOTE: `type` must be `DEPENDENT_SELECT`.
          example: 1234
    dependent_expense_field_values_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        parent_expense_field_id:
          type: integer
          description: |
            This specifies the `id` of the parent expense field.
          example: 1234
        expense_field_id:
          type: integer
          description: |
            This specifies the `id` of the dependent expense field.
          example: 5678
        parent_expense_field_value:
          type: string
          description: |
            This specifies the text value of the parent expense field.
          example: Project 1
        expense_field_value:
          type: string
          description: |
            This specifies the text value of the dependent expense field.
          example: Cost Code 1
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    mileage_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        unit:
          type: string
          enum:
            - KM
            - MILES
        vehicle_type:
          type: string
          example: Audi
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
        slab_rates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                nullable: true
              limit:
                type: number
                nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    user_id:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      example: uswjwgnwwgo
    currency:
      type: string
      description: |
        The three-letter currency code following ISO standard <a href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: USD
      pattern: ([A-Z]{3})
    org_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/org_id'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the org.
          example: Demo Account
        domain:
          type: string
          maxLength: 255
          description: This field specifies the domain with which the organisation is registered.
          example: example.com
        currency:
          $ref: '#/components/schemas/currency'
    id_string:
      type: string
      maxLength: 15
      description: |
        This id is provided by Fyle to identify an object.
      example: sdfd2391
    email:
      type: string
      maxLength: 127
      example: john.doe@example.com
      description: |
        An immutable field that represents the email address of the employee.
        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
    user_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee. Must be at least 3 characters.
          example: John Doe
    role:
      type: string
      enum:
        - FYLER
        - APPROVER
        - ACCOUNTANT
        - TRAVEL_ADMIN
        - VERIFIER
        - PAYMENT_PROCESSOR
        - FINANCE
        - ADMIN
        - TRAVEL_AGENT
        - OWNER
        - AUDITOR
        - HOD
        - HOP
      description: |
        Roles are assigned by Admin.
      example: FYLER
    my_profile_out:
      type: object
      additionalProperties: false
      properties:
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        org:
          $ref: '#/components/schemas/org_out_embed'
        user:
          $ref: '#/components/schemas/user_out_embed'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
    recently_used_fields_out:
      type: object
      additionalProperties: false
      properties:
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        project_ids:
          type: array
          items:
            type: string
          description: |
            list of last five recently used project ids
          example:
            - '123121'
        category_ids:
          type: array
          items:
            type: string
          description: |
            list of last five recently used category ids
          example:
            - '123121'
        cost_center_ids:
          type: array
          items:
            type: string
          description: |
            list of last five recently used cost center ids
          example:
            - '123121'
        locations:
          type: array
          items:
            type: string
          description: |
            list of last five recently used locations
          example:
            - '123121'
        end_locations:
          type: array
          items:
            type: string
          description: |
            list of last five recently used end locations
          example:
            - Chalakudy, Kerala, India
        start_locations:
          type: array
          items:
            type: string
          description: |
            list of last five recently used start locations
          example:
            - Cochin, Kerala, India
        vehicle_types:
          type: array
          items:
            type: string
          description: |
            list of last five recently used vehicle types
          example:
            - two wheeler
        currencies:
          type: array
          items:
            type: string
          description: |
            list of last five recently used currencies
          example:
            - INR
    account_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          type: string
          nullable: true
          description: |
            The unique id of an user to which the object is associated.
          example: uswjwgnwwgo
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
        currency:
          $ref: '#/components/schemas/currency'
        current_balance_amount:
          type: number
          example: 90.9
        tentative_balance_amount:
          type: number
          example: 43.8
        org_id:
          $ref: '#/components/schemas/org_id'
        category_id:
          type: integer
          description: |
            This id is provided by Fyle to identify a category.
          nullable: true
          example: 49058
    name:
      type: string
      maxLength: 255
      description: |
        This represents the name of the resource. This should be unique in an organization
      example: foo123
    department_head_user_ids:
      type: array
      nullable: false
      maxItems: 1
      items:
        type: string
        nullable: true
        maxLength: 15
        description: |
          This id is provided by Fyle to identify an object.
        example: uswoirwlwwg
      example:
        - uswoirwlwwg
      description: |
        List of IDs of users who are head of the department.
    department_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        department_head_user_ids:
          $ref: '#/components/schemas/department_head_user_ids'
        department_head_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed'
          description: |
            List of users who are head of the department.
        display_name:
          type: string
          example: Sales / Outbound Sales
          description: |
            This is a combination of name and sub_department separated by a / and spaces. In case if no sub_department is present it is same as name of the department.
        doc_url:
          type: string
          nullable: true
          description: |
            Link to an external document that would be shared with employees
          example: https://fyle.stoplight.io/
    timestamptz_utc:
      type: string
      format: date-time
      nullable: true
      description: Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T13:14:54.804+00:00'
    foreign_currency:
      type: string
      nullable: true
      description: |
        The three-letter currency code following ISO standard <a href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
      example: GBP
    foreign_amount:
      type: number
      nullable: true
      description: |
        Amount value of the object, in original currency i.e the currency in which the object was initially created.
      example: 3768
    fk_integer:
      type: integer
      nullable: true
      description: |
        This id is provided by Fyle to identify an object.
      example: 1234
    cost_center_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          $ref: '#/components/schemas/code'
    category_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        system_category:
          nullable: true
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          nullable: true
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Engine / Turbo charged
          description: |
            This is a combination of name and sub_category separated by a / and spaces. In case if no sub_category is present it is same as name of the category.
    project_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          nullable: true
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        code:
          $ref: '#/components/schemas/code'
        display_name:
          type: string
          example: Fast and Furious / Formula One
          description: |
            This is a combination of name and sub_project separated by a / and spaces.
            In case if no sub_project is present it is same as name of the project.
    fk_string:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id is provided by Fyle to identify an object.
      example: sdfd2391
    account_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: acwbl222wlg
        type:
          type: string
          enum:
            - PERSONAL_CASH_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_CASH_ACCOUNT
    mileage_rate_out_embed_for_expense:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        vehicle_type:
          type: string
          example: Audi
        code:
          $ref: '#/components/schemas/code'
        rate:
          type: number
          example: 10
          nullable: true
          description: Amount (in Home currency) per unit.
    per_diem_rate_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
    location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        display_name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: true
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: true
          example: 12.971599
        longitude:
          type: number
          nullable: true
          example: 77.594566
    null_field:
      type: string
      nullable: true
    expense_custom_field:
      type: object
      description: |
        Expense custom field
      properties:
        id:
          type: integer
          description: |
            Expense field ID of the custom field.

            NOTE: This field may not be present for older expense custom fields created without the "id" field.
          example: 1337
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
        type:
          type: string
          nullable: true
          enum:
            - TEXT
            - NUMBER
            - SELECT
            - BOOLEAN
            - MULTI_SELECT
            - LOCATION
            - USER_LIST
            - DATE
            - DEPENDENT_SELECT
            - null
          description: |
            This field specifies the type of the expense field.
          example: SELECT
        is_enabled:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/is_enabled'
          nullable: true
    expense_custom_fields:
      type: array
      description: |
        Expense custom fields
      items:
        $ref: '#/components/schemas/expense_custom_field'
    flattened_custom_field:
      type: object
      description: |
        Custom fields in object format with keys as the name of the custom field and value as the value of the custom field. This is done to make it easier to query the custom fields.

        Example: `[{"name": "Custom Field 1", "value": "Value 1"}]` is flattened to `{"custom_field_1": "Value 1"}`

        NOTE: Key name is converted to snake case and spaces are replaced with underscores.
      nullable: false
      additionalProperties: true
      properties:
        cf1:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - string1
                - string2
      example:
        cf1: string1
        custom_field_2: Value 2
    amount:
      type: number
      description: |
        amount of money
      example: 47.99
    report_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
          description: |
            State of this report_approval
        approver_order:
          type: integer
          description: |
            This number inidicates the order of the approver in the approval sequence for the report.
            The approver with the lowest approver_order is the first approver in the sequence.
          example: 1
    report_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - last_approved_at
        - last_submitted_at
        - seq_num
        - title
        - state
        - last_paid_at
        - reimbursement_id
        - reimbursement_seq_num
      properties:
        id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: rpvgnwlgw34
        last_approved_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was approved.
        last_submitted_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was submitted.
        seq_num:
          type: string
          nullable: true
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        title:
          type: string
          nullable: true
          description: purpose for creating the report
          example: Business trip to London
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
            - null
          nullable: true
        amount:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/amount'
          nullable: true
        last_paid_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was reimbursed.
        last_verified_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when this report was verified.
        reimbursement_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          maxLength: 255
          description: |
            An unique ID, generated by Fyle, for identifying the Reimbursement.
          example: reimntGt9ju6qP
        reimbursement_seq_num:
          type: string
          nullable: true
          description: |
            A unique, organization wide identifier for a particular reimbursement.<br>
            This id is always prefixed with `P/`.
          example: P/2020/11/29
        approvals:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
    file_out_embed:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: figwiwpjww
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: application/pdf
    expense_policy_comment_out_embed:
      type: object
      additionalProperties: false
      required:
        - id
        - comment_type
        - comment_text
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: epc1a2f3farmk
        comment_type:
          type: string
          description: Type of the policy comment
        comment_text:
          type: string
          description: Text content of the policy comment
    expense_verification_out_embed:
      type: object
      additionalProperties: false
      properties:
        verifier_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        verifier_user:
          $ref: '#/components/schemas/user_out_embed'
    employee_id:
      type: string
      maxLength: 255
      description: |
        This id provided by Fyle to uniquely identify an employee within an organization.
        This id is always prefixed with `ou`.
      example: outGt9ju6qP
    org_name:
      type: string
      maxLength: 255
      description: |
        This represents the name of the organization. This should be unique for all organizations
      example: foo123
    department_id:
      type: string
      maxLength: 255
      nullable: true
      example: dept9in4oIHpdR
    department_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        code:
          $ref: '#/components/schemas/code'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Sales
        sub_department:
          type: string
          nullable: true
          example: Outbound Sales
        display_name:
          type: string
          example: Sales / Outbound Sales
          description: |
            This is a combination of name and sub_department separated by a / and spaces. In case if no sub_department is present it is same as name of the department.
    level_out_embed:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          nullable: true
          description: |
            Band in which this level belongs to, you can group multiple levels into a single band.
          example: Associate
      required:
        - id
        - name
        - band
    custom_field:
      type: object
      description: |
        Custom field
      properties:
        id:
          type: integer
          description: |
            Expense field ID of the custom field.
          example: 1337
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    has_accepted_invite:
      type: boolean
      description: |
        This boolean field represents whether the employee has accepted the current org's invite by verifying his/her email or not.
      example: true
    phone_number:
      type: string
      example: '+12131234567'
      maxLength: 16
      description: |
        phone number is represented by +CC MMMMMM... where CC is the country code, and is one to three digits, and MMMMMM... is the area code (where applicable) and subscriber number Max 12 digits
      pattern: /^(\+\d{1,3}[- ]?)?\d{10}$/
    joined_at:
      anyOf:
        - $ref: '#/components/schemas/null_field'
        - $ref: '#/components/schemas/timestamptz_utc'
      nullable: true
      description: |
        Date and time when the user joined the organization. Date-time will be in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
    employee_out_embed_for_expense:
      type: object
      additionalProperties: false
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
        level:
          $ref: '#/components/schemas/level_out_embed'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        custom_fields:
          type: array
          nullable: true
          description: |
            Custom fields
          items:
            $ref: '#/components/schemas/custom_field'
        flattened_custom_field:
          $ref: '#/components/schemas/flattened_custom_field'
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        joined_at:
          $ref: '#/components/schemas/joined_at'
      description: |
        NOTE: The data of this field is not realtime. It will get updated later even if `employee_id` is already up-to-date.
    card_number:
      type: string
      description: |
        Specifies the masked number of the card.
        Add only masked card-numbers, last four digits of the card.
      example: xxxx-4543
    bank_name:
      type: string
      description: |
        Specifies the name of bank who issued the card.
      example: Bank of America
    name_nullable:
      type: string
      maxLength: 255
      nullable: true
      description: |
        This represents the name of the resource. This should be unique in an organization
      example: foo123
    timestamptz_pst:
      type: string
      format: date-time
      nullable: true
      description: Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
      example: '2020-06-01T01:18:19.292-08:00'
    spent_at:
      allOf:
        - $ref: '#/components/schemas/timestamptz_pst'
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the vendor to which the expense was made.
      example: Uber
    matched_corporate_card_transaction_out_embed:
      type: object
      nullable: true
      required:
        - id
        - corporate_card_id
        - corporate_card_number
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card_number:
          $ref: '#/components/schemas/card_number'
        corporate_card_nickname:
          type: string
          maxLength: 25
          nullable: true
          description: |
            Unique nickname assigned to the card
          example: Business Card
        corporate_card_cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        masked_corporate_card_number:
          $ref: '#/components/schemas/card_number'
        bank_name:
          nullable: true
          $ref: '#/components/schemas/bank_name'
        corporate_card_user_full_name:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/name_nullable'
          maxLength: 255
          description: |
            String denoting the card holder's full name
          example: John Doe
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          description: |
            Signifies spent date of a card transaction.
            This date cannot be in future.
        posted_at:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies post date of a card transaction.
            This date cannot be in future.
        status:
          type: string
          nullable: true
          enum:
            - PENDING
            - POSTED
            - null
          example: PENDING
          description: |
            Signifies status of a card transaction.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        foreign_currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/foreign_amount'
        merchant:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/merchant'
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        matched_by:
          type: string
          nullable: true
          description: |
            String denoting the email of the user who matched the card transaction to an expense.
          example: john.ooe@fyle.in
    missing_mandatory_fields:
      type: object
      nullable: false
      properties:
        expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
        amount:
          type: boolean
          nullable: false
          description: |
            This field shows whether the amount field is present in the expense or not
        currency:
          type: boolean
          nullable: false
          description: |
            This field shows whether the currency field is present in the expense or not
      description: |
        This object contains all the fields which are mandatory bu tare missing in the expense.
    activity_details:
      type: object
      nullable: true
      properties:
        unique_meetings:
          type: number
          nullable: false
          example: 21
        total_meetings:
          type: number
          nullable: false
          example: 70
    extracted_data:
      type: object
      nullable: true
      properties:
        amount:
          type: number
          nullable: true
          example: 21
        vendor_name:
          type: string
          nullable: true
          example: Uber
        currency:
          type: string
          nullable: true
          example: USD
        category:
          type: string
          nullable: true
          example: Taxi
        date:
          type: string
          nullable: true
          example: '2020-07-20'
    split_group_amount:
      type: number
      nullable: true
      description: |
        The amount of expense before splitting.
      example: 3768
    is_billable:
      type: boolean
      nullable: true
      example: true
      description: This field marks whether a given expense is billable or not.
    dependent_expense_fields:
      type: object
      description: |
        Dependent expense fields details
      properties:
        parent_expense_field_id:
          type: integer
          description: |
            This id provided by Fyle to identify the parent expense field.
          example: 123
        dependent_expense_field_id:
          type: integer
          description: |
            This id provided by Fyle to identify the dependent expense field.
          example: 123
        dependent_expense_field_value_id:
          type: integer
          description: |
            This id provided by Fyle to identify dependent field value.
          example: 123
        name:
          type: string
          description: |
            This represents the name of the dependent expense field.
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
    expense_rule_data_in:
      type: object
      nullable: true
      additionalProperties: false
      minProperties: 1
      properties:
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the merchant to which the Expense was made.
          example: Amazon
        is_billable:
          $ref: '#/components/schemas/is_billable'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 92895
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          example: 1049
        custom_fields:
          type: array
          nullable: true
          description: |
            Custom fields
          items:
            $ref: '#/components/schemas/custom_field'
        dependent_fields:
          type: array
          nullable: true
          description: |
            Dependent expense fields
          items:
            $ref: '#/components/schemas/dependent_expense_fields'
    tax_group:
      type: object
      nullable: true
      description: |
        Tax group details.
      properties:
        name:
          type: string
          nullable: true
          description: |
            Name of the tax group.
          example: GST
        percentage:
          type: number
          nullable: true
          description: |
            Tax percentage.
          example: 5
    policy_checks:
      type: object
      description: |
        Policy checks details.
        NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
      properties:
        is_amount_limit_applied:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense amount is capped based on the policy calculation.
          example: true
        are_approvers_added:
          type: boolean
          description: |
            A true value here means, approvers are added to the expense based on the policy calculation.
          example: true
        is_flagged_ever:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense is flagged.
          example: true
        violations:
          type: array
          nullable: true
          description: |
            List of policy violations on this expense.
          items:
            type: object
            properties:
              policy_rule_description:
                type: string
                description: |
                  Description of the policy rule.
                example: Expense amount is greater than the policy limit
              policy_rule_id:
                allOf:
                  - $ref: '#/components/schemas/id_string'
                description: |
                  ID of the policy rule.
                example: tprCCiQiiuJZs
    commute_location:
      type: object
      nullable: true
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: false
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: false
          example: 12.971599
        longitude:
          type: number
          nullable: false
          example: 77.594566
    commute_details:
      type: object
      nullable: true
      description: |
        Commute details of the employee. This is used to deduct daily commute from the employee's mileage expenses.
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
        home_location:
          allOf:
            - $ref: '#/components/schemas/commute_location'
          description: |
            Home location of the employee.
          nullable: true
        work_location:
          allOf:
            - $ref: '#/components/schemas/commute_location'
          description: |
            Work location of the employee.
          nullable: true
        distance:
          type: number
          nullable: true
          description: |
            Distance between home and work location of the employee.
          example: 10.55
        distance_unit:
          type: string
          nullable: true
          description: |
            Unit of distance.
          enum:
            - KM
            - MILES
            - null
          example: MILES
    expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - user_id
        - user
        - org_id
        - created_at
        - updated_at
        - spent_at
        - source
        - merchant
        - currency
        - amount
        - claim_amount
        - policy_amount
        - admin_amount
        - foreign_currency
        - foreign_amount
        - purpose
        - cost_center_id
        - cost_center
        - category_id
        - category
        - project_id
        - project
        - source_account_id
        - advance_wallet_id
        - source_account
        - tax_amount
        - tax_group_id
        - is_billable
        - is_reimbursable
        - distance
        - distance_unit
        - mileage_calculated_distance
        - mileage_calculated_amount
        - mileage_rate_id
        - mileage_rate
        - mileage_is_round_trip
        - per_diem_rate_id
        - per_diem_rate
        - per_diem_num_days
        - started_at
        - ended_at
        - travel_classes
        - hotel_is_breakfast_provided
        - locations
        - custom_fields
        - code
        - state
        - state_display_name
        - seq_num
        - report_id
        - added_to_report_at
        - report
        - is_verified
        - last_verified_at
        - is_receipt_mandatory
        - is_exported
        - last_exported_at
        - file_ids
        - files
        - employee
        - is_corporate_card_transaction_auto_matched
        - matched_corporate_card_transaction_ids
        - matched_corporate_card_transactions
        - last_settled_at
        - missing_mandatory_fields
        - activity_details
        - creator_user_id
        - extracted_data
        - is_manually_flagged
        - is_policy_flagged
        - split_group_id
        - is_physical_bill_submitted
        - physical_bill_submitted_at
        - invoice_number
        - is_duplicate_present
        - expense_policy_comments
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        source:
          type: string
          description: |
            The name of the client app which is creating the expense.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: SLACK_APP
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the merchant to which the Expense was made.
          example: Uber
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          type: number
          nullable: true
          description: |
            The amount for which the expense was/will-be fyled.
            The amount will be in the currency that the organization's home currency.<br>

            Note that, this field is calculated from admin_amount, policy_amount, claim_amount.

            if admin_amount is present then this value will be same admin_amount.
            if policy_amount is present then this value will be same policy_amount.
            else this should be same as claim_amount.
          example: 1500
        claim_amount:
          type: number
          nullable: true
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        policy_amount:
          type: number
          nullable: true
          description: |
            The expense amount set by policy.
          example: 1500
        admin_amount:
          type: number
          nullable: true
          description: |
            The expense amount which is modified by admin or approver.
            This could be null if admin or approver has not edited your expense.
          example: null
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        cost_center:
          $ref: '#/components/schemas/cost_center_out_embed'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        category:
          $ref: '#/components/schemas/category_out_embed'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        project:
          $ref: '#/components/schemas/project_out_embed'
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        source_account:
          $ref: '#/components/schemas/account_out_embed'
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          type: boolean
          nullable: true
          example: true
          description: This fields marks whether a given expense is billable a not.
        is_reimbursable:
          type: boolean
          description: This fields marks whether a given expense is reimbursable a not.
          example: true
        distance:
          type: number
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          type: string
          nullable: true
          description: Unit of distance travelled.
          enum:
            - KM
            - MILES
            - null
          example: MILES
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance computed by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount computed by Fyle in mileage expenses.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 9080
        mileage_rate:
          $ref: '#/components/schemas/mileage_rate_out_embed_for_expense'
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
        per_diem_rate:
          $ref: '#/components/schemas/per_diem_rate_out_embed'
        per_diem_num_days:
          type: number
          nullable: true
          description: |
            Specific to per diem related expenses, number of days for which per diem claim is made.
          example: 2
        started_at:
          $ref: '#/components/schemas/timestamptz_utc'
        ended_at:
          $ref: '#/components/schemas/timestamptz_utc'
        travel_classes:
          description: |
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
            index 0 holds onward journey class, index 1 holds return journey travel class.
          type: array
          minItems: 0
          maxItems: 2
          items:
            type: string
          example:
            - ECONOMY
            - BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        locations:
          description: |
            This field will be present for travel related categories.
            For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
            For travel between Place A to Place c and stopping at Place B, this
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/location'
        custom_fields:
          $ref: '#/components/schemas/expense_custom_fields'
        custom_fields_flattened:
          $ref: '#/components/schemas/flattened_custom_field'
        code:
          type: string
          nullable: true
          description: |
            Id given by external systems like Gmail. To identify whether that entity
            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
            - UNREPORTABLE
          description: The state of the Expense.
        state_display_name:
          type: string
          example: Sent Back
          description: readable state name
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report.
          example: rpvgnwlgw34
        added_to_report_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was added to a report.
            If this expense is not added to a report, then this could be null.
        report:
          $ref: '#/components/schemas/report_out_embed'
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been verified by a verifier.
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was verified.
        is_receipt_mandatory:
          type: boolean
          nullable: true
          description: |
            Determines whether a receipt is missing for this expense when it is required.
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been exported to external accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: signifies when this expense was exported to an external accounting system.
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
        expense_policy_comments:
          type: array
          items:
            $ref: '#/components/schemas/expense_policy_comment_out_embed'
          description: |
            List of expense policy comment objects
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/expense_verification_out_embed'
          description: |
            List of verification objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          nullable: true
          $ref: '#/components/schemas/employee_out_embed_for_expense'
        is_corporate_card_transaction_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this corporate card transaction is auto_matched.
        matched_corporate_card_transaction_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the corporate card transaction ids which are matched to this expense
          example:
            - btxnwownwrng
        matched_corporate_card_transactions:
          type: array
          items:
            $ref: '#/components/schemas/matched_corporate_card_transaction_out_embed'
          description: |
            Holds the corporate card transactions which are matched to this expense.
            NOTE: The data of this field is not realtime. It will get updated later even if `matched_corporate_card_transaction_ids` is already up-to-date.
        last_settled_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last settled.
        missing_mandatory_fields:
          $ref: '#/components/schemas/missing_mandatory_fields'
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        activity_details:
          $ref: '#/components/schemas/activity_details'
        extracted_data:
          $ref: '#/components/schemas/extracted_data'
        is_manually_flagged:
          type: boolean
          nullable: true
          description: This fields marks whether a given expense is manually flagged or not.
          example: true
        is_policy_flagged:
          type: boolean
          nullable: true
          description: This fields marks whether a given expense is flagged by policy or not.
          example: true
        split_group_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id provided by Fyle to identify an object.
          example: txwownwrngx
        split_group_amount:
          $ref: '#/components/schemas/split_group_amount'
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            This fields marks if physical has been collected for the given expense.
          example: true
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when the physical bill for this report was submitted.
          nullable: true
        expense_rule_id:
          type: string
          nullable: true
          maxLength: 15
          description: |
            This id is provided by Fyle to identify an Expense Rule.
          example: ervgnwlgw34
        expense_rule_data:
          $ref: '#/components/schemas/expense_rule_data_in'
        is_split:
          type: boolean
          nullable: true
          description: |
            Whether the expense is split.
          example: true
        tax_group:
          $ref: '#/components/schemas/tax_group'
        approver_comments:
          type: array
          description: |
            Comments added by approvers.
            NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
          items:
            type: string
          example:
            - This is a comment by approver
        verifier_comments:
          type: array
          description: |
            Comments added by verifiers.
            NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
          items:
            type: string
          example:
            - This is a comment by verifier
        policy_checks:
          $ref: '#/components/schemas/policy_checks'
        accounting_export_summary:
          type: object
          description: |
            Summary of accounting export for this expense.
          properties:
            state:
              type: string
              enum:
                - COMPLETE
                - ERROR
                - IN_PROGRESS
                - SKIPPED
                - INITIATED
              example: COMPLETE
            error_type:
              type: string
              nullable: true
              enum:
                - ACCOUNTING_INTEGRATION_ERROR
                - MAPPING
                - null
              example: ACCOUNTING_INTEGRATION_ERROR
            url:
              type: string
              description: URL Endpoint for exported / failed expense
              example: https://app.example.com/expense/txwownwrng
            tpa_id:
              type: string
              nullable: false
              description: |
                Third party app id.
              example: tpa_1234567890
        report_last_paid_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when report of this expense was reimbursed.
        report_last_approved_at:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies if and when report of this expense was approved.
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
        commute_deduction:
          type: string
          nullable: true
          maxLength: 12
          description: |
            Commute deduction type of the expense.
          example: ONE_WAY
          enum:
            - ONE_WAY
            - ROUND_TRIP
            - NO_DEDUCTION
            - null
        commute_details_id:
          type: integer
          nullable: true
          description: |
            Commute details id of the expense. This id is provided by Fyle to identify a commute details.
          example: 1234
        commute_details:
          $ref: '#/components/schemas/commute_details'
        is_duplicate_present:
          type: boolean
          nullable: false
          description: |
            Whether duplicate expenses is detected for this expense or not.
          example: true
    source:
      type: string
      description: |
        This value signifies the client from which this expense was created
      example: SLACK
    claim_amount:
      type: number
      description: |
        The expense amount as claimed by user.
      example: 1984.18
    is_reimbursable:
      type: boolean
      nullable: true
      description: This field marks whether a given expense is reimbursable or not.
      example: true
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      nullable: true
      description: Unit of distance travelled.
      enum:
        - KM
        - MILES
      example: MILES
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus` category.
        Index 0 holds onward journey travel class, index 1 holds return journey travel class.
      type: array
      minItems: 0
      maxItems: 2
      nullable: true
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items. From location at array index i and To location at array index i+1.
      type: array
      nullable: true
      minItems: 0
      maxItems: 10
      items:
        type: object
        nullable: true
        properties:
          city:
            type: string
            nullable: true
            example: London
          state:
            type: string
            nullable: true
            example: London
          display:
            type: string
            nullable: true
          country:
            type: string
            nullable: true
            example: United Kingdom
          formatted_address:
            type: string
            nullable: true
            example: 221 Baker St, Marylebone, London, United Kingdom
          latitude:
            type: number
            nullable: true
            example: 12.971599
          longitude:
            type: number
            nullable: true
            example: 77.594566
    custom_fields:
      type: array
      description: |
        Custom fields
      items:
        $ref: '#/components/schemas/custom_field'
    spender_expense_in:
      type: object
      additionalProperties: false
      required:
        - claim_amount
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          nullable: true
          description: |
            Date on which the expense was made.
            This date cannot be in future.
            This field is not required for creating Per Diem Expenses
        source:
          $ref: '#/components/schemas/source'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        claim_amount:
          allOf:
            - $ref: '#/components/schemas/claim_amount'
          description: |
            The expense amount as claimed by user. <br>
            For Per Diem Expenses this amount should be equal to per diem rate rounded to two decimal places multiplied by number of days.
        purpose:
          type: string
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 583
          description: |
            Specific to per diem expense. This represents the per diem's rate id given by Fyle
            during creation of per diem rate for which this expense is created. <br>
            This field is required for creating Per Diem Expenses.
        per_diem_num_days:
          type: number
          nullable: true
          example: 2
          description: |
            Specific to per diem related expenses, number of days for which per diem claim is made. <br>
            This field is required for creating Per Diem Expenses.
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report. <br>
            Sending this field will add the expense to the report. If the expense is already attached to a report,
            the expense will be removed from the old report and added to the new report if it is not yet approved.
          example: rpvgnwlgw34
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
        file_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/fk_string'
          description: |
            List of file ids to attach to the expense. <br>
            To add new files to the expense, send the list of file ids to be attached. <br>
            To remove files from the expense, send the list of all file ids except which you want to remove. <br>
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            Specific to mileage expense. This represents the Mileage's rate id given by Fyle
            during creation of mileage rate for which this expense is created.
          nullable: true
          example: 9080
        mileage_is_round_trip:
          type: boolean
          nullable: true
          description: Flag stating whether this was a round trip or not.
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Distance computed by Fyle in mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Amount computed by Fyle in mileage expenses.
        commute_details_id:
          type: integer
          nullable: true
          description: |
            Commute details id of the expense. This id is provided by Fyle to identify a commute details.
          example: 1234
        commute_deduction:
          type: string
          nullable: true
          maxLength: 12
          description: |
            Commute deduction type of the expense.
          example: ONE_WAY
          enum:
            - ONE_WAY
            - ROUND_TRIP
            - NO_DEDUCTION
            - null
    spender_expenses_bulk_in:
      type: array
      additionalProperties: false
      description: |
        Array of expenses to be updated in bulk by the spender.
      items:
        type: object
        required:
          - id
        properties:
          id:
            allOf:
              - $ref: '#/components/schemas/id_string'
            description: |
              Expense id of the expense to be updated.
            example: txwownwrng
          merchant:
            $ref: '#/components/schemas/merchant'
            nullable: true
            description: |
              String denoting the name of the merchant to which the expense was made.
            example: Uber
          purpose:
            type: string
            nullable: true
            description: |
              Purpose of this expense.
            example: Team lunch
          cost_center_id:
            allOf:
              - $ref: '#/components/schemas/fk_integer'
            nullable: true
            description: |
              This represents the cost_center's id given by Fyle during creation of cost center
              for which this expense is created.
            example: 1049
          category_id:
            allOf:
              - $ref: '#/components/schemas/fk_integer'
            nullable: false
            description: |
              This represents the category's id given by Fyle during creation of category
              for which this expense is created.
            example: 49058
          project_id:
            allOf:
              - $ref: '#/components/schemas/fk_integer'
            nullable: true
            description: |
              This represents the project's id given by Fyle during creation of project
              for which this expense is created.
            example: 92895
          is_billable:
            $ref: '#/components/schemas/is_billable'
            nullable: true
            description: This fields marks whether a given expense is billable or not.
            example: true
          custom_fields:
            $ref: '#/components/schemas/custom_fields'
            nullable: false
          started_at:
            $ref: '#/components/schemas/timestamptz_pst'
            nullable: true
            description: |
              Start date for travel or per diem related expenses.
          ended_at:
            $ref: '#/components/schemas/timestamptz_pst'
            nullable: true
            description: |
              End date for travel or per diem related expenses.
          travel_classes:
            $ref: '#/components/schemas/travel_classes'
            nullable: false
            description: |
              This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
              index 0 holds onward journey class, index 1 holds return journey travel class.
            example:
              - ECONOMY
              - BUSINESS
          locations:
            $ref: '#/components/schemas/locations'
            nullable: false
            description: |
              This field will be present for travel related categories.
              For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
          distance:
            $ref: '#/components/schemas/distance'
            nullable: true
            description: Actual distance travelled by employee in travel related expenses.
          distance_unit:
            enum:
              - KM
              - MILES
              - null
            nullable: true
            description: Unit of distance travelled.
            example: MILES
          hotel_is_breakfast_provided:
            type: boolean
            nullable: true
            description: |
              This field is applicable for only `Hotel` category.
    expense_delete_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    bulk_error:
      type: object
      properties:
        error:
          type: string
          example: BulkError
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            type: object
            properties:
              row:
                type: integer
                description: |
                  This holds the info of which row contains bad data.
              key:
                oneOf:
                  - type: string
                  - type: integer
                description: |
                  This helps in identifying the error by unique key.
              message:
                type: string
                description: |
                  This explains what the error is in `human readable` text
    expense_attach_receipt_in:
      type: object
      required:
        - id
        - file_id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txsjfwlrglw
        file_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: fisjfwlrglw
    expense_creation_from_receipt_in:
      type: object
      required:
        - file_name
        - file_content
      properties:
        file_name:
          type: string
          maxLength: 255
          description: |
            Takes the name of the file which contains the receipt.
          example: very_important.jpeg
        file_content:
          type: string
          description: |
            This field takes the base64 encoded representation of the file.
          example: JVBERi0xLjQKMSAwIG9iago8PAovVGl0bGUgKP7/KQovQ3JlYX...
        source:
          $ref: '#/components/schemas/source'
    expense_creation_from_file_in:
      type: object
      required:
        - file_id
      properties:
        file_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Takes the id of the file which contains the receipt.
          example: fisjfwlrglw
        source:
          $ref: '#/components/schemas/source'
    attach_files_to_expense_in:
      type: object
      required:
        - id
        - file_ids
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txsjfwlrglw
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
          description: List of files to be attached to the expense
    expense_permissions_in:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Expense ID of the expense to check permissions for.
          example: tx0agOdICdbV
    expense_permissions_out:
      type: object
      required:
        - can_delete
        - can_edit
        - can_verify
        - can_remove_from_report
        - can_assign
        - can_add_to_report
      properties:
        can_delete:
          type: boolean
          description: |
            Indicates whether the user has permission to delete this expense.
          example: false
        can_edit:
          type: boolean
          description: |
            Indicates whether the user has permission to edit this expense.
          example: true
        can_verify:
          type: boolean
          description: |
            Indicates whether the user has permission to verify this expense.
          example: true
        can_remove_from_report:
          type: boolean
          description: |
            Indicates whether the user has permission to remove this expense from a report.
          example: false
        can_assign:
          type: boolean
          description: |
            Indicates whether the user has permission to assign this expense to another user.
          example: false
        can_add_to_report:
          type: boolean
          description: |
            Indicates whether the user has permission to add this expense to a report.
          example: true
    per_diem_rate_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        name:
          allOf:
            - $ref: '#/components/schemas/name'
          example: Florida Rate
        code:
          $ref: '#/components/schemas/code'
        description:
          $ref: '#/components/schemas/description'
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        rate:
          type: number
          example: 10
          description: Amount per night
    merchant_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        display_name:
          type: string
          description: |
            Merchant name
          example: Uber
    webhook_url:
      type: string
      description: |
        URL Endpoint for webhook
      example: https://api.custom.com/webhook1
    spender_subscriptions_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        created_at:
          $ref: '#/components/schemas/created_at'
        user_id:
          $ref: '#/components/schemas/fk_string'
    subscriptions_in:
      type: object
      additionalProperties: false
      required:
        - is_enabled
        - webhook_url
      properties:
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        webhook_url:
          $ref: '#/components/schemas/webhook_url'
    employee_out_embed_for_report:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
        level:
          $ref: '#/components/schemas/level_out_embed'
        ach_account:
          additionalProperties: false
          type: object
          properties:
            added:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee has added ach account
            verified:
              nullable: true
              type: boolean
              description: |
                This field indicates whether employee's ach account is verified.
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        joined_at:
          $ref: '#/components/schemas/joined_at'
    user_out_embed_nullable:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: uswjwgnwwgo
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee. Must be at least 3 characters.
          example: John Doe
    report_comments_out_embed:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - creator_user_id
        - creator_user
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        creator_user_id:
          $ref: '#/components/schemas/id_string'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
    advance_wallet_report_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        amount:
          $ref: '#/components/schemas/amount'
    report_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - created_at
        - updated_at
        - user_id
        - user
        - purpose
        - currency
        - amount
        - tax
        - state
        - num_expenses
        - is_manually_flagged
        - is_policy_flagged
        - last_paid_at
        - last_approved_at
        - last_submitted_at
        - last_resubmitted_at
        - seq_num
        - source
        - approvals
        - employee
        - next_approver_user_ids
        - comments
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user_id:
          $ref: '#/components/schemas/id_string'
        user:
          $ref: '#/components/schemas/user_out_embed'
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
          description: |
            Tax value of the object.
          example: 18.23
          nullable: true
        state:
          type: string
          enum:
            - DRAFT
            - APPROVER_PENDING
            - APPROVER_INQUIRY
            - PAYMENT_PROCESSING
            - APPROVED
            - PAYMENT_PENDING
            - PAID
        num_expenses:
          type: integer
          description: |
            Number of expenses part of this report
          example: 3
        is_verified:
          type: boolean
          nullable: true
          description: |
            Determines whether this report has been verified by a verifier
        is_physical_bill_submitted:
          type: boolean
          nullable: true
          description: |
            If physical has been collected for this report
        physical_bill_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when the physical bill for this report was submitted.
          nullable: true
        is_manually_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged manually
        is_policy_flagged:
          type: boolean
          description: |
            Determines whether this report was flagged from a policy
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this expense has been exported to external accounting system or not.
        last_paid_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was reimbursed.
          nullable: true
        last_approved_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was approved.
          nullable: true
        last_submitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was submitted.
          nullable: true
        last_resubmitted_at:
          type: string
          format: date-time
          example: '2020-06-11T13:14:55.201598+00:00'
          description: |
            Signifies if and when this report was resubmitted.
          nullable: true
        seq_num:
          type: string
          description: |
            A unique human readable identifier for the report
          example: C/2021/02/R/907
        source:
          type: string
          description: |
            where was this report object created from
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/report_approval_out_embed'
          description: |
            List of report_approval objects
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed_for_report'
        next_approver_user_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - us123heh98
        state_display_name:
          type: string
          example: Sent Back
          description: readable state name
        comments:
          type: array
          items:
            $ref: '#/components/schemas/report_comments_out_embed'
          description: |
            List of comments on the report
        accounting_export_summary:
          type: object
          description: |
            Summary of accounting export for this report.
          properties:
            state:
              type: string
              enum:
                - COMPLETE
                - ERROR
                - IN_PROGRESS
                - SKIPPED
                - INITIATED
              example: COMPLETE
            skipped:
              type: number
              description: |
                Number of skipped expenses.
              example: 2
            error:
              type: number
              description: |
                Number of failed expenses.
              example: 0
            complete:
              type: number
              description: |
                Number of complete expenses.
              example: 5
            in_progress:
              type: number
              description: |
                Number of in progress expenses.
              example: 0
            initiate:
              type: number
              description: |
                Number of initiated expenses.
              example: 0
            tpa_id:
              type: string
              nullable: false
              description: |
                Third party app id.
              example: tpa_1234567890
        applied_advance_wallets:
          type: array
          items:
            $ref: '#/components/schemas/advance_wallet_report_out'
          nullable: true
          description: |
            List of applied advance wallets
    report_out_subscriptions_spender:
      type: object
      additionalProperties: false
      required:
        - resource
        - action
        - data
        - reason
      properties:
        resource:
          type: string
          example: REPORT
        action:
          type: string
          enum:
            - PARTIALLY_APPROVED
            - APPROVER_ADDED
            - APPROVER_SENDBACK
            - APPROVED
            - APPROVER_REMOVED
            - PAYMENT_PENDING
            - PAYMENT_PROCESSING
            - PAID
            - COMMENTED
          example: COMMENTED
        data:
          allOf:
            - $ref: '#/components/schemas/report_out'
            - type: object
              additionalProperties: false
              properties:
                updated_by_user:
                  $ref: '#/components/schemas/user_out_embed'
        reason:
          type: string
          example: comment given by Approver while approving the report.
    schedule_config:
      type: object
      nullable: false
      properties:
        type:
          nullable: false
          type: string
          example: interval
          enum:
            - interval
            - date
            - cron
        when:
          nullable: false
          oneOf:
            - type: object
              additionalProperties: false
              properties:
                weeks:
                  type: number
                  example: 2
                days:
                  type: number
                  example: 12
                hours:
                  type: number
                  example: 6
                minutes:
                  type: number
                  example: 30
                seconds:
                  type: number
                  example: 30
                end_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                start_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                jitter:
                  nullable: true
                  type: number
                  example: 20
            - type: object
              additionalProperties: false
              properties:
                year:
                  type: string
                  example: 2022
                month:
                  type: string
                  example: 10
                day:
                  type: string
                  example: last, 15
                week:
                  type: string
                  example: 2
                day_of_week:
                  type: string
                  example: mon
                hour:
                  type: string
                  example: 23
                minute:
                  type: string
                  example: 23
                second:
                  type: string
                  example: 23
                end_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
                start_date:
                  nullable: true
                  type: string
                  example: '2020-11-11T16:29:30.965869Z'
            - type: object
              additionalProperties: false
              properties:
                run_date:
                  nullable: true
                  type: string
                  example: '2021-05-12T10:16:50.410Z'
    schedule_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        config:
          $ref: '#/components/schemas/schedule_config'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to which the object is associated.
          readOnly: true
          example: uswjwgnwwgo
          nullable: true
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
    event_payload:
      nullable: true
      type: object
      properties:
        resource_id:
          nullable: true
          type: string
          example: tx123TRew12
        resource_name:
          nullable: true
          type: string
          example: TRANSACTION
    schedule_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        event_payload:
          $ref: '#/components/schemas/event_payload'
        config:
          $ref: '#/components/schemas/schedule_config'
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        event_name:
          type: string
          nullable: true
          example: report.created
    report_source:
      type: string
      enum:
        - WEBAPP
        - MOBILE
        - TPA
        - SLACK
      description: |
        Enum value signifying the client from which this expense was created
      example: SLACK
    spender_report_in:
      type: object
      additionalProperties: false
      required:
        - purpose
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        source:
          $ref: '#/components/schemas/report_source'
        purpose:
          type: string
          description: |
            Indicates purpose of the reports. It can only be updated for an existing report when the report is in `APPROVER_PENDING` , `APPROVER_INQUIRY` or `DRAFT` state.
          example: '#1: Jun 2020'
    report_delete_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    report_action_with_expenses_ids_to_add:
      type: object
      additionalProperties: false
      required:
        - id
        - expense_ids
      properties:
        id:
          type: string
          description: |
            id of report, to which the expenses are to be added
          example: rpa21A2rdj2
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    report_action_with_expenses_ids_to_eject:
      type: object
      additionalProperties: false
      required:
        - id
        - expense_ids
      properties:
        id:
          type: string
          description: |
            id of report, from which the expenses are to be ejected
          example: rpa21A2rdj2
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    reason:
      type: string
      description: |
        Explanation to the action if provided by the user
      example: All bills are in order
    report_action_submit:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of report, which needs to be submitted
          example: rpa21A2rdj2
    report_action_resubmit:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: |
            id of report, which needs to be resubmitted
          example: rpa21A2rdj2
    reports_stats_in:
      properties:
        query_params:
          type: string
          description: |
            Query param string similar to reports GET call. Use group_by_state=eq.true to get state-wise grouping of stats.
          nullable: false
          example: id=in.('rp123','rep1234')&group_by_state=eq.true
    reports_stats_out:
      oneOf:
        - type: array
          title: State-wise grouped stats
          description: Stats grouped by report state
          items:
            type: object
            required:
              - count
              - total_amount
              - state
              - failed_amount
              - failed_count
              - processing_amount
              - processing_count
              - reimbursable_amount
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching reports in this state.
                example: 5
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching reports in this state.
                example: 2200
              state:
                type: string
                enum:
                  - APPROVER_PENDING
                  - DRAFT
                  - PAYMENT_PROCESSING
                  - APPROVER_INQUIRY
                  - APPROVED
                  - PAYMENT_PENDING
                  - PAID
                description: Report state.
              failed_amount:
                type: number
                nullable: true
                description: Sum of reimbursable amount for ACH-failed reports, applicable only in PAYMENT_PROCESSING state.
                example: 200
              failed_count:
                type: integer
                nullable: true
                description: Count of ACH-failed reports, applicable only in PAYMENT_PROCESSING state.
                example: 1
              processing_amount:
                type: number
                nullable: true
                description: Sum of reimbursable amount for processing reports, applicable only in PAYMENT_PROCESSING state.
                example: 1500
              processing_count:
                type: integer
                nullable: true
                description: Count of processing reports, applicable only in PAYMENT_PROCESSING state.
                example: 3
              reimbursable_amount:
                type: number
                nullable: false
                description: Sum of reimbursable amounts for matching reports in this state.
                example: 500
        - type: object
          title: Overall stats
          description: Overall stats without state grouping (response for older mobile app versions).
          required:
            - count
            - total_amount
            - processing_amount
            - processing_count
            - failed_amount
            - failed_count
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching reports.
              example: 1
            total_amount:
              type: number
              nullable: false
              description: Total sum of amounts for all matching reports.
              example: 100
            processing_amount:
              type: number
              nullable: true
              description: Sum of reimbursable amounts for reports in processing state.
              example: 101
            processing_count:
              type: integer
              nullable: true
              description: Count of reports in processing state.
              example: 2
            failed_amount:
              type: number
              nullable: true
              description: Sum of reimbursable amounts for reports in processing state with ACH failures.
              example: 101
            failed_count:
              type: integer
              nullable: true
              description: Count of reports in processing state with ACH failures.
              example: 1
      example:
        - state: DRAFT
          count: 3
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 200
          total_amount: 350
        - state: APPROVER_PENDING
          count: 5
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 500
          total_amount: 2200
        - state: PAYMENT_PROCESSING
          count: 5
          failed_amount: 200
          failed_count: 1
          processing_amount: 1500
          processing_count: 3
          reimbursable_amount: 500
          total_amount: 2200
        - state: PAID
          count: 0
          failed_amount: null
          failed_count: null
          processing_amount: null
          processing_count: null
          reimbursable_amount: 0
          total_amount: 0
    report_purpose_in:
      type: object
      additionalProperties: false
      required:
        - expense_ids
      properties:
        expense_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          example:
            - txelntgwgwll
    report_purpose_out:
      type: object
      additionalProperties: false
      required:
        - purpose
      properties:
        purpose:
          type: string
          description: purpose for creating the report
          example: Business trip to London
          nullable: true
    filter_name:
      type: string
      nullable: false
      maxLength: 255
      description: |
        This represents the name of the filter.
      example: Code E0101
    is_shared:
      type: boolean
      nullable: true
      description: |
        This indicates if the filter should be shared with others in the org.
      default: false
      example: true
    query_string:
      type: string
      nullable: false
      maxLength: 255
      description: |
        This represents a query string which will be used to filter the data.
      example: code.eq.'E0101'
    sub_feature:
      type: string
      description: |
        This field can be used to setup a collection of filters. For example, if you have multiple filters
        for a single page, this can be used as an identifier to fetch all the filters for that page. <br>
        **Note: Only combination of alphabets, numbers and _(underscore) is allowed**
      nullable: true
      example: flagged_expenses
    report_filters_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpfilumWHrlPf7K
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    report_filters_in:
      type: object
      additionalProperties: false
      required:
        - name
        - query_string
      properties:
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
    report_filters_delete_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: rpfilumWHrlPf7K
    report_comments_in:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
      properties:
        id:
          type: string
          description: |
            id of the report, on which need to add comment
          example: rpa21A2rdj2
        comment:
          type: string
          description: |
            comment on the report
          example: We don't accept laundry bills
    report_comments_out:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - report_id
        - creator_user_id
        - creator_user
        - created_at
        - org_id
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        report_id:
          $ref: '#/components/schemas/id_string'
        creator_user_id:
          $ref: '#/components/schemas/id_string'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/id_string'
    report_permissions_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    report_permissions_out:
      type: object
      additionalProperties: false
      required:
        - can_edit
        - can_admin_or_approver_edit
        - can_delete
        - can_submit
        - can_export
        - can_resubmit
        - can_approve
        - can_admin_approve
        - can_send_back
        - can_verify
        - can_move_to_payment_pending
        - can_add_approver
        - can_remove_approver
      properties:
        can_edit:
          type: boolean
          example: true
        can_admin_or_approver_edit:
          type: boolean
          example: true
        can_delete:
          type: boolean
          example: true
        can_submit:
          type: boolean
          example: true
        can_export:
          type: boolean
          example: true
        can_resubmit:
          type: boolean
          example: true
        can_approve:
          type: boolean
          example: true
        can_admin_approve:
          type: boolean
          example: true
        can_send_back:
          type: boolean
          example: true
        can_verify:
          type: boolean
          example: true
        can_move_to_payment_pending:
          type: boolean
          example: true
        can_add_approver:
          type: boolean
          example: true
        can_remove_approver:
          type: boolean
          example: true
    query_params:
      type: string
      description: |
        This field contains the query param string similar to the query params passed in GET call for displaying data in the list view.
      example: state=eq.PAID
    reports_export_config_column_formula:
      type: object
      properties:
        function:
          type: string
          example: parse-format-time
        parameters:
          type: array
          items:
            anyOf:
              - type: object
              - type: string
              - type: number
              - type: integer
              - type: boolean
          example:
            - function: field
              parameters:
                - spent_at
            - yyyy-MM-dd'T'HH:mm:ss
            - dd-MM-yyyy
            - error in date formatting
      description: |
        Export column formula is a expression that is used to transform the data. Refer https://www.fylehq.com/help/en/articles/4422306-advanced-export-formulas for more details.
    reports_export_config:
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          enum:
            - xlsx
            - csv
            - pdf
          description: |
            Type of the export file.
          example: csv
        include_receipts:
          type: boolean
          description: |
            Whether to include receipts in the export file or not. Only required for PDF exports.
          example: true
        is_header_visible:
          type: boolean
          description: |
            Whether to show the header in the export file. Only required for CSV and XLSX exports.
          example: true
        separate_line_items_entry:
          type: object
          properties:
            enabled:
              type: boolean
              description: |
                Whether to show the double rows for each line item in the export file.
              example: false
            debit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for debit entries.
              example:
                - debit_amount
            credit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for credit entries.
              example:
                - credit_amount
          description: |
            Configure how to show the double rows for each line item in the export file, if enabled. Only required for CSV and XLSX exports.
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  Name of the column.
                example: Spent Date
              formula:
                allOf:
                  - $ref: '#/components/schemas/reports_export_config_column_formula'
                description: |
                  Formula to transform the data in the column.
          description: |
            Configure the columns to show in the export file. Only required for CSV and XLSX exports.
    reports_exports_out:
      type: object
      additionalProperties: false
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: refilumWHrlPf7K
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
        config:
          allOf:
            - $ref: '#/components/schemas/reports_export_config'
          nullable: false
        file_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: filumWHrlPf7K
        state:
          type: string
          nullable: false
          enum:
            - PENDING
            - PROCESSING
            - SUCCESS
            - ERROR
          description: |
            Status of the export.
          example: PENDING
    reports_exports_in:
      type: object
      additionalProperties: false
      required:
        - query_params
        - notify_emails
        - config
      properties:
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
          description: |
            List of emails to notify when the export is ready.
        config:
          allOf:
            - $ref: '#/components/schemas/reports_export_config'
          nullable: false
          description: |
            Configuration for the export.
    advance_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advances.
            This id is always prefixed with `adv`.
          readOnly: true
          example: advkvnwrnpwi
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
    advance_request_custom_field:
      type: object
      description: |
        Advance request custom field
      properties:
        name:
          type: string
          example: cf1
        value:
          nullable: true
          oneOf:
            - type: string
              example: string1
            - type: boolean
              example: true
            - type: integer
              example: 123
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
              example:
                - v1
                - v2
        type:
          type: string
          enum:
            - TEXT
            - NUMBER
            - SELECT
            - BOOLEAN
            - MULTI_SELECT
            - LOCATION
            - USER_LIST
            - DATE
          description: |
            This field specifies the type of the custom field.
          example: SELECT
        id:
          type: integer
          description: ID of the custom field
          example: 123
    advance_request_custom_fields:
      type: array
      description: |
        Advance request custom fields
      items:
        $ref: '#/components/schemas/advance_request_custom_field'
    advance_request_approval_out_embed:
      type: object
      additionalProperties: false
      properties:
        approver_user_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: usge49ielgel
        approver_user:
          $ref: '#/components/schemas/user_out_embed'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
            - APPROVAL_DONE
            - APPROVAL_REJECTED
          description: |
            State of this advance request approval
    employee_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        org_id:
          $ref: '#/components/schemas/org_id'
        department_id:
          nullable: true
          $ref: '#/components/schemas/department_id'
        department:
          nullable: true
          $ref: '#/components/schemas/department_out_embed'
    user_id_nullable:
      type: string
      description: |
        The unique id of an user to which the object is associated.
      readOnly: true
      nullable: true
      example: uswjwgnwwgo
    advance_request_comments_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: A comment on the advance request
          example: Advance request was created
        action:
          type: string
          description: Advance request action for which comment is added.
          example: SUBMITTED
        advance_request_id:
          $ref: '#/components/schemas/id_string'
        creator_type:
          type: string
          description: Describes whether the comment is system-generated or User made.
          enum:
            - SYSTEM
            - POLICY
            - USER
          example: USER
        creator_user_id:
          $ref: '#/components/schemas/user_id_nullable'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/org_id'
    advance_request_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        advance_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance:
          $ref: '#/components/schemas/advance_out_embed'
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: |
            The name of the client app from which this advance was created.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: WEBAPP
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - SENT_BACK
            - PULLED_BACK
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        custom_fields:
          $ref: '#/components/schemas/advance_request_custom_fields'
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_approval_out_embed'
          description: |
            List of advance request approval objects
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this advance request has been exported to external accounting system or not.
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/advance_request_comments_out'
          description: |
            List of comments in the advance request
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
        files:
          type: array
          items:
            $ref: '#/components/schemas/file_out_embed'
    advance_request_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqiwr3Wwirr
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        code:
          $ref: '#/components/schemas/code'
        notes:
          type: string
          nullable: true
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: |
            The name of the client app from which this advance was created.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        custom_fields:
          $ref: '#/components/schemas/advance_request_custom_fields'
    advance_requests_stats_in:
      properties:
        query_params:
          description: |
            Query param string similar to advance_requests GET call. Use group_by_state=eq.true to get state-wise grouping of stats.
          nullable: false
          example: id=in.('adr1263','adr1569')&group_by_state=eq.true
    advance_requests_stats_out:
      oneOf:
        - type: array
          title: State-wise grouped stats
          description: Stats grouped by advance request state
          items:
            type: object
            required:
              - count
              - total_amount
              - state
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching advance requests in this state.
                example: 10
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching advance requests in this state.
                example: 44545.4
              state:
                type: string
                enum:
                  - DRAFT
                  - APPROVAL_PENDING
                  - APPROVED
                  - CANCELLED
                  - REJECTED
                  - PAID
                  - PULLED_BACK
                  - SENT_BACK
                description: Advance request state.
        - type: object
          title: Overall stats
          description: Overall stats without state grouping.
          required:
            - count
            - total_amount
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching advance requests.
              example: 353
            total_amount:
              type: number
              nullable: false
              description: Sum of amounts for all matching advance requests.
              example: 45882.4
      example:
        - state: DRAFT
          count: 10
          total_amount: 44545.4
        - state: APPROVAL_PENDING
          count: 0
          total_amount: 0
        - state: APPROVED
          count: 343
          total_amount: 1337
        - state: CANCELLED
          count: 0
          total_amount: 0
        - state: SENT_BACK
          count: 0
          total_amount: 0
        - state: PULLED_BACK
          count: 0
          total_amount: 0
        - state: REJECTED
          count: 0
          total_amount: 0
        - state: PAID
          count: 0
          total_amount: 0
    advance_request_out_embed:
      type: object
      nullable: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify an advance requests.
            This id is always prefixed with `adr`.
          readOnly: true
          example: adrkvnwrnpwi
        last_approved_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance request was approved.
          nullable: true
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advance request.
            This field can be used as reference in UI.
          example: AR/2020/10/T/95
    advance_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        payment_mode:
          type: string
          enum:
            - CARD
            - BANK_TRANSFER
            - CHEQUE_DD
            - FOREX
            - CASH
          example: CASH
        advance_request_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advjrgwlk2Q
        advance_request:
          $ref: '#/components/schemas/advance_request_out_embed'
        advance_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: accwiofowiww
          deprecated: true
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: awfgRr8YA6KK
        seq_num:
          type: string
          description: |
            This is user visible identifier for an advances.
            This field can be used as reference in UI.
          example: A/2020/10/T/95
        purpose:
          type: string
          nullable: true
          description: |
            Descriptive purpose which is added to an advance.
          example: onsite client meeting
        source:
          type: string
          nullable: true
          description: |
            The name of the client app from which this advance was created.
            if its a thrid party app, it prefixed with TPA_.
            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
            passed, source is saved as TPA.
          example: WEBAPP
        project_id:
          $ref: '#/components/schemas/fk_integer'
        project:
          $ref: '#/components/schemas/project_out_embed'
        code:
          $ref: '#/components/schemas/code'
        issued_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies if and when this advance was issued.
          nullable: true
        card_number:
          type: string
          nullable: true
          example: XXXXXXXXXXXX1234
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this advance has been exported to external accounting system or not.
        last_exported_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: signifies when this advance was exported to an external accounting system.
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee_out_embed'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
    advances_stats_in:
      properties:
        query_params:
          type: string
          description: |
            This field contains the query param string similar to the query params passed in advances GET call for displaying advances in the list view.
          nullable: false
          example: id=in.('adv1263', 'adv1569')
    advances_stats_out:
      type: object
      properties:
        count:
          type: integer
          description: |
            This field represents the total number of advances that match the criteria specified in the query_params within the body of the request.
          nullable: false
          example: 1
        total_amount:
          allOf:
            - $ref: '#/components/schemas/amount'
          description: |
            This field indicates the sum of amount of advances that match the criteria specified in the query_params within the body of the request.
          example: 100
    advance_wallet_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: advwrlAGwjr2
        user_id:
          $ref: '#/components/schemas/user_id'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        currency:
          $ref: '#/components/schemas/currency'
        balance_amount:
          $ref: '#/components/schemas/amount'
    corporate_card_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          nullable: true
          description: |
            The unique id of an user to whom the card is assigned
          example: uswjwgnwwgo
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        bank_name:
          $ref: '#/components/schemas/bank_name'
        card_number:
          $ref: '#/components/schemas/card_number'
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        data_feed_source:
          type: string
          nullable: true
          description: |
            signifies the source of how card is added and how further card transactions could be synced
          example: BANK FEED - CDF
        code:
          type: string
          nullable: true
          description: |
            Id given by external systems like Gmail. To identify whether that entity
            has been already added to Fyle or not.
          example: wgjwgo3ihwljnlsww
        yodlee_account_id:
          type: string
          nullable: true
          description: |
            Identifier for the linked Yodlee account.
          example: yac2cqC4eSaS6
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last assigned.
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card.
          nullable: true
          example: uswjwgnwwgo
        is_visa_enrolled:
          type: boolean
          description: |
            If the card is enrolled with real time feed from visa
          nullable: false
        is_mastercard_enrolled:
          type: boolean
          description: |
            If the card is enrolled with realtime feed from Mastercard
          nullable: false
        is_capitalone_enrolled:
          type: boolean
          description: |
            If the card is enrolled with realtime feed from Capital One
          nullable: true
        is_dummy:
          type: boolean
          description: |
            If the card is a test card
          nullable: false
        last_ready_for_verification_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was ready to be verified 
          example: '2022-02-01T07:20:30.951475+00:00'
          nullable: true
        last_verification_attempt_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the last card verification was attempted
          nullable: true
        last_verified_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Signifies when the card was verified
          example: '2022-02-01T07:20:39.207250+00:00'
          nullable: true
        verification_status:
          type: string
          nullable: false
          description: |
            Verification status of the corporate card
          enum:
            - VERIFIED
            - NOT_VERIFIED
            - READY_FOR_VERIFICATION
        virtual_card_id:
          type: string
          description: |
            The unique id of the virtual card, if the card is created from virtual card.
          nullable: true
          example: viasdfasdfddd
        virtual_card_state:
          type: string
          description: |
            Status of the virtual card
          nullable: true
          enum:
            - ACTIVE
            - PREACTIVE
            - INACTIVE
            - EXPIRED
            - DELETED
            - USED
            - null
          example: ACTIVE
        nickname:
          type: string
          maxLength: 25
          nullable: true
          description: |
            Unique nickname assigned to the card
          example: Business Card
        total_transactions_count:
          type: integer
          nullable: false
          description: |
            The total number of transactions for the card, in Fyle
          example: 100
        unassigned_transactions_count:
          type: integer
          nullable: false
          description: |
            The total number of unassigned transactions for the card, in Fyle
          example: 50
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - bank_name
        - card_number
        - cardholder_name
        - data_feed_source
        - code
        - yodlee_account_id
        - last_synced_at
        - last_assigned_at
        - assignor_user_id
        - is_visa_enrolled
        - is_mastercard_enrolled
        - is_capitalone_enrolled
        - is_dummy
        - last_ready_for_verification_at
        - last_verification_attempt_at
        - last_verified_at
        - verification_status
        - virtual_card_id
        - virtual_card_state
        - nickname
        - total_transactions_count
        - unassigned_transactions_count
    yodlee_accounts_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          nullable: true
          description: |
            The unique id of an user to whom the card is assigned
          example: uswjwgnwwgo
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          $ref: '#/components/schemas/bank_name'
        card_number:
          $ref: '#/components/schemas/card_number'
        last_synced_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card was last synced.
        yodlee_is_credential_update_required:
          type: boolean
          nullable: true
          description: |
            If credential update is required for the card
          example: true
        yodlee_is_mfa_required:
          type: boolean
          nullable: true
          description: |
            If MFA is required for the card
          example: false
        yodlee_fastlink_params:
          type: object
          nullable: true
          properties:
            flow:
              type: string
              nullable: false
              description: |
                Flow through which fastlink should be accessed
              example: edit
            configName:
              type: string
              nullable: false
              description: |
                Configuration to be used in fastlink
              example: Aggregation
            providerAccountId:
              type: string
              nullable: false
              description: |
                Provider account id of the user
              example: '12345'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
      required:
        - id
        - bank_name
        - card_number
        - last_synced_at
        - yodlee_is_credential_update_required
        - yodlee_is_mfa_required
        - yodlee_fastlink_params
        - created_at
        - updated_at
    string_detail:
      type: string
      description: Additional string details of the card transaction. Can hold details upto 256 characters in length.
      nullable: true
      example: sample string
    corporate_card_out_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        bank_name:
          type: string
          description: |
            Specifies the name of bank who issued the card.
          example: Bank of America
        card_number:
          type: string
          description: |
            Specifies the masked number of the card.
            Add only masked card-numbers, last four digits of the card.
          example: xxxx-4543
        nickname:
          type: string
          maxLength: 25
          nullable: true
          description: |
            Unique nickname assigned to the card
          example: Business Card
        cardholder_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's name
          example: John Cena
        masked_number:
          type: string
          description: |
            Specifies the last 4 digits of the card number.
          example: '4543'
        user_full_name:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the card holder's full name
          example: John Cena
        user_email:
          type: string
          maxLength: 127
          nullable: true
          description: |
            String denoting the card holder's email
          example: john.doe@example.com
    matched_expense_out_embed:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - currency
        - amount
        - spent_at
        - merchant
        - purpose
        - foreign_currency
        - foreign_amount
        - state
        - seq_num
        - no_of_files
        - category_display_name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: txwownwrng
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this expense was made.
            This date cannot be in future.
        merchant:
          type: string
          nullable: true
          maxLength: 255
          description: |
            String denoting the name of the merchant to which the Expense was made.
          example: Uber
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          nullable: true
          example: Team lunch
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
            - UNREPORTABLE
          description: The state of the Expense.
        seq_num:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        no_of_files:
          type: integer
          description: |
            Number of files attached to the expense.
          example: 1
        category_display_name:
          type: string
          description: |
            Category of the expense.
          example: Travel
    double_precision_detail:
      type: number
      description: Additional floating point numeric details of the card transaction. Same as double precision.
      nullable: true
      example: 468.2923
    timestamp_detail:
      type: string
      format: date-time
      description: |
        Additional details of the card transaction. <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339, section 5.6 compliant timestamp.</a>
      example: '2020-07-03T18:19:31.193Z'
      nullable: true
    integer_detail:
      type: integer
      description: Additional integer details of the card transaction.
      nullable: true
      example: 5
    text_detail:
      type: string
      description: Additional text details of the card transaction.
      nullable: true
      example: sample text
    corporate_card_transaction_metadata:
      type: object
      nullable: true
      description: |
        Additional data that can optionally be stored. Some example details are added for reference.
      properties:
        merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        flight_supplier_name:
          $ref: '#/components/schemas/string_detail'
        flight_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        flight_ticket_number:
          $ref: '#/components/schemas/string_detail'
        flight_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        flight_travel_date:
          $ref: '#/components/schemas/timestamp_detail'
        flight_service_class:
          $ref: '#/components/schemas/string_detail'
        flight_carrier_code:
          $ref: '#/components/schemas/string_detail'
        flight_fare_base_code:
          $ref: '#/components/schemas/string_detail'
        flight_trip_leg_number:
          $ref: '#/components/schemas/string_detail'
        hotel_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        hotel_supplier_name:
          $ref: '#/components/schemas/string_detail'
        hotel_checked_in_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_nights:
          $ref: '#/components/schemas/integer_detail'
        hotel_checked_out_at:
          $ref: '#/components/schemas/timestamp_detail'
        hotel_country:
          $ref: '#/components/schemas/string_detail'
        hotel_city:
          $ref: '#/components/schemas/string_detail'
        hotel_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        fleet_product_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_product_supplier_name:
          $ref: '#/components/schemas/string_detail'
        fleet_service_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        fleet_service_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_merchant_category_code:
          $ref: '#/components/schemas/string_detail'
        car_rental_supplier_name:
          $ref: '#/components/schemas/string_detail'
        car_rental_started_at:
          $ref: '#/components/schemas/timestamp_detail'
        car_rental_days:
          $ref: '#/components/schemas/integer_detail'
        car_rental_ended_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_issued_at:
          $ref: '#/components/schemas/timestamp_detail'
        general_ticket_number:
          $ref: '#/components/schemas/string_detail'
        general_issuing_carrier:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_name:
          $ref: '#/components/schemas/string_detail'
        general_travel_agency_code:
          $ref: '#/components/schemas/string_detail'
        general_ticket_total_fare:
          $ref: '#/components/schemas/double_precision_detail'
        general_ticket_total_tax:
          $ref: '#/components/schemas/double_precision_detail'
        merchant_address:
          $ref: '#/components/schemas/text_detail'
    corporate_card_transaction_list_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          description: |
            The unique id of an user to whom the card transaction is assigned.
          readOnly: true
          nullable: true
          example: null
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          nullable: false
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        transaction_status:
          type: string
          enum:
            - POSTED
            - PENDING
          description: |
            Holds the status of the Corporate Card Transaction, whether posted or still pending.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        bank_transaction_number:
          type: string
          nullable: true
          description: |
            The external bank reference number provided for Amex transactions.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example:
            - txwownwrng
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - is_exported
        - metadata
    corporate_card_transactions_expenses_stats_in:
      type: object
      properties:
        query_params:
          type: string
          description: |
            Query param string for filtering corporate card transactions.
          nullable: false
          example: created_at=gt.2024-01-01
    corporate_card_transactions_expenses_stats_out:
      type: array
      description: |
        Array containing stats objects grouped by corporate card numbers and expense state. Returns an empty array if no 
        transactions are found matching the criteria.
      items:
        type: object
        required:
          - corporate_card_id
          - card_number
          - bank_name
          - state
          - count
          - total_amount
        properties:
          corporate_card_id:
            type: string
            nullable: false
            description: |
              Id provided by Fyle to corporate cards.
          card_number:
            type: string
            nullable: false
            description: |
              Masked card number (showing first 6 and last 4 digits).
            example: 411111******1111
          bank_name:
            type: string
            nullable: false
            description: |
              Name of the bank that issued the card.
            example: VISA_BANK
          state:
            type: string
            nullable: false
            description: |
              State of the corporate card transactions.
            example: COMPLETE
          count:
            type: integer
            nullable: false
            description: |
              Number of transactions for this card number.
            example: 7
          total_amount:
            type: number
            nullable: false
            description: |
              Sum of transaction amounts for this card number.
            example: 500.86
      example:
        - state: COMPLETE
          id: baccRl93zzwHIK
          bank_name: VISA_BANK
          card_number: 411111******1111
          count: 7
          total_amount: 500.86
        - state: COMPLETE
          id: baccdwz2kgUFa8
          bank_name: MASTERCARD_BANK
          card_number: 422222******2222
          count: 3
          total_amount: 3209.98
        - state: DRAFT
          id: baccB8zAkaYnnN
          bank_name: VISA_BANK
          card_number: 444444******4444
          count: 3
          total_amount: 336.81
    corporate_card_transaction_id_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
      required:
        - id
    corporate_card_transaction_mark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: true
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmark_personal_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_ignore_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: true
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_undo_ignore_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        transaction_status:
          type: string
          enum:
            - POSTED
            - PENDING
          description: |
            Holds the status of the Corporate Card Transaction, whether posted or still pending.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        bank_transaction_number:
          type: string
          nullable: true
          description: |
            The external bank reference number provided for Amex transactions.
          example: null
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
          example: null
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - is_exported
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_match_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_match_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
          example: false
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    corporate_card_transaction_unmatch_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwownwrng
      required:
        - id
        - expense_ids
    corporate_card_transaction_unmatch_out:
      additionalProperties: false
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: btxnwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        user:
          $ref: '#/components/schemas/user_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies when this card transaction was made.
            This date cannot be in future.
        post_date:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            signifies post date of a card transaction.
            This date cannot be in future.
        transaction_status:
          type: string
          enum:
            - POSTED
            - PENDING
          description: |
            Holds the status of the Corporate Card Transaction, whether posted or still pending.
        description:
          type: string
          nullable: true
          description: |
            Holds the description of the card transaction
          example: Team lunch
        statement_id:
          type: string
          nullable: true
          description: |
            If the transaction is created by statement uploaded then this key refers to the source statement.
          example: stmtdasfdsaf3
        can_delete:
          type: boolean
          nullable: true
          description: |
            Determines whether this card transaction can be deleted or not.
          example: false
        capitalone_virtual_card_last_four:
          type: string
          nullable: true
          description: |
            Last four digits of capitalone virtual card.
          example: '4521'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        code:
          $ref: '#/components/schemas/code'
        merchant:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the name of the vendor to which the card transaction was made.
            Note: This is not same as the merchant added in Fyle but just a string
          example: Uber
        mcc:
          type: string
          description: |
            This refers to the merchant category code for which this card transaction is made.
          $ref: '#/components/schemas/string_detail'
          example: '5102'
        category:
          type: string
          maxLength: 255
          nullable: true
          description: |
            String denoting the category of the card transaction
            Note: This is not same as the category added in Fyle but just a string
          example: Travel
        corporate_card_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: bawownwrng
        corporate_card:
          $ref: '#/components/schemas/corporate_card_out_embed'
        assignor_user_id:
          type: string
          description: |
            The unique id of an user who assigned the card transaction.
          nullable: true
          example: uswjwgnwwgo
        assignor_user:
          $ref: '#/components/schemas/user_out_embed'
        is_assigned:
          type: boolean
          description: |
            Determines whether this card transaction is assigned.
        last_assigned_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last assigned.
        is_marked_personal:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is marked as personal transaction made on the corporate card.
        bank_transaction_number:
          type: string
          nullable: true
          description: |
            The external bank reference number provided for Amex transactions.
          example: null
        last_marked_personal_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last marked personal.
          example: null
        is_dismissed:
          type: boolean
          example: false
          description: |
            Determines whether this card transaction is dismissed.
        is_exported:
          type: boolean
          nullable: true
          description: |
            Determines whether this CCC transaction has been exported to external accounting system or not.
        last_dismissed_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            Signifies when this card transaction was last dismissed.
          example: null
        is_auto_matched:
          type: boolean
          example: false
          description: |
            Signifies when this card transaction is auto_matched.
        auto_suggested_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are automatically suggested to be matched by the system
          example: []
        last_auto_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was auto matched.
          example: null
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example: []
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        last_user_matched_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          nullable: true
          description: |
            signifies when this expense was last matched by user.
        metadata:
          $ref: '#/components/schemas/corporate_card_transaction_metadata'
      required:
        - id
        - org_id
        - user_id
        - user
        - created_at
        - updated_at
        - amount
        - currency
        - spent_at
        - post_date
        - description
        - statement_id
        - foreign_currency
        - foreign_amount
        - code
        - merchant
        - category
        - corporate_card_id
        - corporate_card
        - can_delete
        - assignor_user_id
        - assignor_user
        - is_assigned
        - last_assigned_at
        - is_marked_personal
        - last_marked_personal_at
        - is_dismissed
        - last_dismissed_at
        - is_auto_matched
        - auto_suggested_expense_ids
        - last_auto_matched_at
        - matched_expense_ids
        - matched_expenses
        - last_user_matched_at
        - metadata
    user_full_name:
      type: string
      maxLength: 255
      description: |
        String denoting the full name of an employee.
      example: Jon Snow
    delegatees:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_integer'
          description: |
            Delegation id.
          example: 100
        type:
          type: string
          enum:
            - SHORT_TERM
            - PERMANENT
          description: |
            Type of delegation.
          example: SHORT_TERM
        user_id:
          $ref: '#/components/schemas/user_id'
        email:
          allOf:
            - $ref: '#/components/schemas/email'
          description: |
            Email of the delegatee.
        full_name:
          allOf:
            - $ref: '#/components/schemas/user_full_name'
          description: |
            Full name of the delegatee.
        start_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time from which the delegation is active.
          nullable: false
        end_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time till which the delegation is active. If null, delegation is active indefinitely.
          nullable: true
    spender_employee_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/fk_string'
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee.
          example: John Doe
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        commute_details:
          $ref: '#/components/schemas/commute_details'
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        is_mobile_verified:
          type: boolean
          nullable: true
          description: |
            Flag which indicates if mobile is verified or not.
          example: false
        sms_opt_out_source:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Represents if opt out is done by web app or sms
          example: WEB_APP
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        delegatees:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/delegatees'
          description: |
            List of users who are delegatees for this employee.
    spender_employee_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: ouabcdefghij
        mobile:
          type: string
          nullable: true
          description: |
            The mobile number to be added to the employee's profile. It should start with a '+' sign, include the country code, and have a total of 4 to 15 digits.
          example: '+15017122661'
      required:
        - id
        - mobile
    locale:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        abbreviation:
          type: string
          nullable: false
          maxLength: 4
          example: IST
          description: |
            Represents the abbreviation of the employee's locale.
        offset:
          type: string
          nullable: false
          maxLength: 9
          example: '05:30:00'
          description: |
            Represents the offset of the employee's timezone from UTC.
        timezone:
          type: string
          nullable: false
          maxLength: 19
          example: Asia/Kolkata
          description: |
            Represents the timezone of the employee.
      description: |
        Location and timezone settings of the employee.
    mileage_settings:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        mileage_rate_labels:
          type: array
          nullable: true
          items:
            type: string
            example: four_wheeler
          example:
            - four_wheeler
            - two_wheeler
        annual_mileage_of_user_before_joining_fyle:
          type: object
          nullable: true
          items:
            type: object
          example:
            two_wheeler: 44
      description: |
        Mileage settings of the employee.
    spender_employee_current_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user:
          $ref: '#/components/schemas/user_out_embed'
        code:
          type: string
          maxLength: 255
          nullable: true
          example: E84122
          description: |
            This field refers to any string that the client programs can use to refer to an employee's unique id.
            This could be any field such as an UUID from an Active Directory server or employee id in a HRMS system.
        joined_at:
          $ref: '#/components/schemas/joined_at'
        title:
          type: string
          maxLength: 255
          nullable: true
          example: Branch Manager
        business_unit:
          type: string
          maxLength: 255
          nullable: true
          example: Finance ops
        special_email:
          type: string
          maxLength: 127
          nullable: true
          example: receipts+admin1_mb4w@fyle.ai
          description: |
            Special email address for the employee used for receipt processing
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        location:
          type: string
          maxLength: 255
          nullable: true
          example: Bangalore Ofc
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        branch_account:
          type: string
          nullable: true
          example: '1234567890'
          description: |
            The Account number of the bank account of the Employee.
        branch_ifsc:
          type: string
          nullable: true
          maxLength: 11
          example: SBIN0007587
          description: |
            IFSC code of the bank account of the Employee. Must be a 11 digit alphanumeric code.
        department_id:
          $ref: '#/components/schemas/fk_string'
        department:
          $ref: '#/components/schemas/department_out_embed'
        level_id:
          $ref: '#/components/schemas/fk_string'
        level:
          nullable: true
          $ref: '#/components/schemas/level_out_embed'
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          description: |
            Mobile number of the employee
        is_mobile_verified:
          type: boolean
          nullable: true
          description: |
            Flag which indicates if mobile is verified or not.
          example: false
        mobile_verification_attempts_left:
          type: integer
          description: |
            Number of mobile verification attempts left for the employee
          example: 3
        approver_user_ids:
          type: array
          maxLength: 3
          nullable: true
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - uswoirwlwwg
            - uswlgwkgw42
          description: |
            List of IDs of users who are approvers for this employee. Maximum 3.
        approver_users:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/user_out_embed_nullable'
          description: |
            List of users who are approvers for this employee.
        locale:
          $ref: '#/components/schemas/locale'
        delegatees:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/delegatees'
          description: |
            List of users who are delegatees for this employee.
        mileage_settings:
          $ref: '#/components/schemas/mileage_settings'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        flattened_custom_field:
          $ref: '#/components/schemas/flattened_custom_field'
        commute_details_id:
          $ref: '#/components/schemas/fk_integer'
        commute_details:
          $ref: '#/components/schemas/commute_details'
        is_primary:
          type: boolean
          nullable: true
          description: |
            Indicates if this is the primary org employee record for the user
          example: true
    commute_location_not_nullable:
      type: object
      nullable: false
      properties:
        city:
          type: string
          nullable: true
          example: London
        state:
          type: string
          nullable: true
          example: London
        country:
          type: string
          nullable: true
          example: United Kingdom
        formatted_address:
          type: string
          nullable: false
          example: 221 Baker St, Marylebone, London, United Kingdom
        latitude:
          type: number
          nullable: false
          example: 12.971599
        longitude:
          type: number
          nullable: false
          example: 77.594566
    commute_details_in:
      type: object
      nullable: false
      additionalProperties: false
      description: |
        Commute details of the employee. This is used to deduct daily commute from the employee's mileage expenses.
      properties:
        home_location:
          allOf:
            - $ref: '#/components/schemas/commute_location_not_nullable'
          description: |
            Home location of the employee.
          nullable: false
        work_location:
          allOf:
            - $ref: '#/components/schemas/commute_location_not_nullable'
          description: |
            Work location of the employee.
          nullable: false
        distance:
          type: number
          nullable: false
          description: |
            Distance between home and work location of the employee.
          example: 10.55
        distance_unit:
          type: string
          nullable: false
          description: |
            Unit of distance.
          enum:
            - KM
            - MILES
          example: MILES
    spender_commute_details_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/fk_string'
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee.
          example: John Doe
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        commute_details:
          $ref: '#/components/schemas/commute_details'
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        is_mobile_verified:
          type: boolean
          nullable: true
          description: |
            Flag which indicates if mobile is verified or not.
          example: false
        sms_opt_out_source:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Represents if opt out is done by web app or sms
          example: WEB_APP
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        delegatees:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/delegatees'
          description: |
            List of users who are delegatees for this employee.
    spender_delegatees_post_in:
      type: object
      additionalProperties: false
      properties:
        delegatee_user_id:
          $ref: '#/components/schemas/fk_string'
        start_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time from which the delegation is active.
          nullable: false
        end_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Date and time till which the delegation is active. If null, delegation is active indefinitely.
          nullable: true
    spender_delegatees_post_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        user_id:
          $ref: '#/components/schemas/fk_string'
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee.
          example: John Doe
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
        commute_details:
          $ref: '#/components/schemas/commute_details'
        mobile:
          type: string
          nullable: true
          example: '+12131234567'
          items:
            $ref: '#/components/schemas/phone_number'
          description: |
            Mobile number of the employee
        is_mobile_verified:
          type: boolean
          nullable: true
          description: |
            Flag which indicates if mobile is verified or not.
          example: false
        sms_opt_out_source:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Represents if opt out is done by web app or sms
          example: WEB_APP
        is_enabled:
          allOf:
            - $ref: '#/components/schemas/is_enabled'
          description: |
            This field indicates whether the employee is enabled in the org.
        has_accepted_invite:
          $ref: '#/components/schemas/has_accepted_invite'
        delegatees:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/delegatees'
          description: |
            List of users who are delegatees for this employee.
    spender_delegators_out:
      type: object
      additionalProperties: false
      properties:
        user_id:
          $ref: '#/components/schemas/user_id'
        email:
          $ref: '#/components/schemas/email'
        full_name:
          type: string
          maxLength: 255
          description: |
            Represents the full name of the Employee.
          example: John Doe
    spender_delegatees_delete_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_integer'
        org_id:
          $ref: '#/components/schemas/org_id'
        delegator_user_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: uswoirwlwwg
          description: |
            User id of the delegator.
        delegatee_user_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: uswoirwlwwg
          description: |
            User id of the delegatee.
        start_date:
          $ref: '#/components/schemas/timestamptz_utc'
        end_date:
          $ref: '#/components/schemas/timestamptz_utc'
    employees_send_mobile_verification_code_post_out:
      type: object
      additionalProperties: false
      properties:
        to:
          type: string
          description: |
            Phone number to which the verification code was sent
          example: '+15017122661'
        channel:
          type: string
          description: |
            Channel used for sending the verification code
          example: sms
        status:
          type: string
          description: |
            Current status of the verification attempt
          example: pending
        valid:
          type: boolean
          description: |
            Whether the verification is valid
          example: false
        date_created:
          type: string
          format: date-time
          description: |
            Date and time when the verification was created
          example: '2015-07-30T20:00:00Z'
        attempts_left:
          type: number
          description: |
            Number of attempts left in a 24 hour window
          example: 4
    employee_check_mobile_verification_code_in:
      type: object
      properties:
        otp:
          type: string
          description: |
            OTP received on the mobile number.
      required:
        - otp
    spender_employee_settings_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          example: ous7FnPJtFRmN
          description: Unique identifier for the employee settings
        employee_id:
          $ref: '#/components/schemas/id_string'
          example: ouLdnA486RYD
          description: Unique identifier of the employee
        org_id:
          $ref: '#/components/schemas/org_id'
          example: org123
          description: Unique identifier of the organization
        created_at:
          $ref: '#/components/schemas/created_at'
          example: '2019-10-18T07:01:55.756Z'
          description: Timestamp when the settings were created
        updated_at:
          $ref: '#/components/schemas/updated_at'
          example: '2025-04-20T04:14:26.820Z'
          description: Timestamp when the settings were last updated
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of category ids that the employee has access to
        cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of cost centers that the employee has access to
        project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of projects that the employee has access to
        per_diem_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of per diem rates that the employee has access to
        mileage_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example: []
          description: List of mileage rate ids that the employee has access to
        insta_fyle_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for InstaFyle receipt scanning and data extraction
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether InstaFyle is allowed for the employee
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether InstaFyle is enabled for the employee
            static_camera_overlay_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether static camera overlay is enabled for receipt scanning
            extract_fields:
              type: array
              nullable: true
              items:
                type: string
              example:
                - AMOUNT
                - CURRENCY
                - CATEGORY
                - TXN_DT
              description: List of fields to extract from receipts
        notification_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for email and push notifications
          properties:
            email_allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether email notifications are allowed
            email_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether email notifications are enabled
            email_unsubscribed_events:
              type: array
              nullable: true
              items:
                type: string
              example: []
              description: List of events for which email notifications are unsubscribed
            push_allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether push notifications are allowed
            push_enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether push notifications are enabled
            push_unsubscribed_events:
              type: array
              nullable: true
              items:
                type: string
              example:
                - EADVANCE_REQUESTS_CREATED
                - EADVANCE_REQUESTS_UPDATED
                - EADVANCE_REQUESTS_INQUIRY
              description: List of events for which push notifications are unsubscribed
            notify_user:
              type: boolean
              nullable: true
              example: true
              description: Whether to notify the user about events
            notify_delegatee:
              type: boolean
              nullable: true
              example: true
              description: Whether to notify the delegatee about events
        mileage_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for mileage tracking and rates
          properties:
            mileage_rate_labels:
              type: object
              nullable: true
              example: null
              description: Labels for different mileage rates
            annual_mileage_of_user_before_joining_fyle:
              type: object
              nullable: true
              example: {}
              description: Annual mileage limit for user before joining Fyle
        expense_form_autofills:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for automatic form filling in expenses
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether expense form autofill is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether expense form autofill is enabled
        data_extractor_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for data extraction from receipts
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether data extraction is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether data extraction is enabled
        in_app_chat_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for in-app chat functionality
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether in-app chat is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether in-app chat is enabled
            restore_id:
              type: string
              nullable: true
              example: null
              description: ID for restoring chat session
        payment_mode_settings:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for payment modes
          properties:
            allowed:
              type: boolean
              nullable: true
              example: true
              description: Whether payment mode selection is allowed
            enabled:
              type: boolean
              nullable: true
              example: true
              description: Whether payment mode selection is enabled
            allowed_payment_modes:
              type: array
              nullable: true
              items:
                type: string
              example:
                - PERSONAL_ACCOUNT
                - COMPANY_ACCOUNT
              description: List of payment modes allowed for the employee
        locale:
          type: object
          nullable: true
          additionalProperties: false
          description: Settings for user's locale and timezone
          properties:
            timezone:
              type: string
              nullable: true
              example: Asia/Kolkata
              description: User's timezone
            abbreviation:
              type: string
              nullable: true
              example: IST
              description: Timezone abbreviation
            offset:
              type: string
              nullable: true
              example: '05:30:00'
              description: Timezone offset from UTC
        is_personal_cards_enabled:
          type: boolean
          example: true
          description: Whether personal card usage is enabled
        default_project_id:
          type: string
          nullable: true
          example: null
          description: Default project ID for expenses
        default_payment_mode:
          type: string
          nullable: true
          example: null
          description: Default payment mode for expenses
        default_vehicle_type:
          type: string
          nullable: true
          example: null
          description: Default vehicle type for mileage expenses
    spender_employee_settings_in:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: Unique identifier for the employee settings (optional)
        employee_id:
          $ref: '#/components/schemas/id_string'
          description: Unique identifier of the employee (optional)
        cost_center_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: List of cost centers that the employee has access to
        project_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: List of projects that the employee has access to
        per_diem_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: List of per diem rates that the employee has access to
        mileage_rate_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: List of mileage rates that the employee has access to
        category_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: List of categories that the employee has access to
        locale:
          type: object
          additionalProperties: false
          description: Settings for user's locale and timezone
          properties:
            timezone:
              type: string
              description: User's timezone
            abbreviation:
              type: string
              description: Timezone abbreviation
            offset:
              type: string
              description: Timezone offset from UTC
        insta_fyle_settings:
          type: object
          additionalProperties: false
          description: Settings for InstaFyle receipt scanning and data extraction
          properties:
            allowed:
              type: boolean
              description: Whether InstaFyle is allowed for the employee
            enabled:
              type: boolean
              description: Whether InstaFyle is enabled for the employee
            static_camera_overlay_enabled:
              type: boolean
              description: Whether static camera overlay is enabled for receipt scanning
            extract_fields:
              type: array
              items:
                type: string
              description: List of fields to extract from receipts
        notification_settings:
          type: object
          additionalProperties: false
          description: Settings for email and push notifications
          properties:
            email_allowed:
              type: boolean
              description: Whether email notifications are allowed
            email_enabled:
              type: boolean
              description: Whether email notifications are enabled
            email_unsubscribed_events:
              type: array
              items:
                type: string
              description: List of events for which email notifications are unsubscribed
            push_allowed:
              type: boolean
              description: Whether push notifications are allowed
            push_enabled:
              type: boolean
              description: Whether push notifications are enabled
            push_unsubscribed_events:
              type: array
              items:
                type: string
              description: List of events for which push notifications are unsubscribed
            notify_user:
              type: boolean
              description: Whether to notify the user about events
            notify_delegatee:
              type: boolean
              description: Whether to notify the delegatee about events
        expense_form_autofills:
          type: object
          additionalProperties: false
          description: Settings for automatic form filling in expenses
          properties:
            allowed:
              type: boolean
              description: Whether expense form autofill is allowed
            enabled:
              type: boolean
              description: Whether expense form autofill is enabled
        data_extractor_settings:
          type: object
          additionalProperties: false
          description: Settings for data extraction from receipts
          properties:
            allowed:
              type: boolean
              description: Whether data extraction is allowed
            enabled:
              type: boolean
              description: Whether data extraction is enabled
        in_app_chat_settings:
          type: object
          additionalProperties: false
          description: Settings for in-app chat functionality
          properties:
            allowed:
              type: boolean
              description: Whether in-app chat is allowed
            enabled:
              type: boolean
              description: Whether in-app chat is enabled
            restore_id:
              type: string
              nullable: true
              description: ID for restoring chat session
        payment_mode_settings:
          type: object
          additionalProperties: false
          description: Settings for payment modes
          properties:
            allowed:
              type: boolean
              description: Whether payment mode selection is allowed
            enabled:
              type: boolean
              description: Whether payment mode selection is enabled
            allowed_payment_modes:
              type: array
              items:
                type: string
              description: List of payment modes allowed for the employee
        is_personal_cards_enabled:
          type: boolean
          description: Whether personal card usage is enabled
        default_project_id:
          type: string
          nullable: true
          description: Default project ID for expenses
        default_payment_mode:
          type: string
          nullable: true
          description: Default payment mode for expenses
        default_vehicle_type:
          type: string
          nullable: true
          description: Default vehicle type for mileage expenses
    virtual_card_out:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: viwownwrng
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          type: string
          maxLength: 255
          description: |
            The unique id of an user to whom the card is assigned
          example: uswjwgnwwgo
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        last_five:
          type: string
          description: |
            Specifies the last 5 digits of the card.
          example: '4543'
        state:
          type: string
          description: |
            Status of the virtual card
          nullable: true
          enum:
            - ACTIVE
            - PREACTIVE
            - INACTIVE
            - EXPIRED
            - DELETED
            - USED
            - null
          example: ACTIVE
        expiry_date:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Specifies the expiry date of the card.
          example: '2022-02-01'
        amex_account_id:
          type: string
          description: |
            The unique id of the amex account to which the card is assigned
          example: amactr7NhV9Qn6
        valid_from_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Specifies the valid from date of the card, ie from when the card would be active.
          example: '2022-02-01'
        valid_till_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Specifies the valid till date of the card, ie till when the card would be active.
          example: '2022-02-01'
        creator_user_id:
          type: string
          description: |
            The unique id of an user who created the card.
          example: useradfasd
        virtual_card_user_id:
          type: string
          description: |
            This id refers to the virtual card user to whom the virtual card is assigned.
          example: vcg2Bl78jstf
        nick_name:
          type: string
          description: |
            Represents user defined nick name associated with the virtual card for easier recognition.
          example: john
      required:
        - id
        - org_id
        - user_id
        - created_at
        - updated_at
        - last_five
        - state
        - expiry_date
        - amex_account_id
        - valid_from_at
        - valid_till_at
        - creator_user_id
        - virtual_card_user_id
        - nick_name
    virtual_cards_id_in:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            The unique id of the virtual card
          example: viwownwrng
      required:
        - id
    virtual_cards_get_current_balance_out:
      type: object
      properties:
        current_amount:
          type: number
          description: |
            The current balance amount of the virtual card
          example: 1000
      required:
        - current_amount
    virtual_cards_show_card_details_out:
      type: object
      properties:
        full_card_number:
          type: string
          description: |
            Full card number of the virtual card
          example: 1234567890123456
        expiry_date:
          allOf:
            - $ref: '#/components/schemas/timestamptz_utc'
          description: |
            Specifies the expiry date of the card.
          example: '2022-02-01'
        cvv:
          type: string
          description: |
            CVV of the virtual card
          example: 123
      required:
        - full_card_number
        - expiry_date
        - cvv
    tax_group_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tgwfjbgqo32
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the tax_group.
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 18
          description: percentage of tax levied.
        is_enabled:
          $ref: '#/components/schemas/is_enabled'
        code:
          $ref: '#/components/schemas/code'
    file_in:
      type: object
      required:
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
    file_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - INTEGRATION
            - RECEIPT
          description: |
            Indicates whether this file original size or encrypted or its thumbnail image.
          example: RECEIPT
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          nullable: true
          type: string
          description: |
            Link to upload contents of this file
    file_generate_urls_action_in:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    file_generate_urls_action_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file
        upload_url:
          nullable: true
          type: string
          description: |
            Link to upload contents of this file
    file_delete_action_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    file_out_download_url:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        content_type:
          type: string
          example: text/csv
        download_url:
          type: string
          description: |
            Link to download this file.
    expense_policy_limit_type:
      nullable: true
      type: string
      enum:
        - INDIVIDUAL
        - DAILY
        - NIGHTLY
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - HALF_YEARLY
        - YEARLY
        - LIFETIME
        - null
      example: MONTHLY
    contains_operator:
      nullable: true
      type: string
      enum:
        - IN
        - NOT_IN
        - null
      description: |
        Value signifying the operator for the field
      example: IN
    policy_payment_modes:
      nullable: true
      type: array
      items:
        type: string
        enum:
          - PERSONAL_CASH_ACCOUNT
          - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
          - COMPANY_ACCOUNT
          - null
      example: PERSONAL_CASH_ACCOUNT
    vehicle_type:
      type: string
      enum:
        - bicycle
        - electric_car
        - four_wheeler
        - four_wheeler1
        - four_wheeler2
        - four_wheeler3
        - four_wheeler4
        - two_wheeler
      example: electric_car
    expense_policy_out:
      type: object
      additionalProperties: true
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This represents the id of the expense policy rule.
          example: tpr12345xyz
        description:
          allOf:
            - $ref: '#/components/schemas/description'
          description: |
            This represents the description of the expense policy rule.
          example: Receipt is mandatory for expense above $50
        source:
          type: string
          enum:
            - WEBAPP_POLICY_FORM
            - WEBAPP_POLICY_JSON
            - WEBAPP_EXPENSE_RECEIPT_AMOUNT_LIMIT
            - WEBAPP_EXPENSE_MILEAGE_SLAB_RATE
            - WEBAPP_PROJECT_APPROVAL
            - DEFAULT_PRIMARY_APPROVER_POLICY
          description: |
            This represents the source of the expense policy rule, i.e. from where it was created.
          example: WEBAPP_POLICY_FORM
        is_enabled:
          type: boolean
          description: |
            Whether the policy rule is active or not.
        is_retired:
          type: boolean
          description: |
            Whether the policy rule is retired and can't be made active again.
        is_approver_policy:
          type: boolean
          description: |
            Whether the policy rule adds an approver to the expense on violation.
        approver_order:
          type: number
          nullable: true
          description: |
            This number indicates the order of the approver expense policy rule in the defined approval sequence. For non-approver policies, this field will be null.
          minimum: 1
          example: 3
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        expense_limit_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/expense_policy_limit_type'
          description: |
            Value signifying the limit type of the expense policy.
        expense_currency:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/currency'
            - $ref: '#/components/schemas/null_field'
          description: |
            The three-letter currency code following ISO standard <a
            href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
        expense_amount_max:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            If an expense's amount exceeds this value, this policy rule will be violated for that expense.
          example: 10000
        expense_amount_min:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            If an expense's amount falls behind this value, this policy rule will be violated for that expense.
          example: 500
        expense_fiscal_start_month:
          nullable: true
          type: number
          description: |
            Month number of start of fiscal year.
          example: 4
          minimum: 1
          maximum: 12
        expense_distance_max:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/distance'
          description: |
            If an expense's distance exceeds this value, this policy rule will be violated for that expense.
          example: 10000
        expense_distance_min:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/distance'
          description: |
            If an expense's distance falls behind this value, this policy rule will be violated for that expense.
          example: 500
        expense_category_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of category ids considered by this policy rule.
          example:
            - 2222
            - 1221
        expense_category_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: |
            - If it is set to IN, this policy rule will be applicable to all the expenses that belong to any of the categories listed in the field `expense_category_ids`.
            - If it is set to NOT_IN, this policy rule will be applicable to all the expenses that do not belong to any of the categories listed in the field `expense_category_ids`.
        expense_project_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of project ids considered by this policy rule.
          example:
            - 1234
            - 5678
        expense_project_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: |
            - If it is set to IN, this policy rule will be applicable to all the expenses that belong to any of the projects listed in the field `expense_project_ids`.
            - If it is set to NOT_IN, this policy rule will be applicable to all the expenses that do not belong to any of the projects listed in the field `expense_project_ids`.
        expense_cost_center_ids:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/id_integer'
          description: |
            List of cost centers ids considered by this policy rule.
          example:
            - 1987
            - 3456
        expense_cost_center_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
          description: |
            - If it is set to IN, this policy rule will be applicable to all the expenses that belong to any of the cost centers listed in the field `expense_cost_center_ids`.
            - If it is set to NOT_IN, this policy rule will be applicable to all the expenses that do not belong to any of the cost centers listed in the field `expense_cost_center_ids`.
        expense_allowed_exchange_rate_difference_percentage:
          nullable: true
          type: number
          description: |
            Allowed percentage difference for exchange rates beyond which this policy rule will be violated.
          example: 10
          minimum: 0
          maximum: 100
        expense_allowed_distance_difference_percentage:
          nullable: true
          type: number
          description: |
            Allowed distance percentage difference beyond which this policy rule will be violated.
          example: 8
          minimum: 0
          maximum: 100
        expense_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: |
            Custom fields (if any)
        expense_custom_fields_op:
          nullable: true
          type: object
          description: |
            Operator for the expense_custom_fields.
          properties:
            field_name:
              type: string
        expense_locations:
          nullable: true
          description: |
            Location of expense considered by this policy rule.
          type: array
          items:
            $ref: '#/components/schemas/location'
        expense_locations_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        expense_creation_delay_days_max:
          nullable: true
          type: number
          example: 12
          description: |
            This value decides how delayed an expense creation can be. If the expense is created after this many days of spend date, this policy rule will be violated.
        expense_without_receipt_allowed:
          type: boolean
          description: |
            If this is set to false, then for all such expenses that doesn't have receipt, this policy rule will be violated.
          default: true
          example: true
        expense_spent_at_max:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: |
            If an expense's spend date exceeds this value, this policy rule will be violated for that expense.
        expense_spent_at_min:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: |
            If an expense's spend date falls behind this value, this policy rule will be violated for that expense.
        expense_payment_modes:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/policy_payment_modes'
          description: |
            Payment mode for expense to be considered by the policy rule.
        expense_payment_modes_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        expense_without_ccc_match_allowed:
          type: boolean
          description: |
            If this is set to false, then for all such expenses that are not matched to corporate credit card transaction, this policy rule will be violated.
          default: true
          example: true
        expense_include_foreign_currency:
          type: boolean
          description: |
            If this is set to true, then for all such expenses that are created in foreign currency, this policy rule will be applicable.
          default: false
          example: true
        expense_flight_travel_class:
          nullable: true
          type: array
          description: |
            This field is applicable only for Flight category. <br> List of travel classes considered by this policy rule.
          items:
            type: string
          example:
            - BUSINESS
            - ECONOMY
        expense_train_travel_class:
          nullable: true
          type: array
          description: |
            This field is applicable only for Train category. <br> List of travel classes considered by this policy rule.
          items:
            type: string
          example:
            - AC First Class
            - Second Sitting
        expense_vehicle_type:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/vehicle_type'
            - $ref: '#/components/schemas/null_field'
          description: |
            Vehicle type considered by this policy rule.
        expense_annual_distance_max:
          nullable: true
          type: number
          example: 1200
          description: |
            If an expense's annual distance exceeds this value, this policy rule will be violated for that expense.
        employee_level_ids:
          nullable: true
          type: array
          description: |
            Employee level ids considered by this policy rule.
          items:
            type: string
          example:
            - lvl1sdfad
            - lvl2sdfas
        employee_level_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_custom_fields:
          allOf:
            - $ref: '#/components/schemas/custom_fields'
          description: |
            Custom fields (if any)
        employee_custom_fields_op:
          nullable: true
          type: object
          description: |
            Operator for the employee_custom_fields.
          properties:
            field_name:
              type: string
        employee_department_ids:
          nullable: true
          type: array
          description: |
            Employee department ids considered by this policy rule.
          items:
            type: string
          example:
            - dept1asdfa
            - dept2adfad
        employee_department_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_locations:
          nullable: true
          description: |
            Location of employees considered by this policy rule. <br>
            If this is set, then for all such employees whose location is in `employee_locations`, this policy rule will be applicable.
          type: array
          items:
            $ref: '#/components/schemas/location'
        employee_locations_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_user_ids:
          nullable: true
          type: array
          description: |
            Employee user ids considered by this policy rule.
          items:
            type: string
          example:
            - usabcds1
            - usabcds2
        employee_user_ids_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        employee_titles:
          nullable: true
          type: array
          description: |
            Employee titles considered by this policy rule.
          items:
            type: string
          example:
            - CEO
            - Manager
        employee_titles_op:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/contains_operator'
        action_flag:
          type: boolean
          description: |
            If it is set to true, then the expense(s) violating this policy rule, will be flagged.
          default: false
          example: true
        action_show_warning:
          type: boolean
          description: |
            If it is set to true, then a warning is shown to the employee, whenever he attempts to create an expense that violates this policy rule.
          default: false
          example: true
        action_make_unreportable:
          type: boolean
          description: |
            If it is set to true, then the expense(s) violating this policy rule, will be made unreportable. <br>
            (Expense will be created but employee will not be able to add it to report).
          default: false
          example: true
        action_remove_employee_approver1:
          type: boolean
          description: |
            If this is set to true, then the employee's first approver will be removed from the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_add_employee_approver2:
          type: boolean
          description: |
            If this is set to true, then the employee's second approver will be added to the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_add_employee_approver3:
          type: boolean
          description: |
            If this is set to true, then the employee's third approver will be added to the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_add_project_approver1:
          type: boolean
          description: |
            If this is set to true, then the project's first approver will be added to the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_add_project_approver2:
          type: boolean
          description: |
            If this is set to true, then the project's second approver will be added to the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_add_department_head_approver:
          type: boolean
          description: |
            If this is set to true, then the employee's department approver will be added to the report that contains expense(s) violating this policy rule.
          default: false
          example: true
        action_cap_amount:
          type: boolean
          description: |
            If it is set to true, then expense's amount will be capped to `expense_amount_max` when the expense(s) violates this policy rule.
          default: false
          example: true
        action_add_approver_user_ids:
          nullable: true
          type: array
          description: |
            List of approver user ids that will be added to the report that contains expense(s) violating this policy rule.
          items:
            type: string
          example:
            - usabcds3
            - usabcds4
        action_override_distance_slab_rate:
          nullable: true
          type: number
          description: |
            When annual mileage distance limit exceeds `expense_annual_distance_max` for `expense_vehicle_type`, this rate will be applied afterwards.
          example: 20
        creator_user_id:
          $ref: '#/components/schemas/user_id'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
    expense_policy_rule_embed:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          example: tpr1234abcd
          description: This represents the id of the expense policy rule that is violated for this expense.
        description:
          anyOf:
            - $ref: '#/components/schemas/description'
          description: |
            This represents the description of the expense policy rule that is violated for this expense.
          example: Receipt is mandatory for expense above $50
        action_show_warning:
          type: boolean
          description: |
            A true value here means that policy calculation suggests showing a warning when the user attempts to create an expense that violates this expense policy rule.
          example: true
        action_make_unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means that policy calculation suggests making the expense unreportable when the user attempts to create an expense that violates this expense policy rule.
          example: true
    expense_policy_expenses_query_object_params:
      type: object
      properties:
        category_id:
          type: string
          description: |
            Category ids query param to find the list of expenses.
          example: in.(60506)
        project_id:
          type: string
          description: |
            Project ids query param to find the list of expenses.
          example: in.(261155)
        cost_center_id:
          type: string
          description: |
            Cost center ids query param to find the list of expenses.
          example: in.(7475)
        currency:
          type: string
          description: |
            Currency query param to find the list of expenses.
          example: eq.USD
        mileage_rate_id:
          type: string
          description: |
            Mileage rate query param to find the list of expenses.
          example: eq.2
        employee_id:
          type: string
          description: |
            Employee id query param to find the list of expenses.
          example: eq.ouNSnadfaLA
    expense_policy_expenses_query_object:
      type: object
      description: |
        An expense may be violating an expense policy rule due to a group of other expenses.
        These query params can be used to fetch those expenses because of which this expense is causing a violation. <br>
        Below params should be ANDed to get the correct list of violating expenses.
      properties:
        limit_start_date:
          type: string
          description: |
            Spend start date query param to find the list of violating expenses.
          example: '2021-12-01'
        limit_end_date:
          type: string
          description: |
            Spend end date query param to find the list of violating expenses.
          example: '2022-03-31'
        params:
          $ref: '#/components/schemas/expense_policy_expenses_query_object_params'
    expense_policy_individual_desired_states:
      type: object
      properties:
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        approver_policy_order:
          type: integer
          nullable: true
          description: |
            This represents the order of the approver policy related to this individual desired state record.
            If the policy does not add any approver, this field will be null.
          example: 1
        approver_source:
          type: string
          enum:
            - PRIMARY_APPROVER
            - SECONDARY_APPROVER_1
            - SECONDARY_APPROVER_2
            - PROJECT_APPROVER_1
            - PROJECT_APPROVER_2
            - DEPARTMENT_HEAD_APPROVER
            - EMAIL_APPROVER
            - null
          nullable: true
          description: |
            This represents the type of approver(source) that was added by the approver policy related to this individual
            desired state record. If the policy does not add any approver, this field will be null.
          example: PROJECT_APPROVER_1
        run_status:
          nullable: false
          type: string
          enum:
            - VIOLATED_ACTION_SUCCESS
            - VIOLATED_ACTION_FAILURE
            - UNVIOLATED
          description: |
            This represent the status of policy computation for an expense against the policy. If the state is
            `UNVIOLATED`, it means that the expense is not violating the policy. If the state is `VIOLATION_ACTION_SUCCESS`,
            it means that expense is violating the policy and action stated in the object will be applied to
            expense. However, if the state is `VIOLATION_ACTION_FAILURE`, it means that the policy is violated for the
            expense but since some approver was missing or not setup properly, it will fail to take action
            on the expense
          example: SUCCESS
        run_result:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
            case some approver was not setup properly for the given violation, this array will contain description of
            missing approvers. For example, Department approver, Project head, etc.
          example:
            - flag the expense
            - cap the amount
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        expense_policy_rule_id:
          type: string
          description: |
            This represents the id of the expense policy rule.
          example: tprabsdfSYqd
        rule:
          $ref: '#/components/schemas/expense_policy_rule_embed'
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        expenses_query_object_params:
          nullable: true
          $ref: '#/components/schemas/expense_policy_expenses_query_object'
    expense_policy_final_desired_state:
      type: object
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        flag:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense should be flagged.
          example: true
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means, that as per policy calculation this expense should be made unreportable.
          example: true
        is_receipt_mandatory:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense requires receipt.
          example: true
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        remove_employee_approver1:
          type: boolean
          description: |
            A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
          example: true
        run_status:
          nullable: false
          type: string
          enum:
            - SUCCESS
            - FAILURE
          description: |
            This represent the run status of the policy.
          example: SUCCESS
        run_summary:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense.
          example:
            - flag the expense
            - cap the amount
    expense_policy_states_out:
      type: object
      additionalProperties: false
      properties:
        expense_id:
          type: string
          description: |
            This represents the id of the expense.
          example: txabsdfSYqd
        individual_desired_states:
          type: array
          items:
            $ref: '#/components/schemas/expense_policy_individual_desired_states'
        final_desired_state:
          $ref: '#/components/schemas/expense_policy_final_desired_state'
    expense_check_policies_in:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This represents the id of the expense.<br><br>
            _Note: This field is required when you are updating an already created expense and want to check it again against the policy rules before saving the expense._
          example: tx0agOdICdbV
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          description: |
            It signifies when this expense was made. This date cannot be in future.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it against the policy rules before saving the expense._
        source:
          $ref: '#/components/schemas/source'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          allOf:
            - $ref: '#/components/schemas/foreign_amount'
          description: |
            Amount value of the expense, in original currency i.e the currency in which the expense was initially created.
        claim_amount:
          allOf:
            - $ref: '#/components/schemas/claim_amount'
          description: |
            The expense amount as claimed by user.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it against the policy rules before saving the expense._
          example: 1984.18
        purpose:
          type: string
          example: Team lunch
          description: |
            Purpose of this expense.
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            This represents the cost_center's id given by Fyle during creation of cost center
            for which this expense is created.
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            This represents the category's id given by Fyle during creation of category
            for which this expense is created.
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            This represents the project's id given by Fyle during creation of project
            for which this expense is created.
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          description: |
            This represents the source account's id given by Fyle during creation of account type
            of user for which this expense is created.
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          description: |
            This represents the tax's group id given by Fyle during creation of tax group
            for which this expense is created.
          nullable: true
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: |
            Specific to per diem related expenses. Start date from which per diem claim is made.
        ended_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: |
            Specific to per diem related expenses. End date until which per diem claim is made.
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        num_files:
          type: integer
          description: |
            Number of files/reciepts attached to expense
          example: 4
        is_matching_ccc:
          type: boolean
          description: |
            Set this field to true if expense matches any card expense
          default: false
          example: false
        mileage_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            Specific to mileage expense. This represents the Mileage's rate id given by Fyle
            during creation of mileage rate for which this expense is created.
          nullable: true
          example: 9080
        per_diem_rate_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            Specific to per diem expense. This represents the per diem's rate id given by Fyle
            during creation of per diem rate for which this expense is created.
          nullable: true
          example: 583
        per_diem_num_days:
          type: number
          nullable: true
          description: |
            Specific to per diem related expenses. Number of days for which per diem claim is made.
          example: 2
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
        mileage_calculated_distance:
          type: number
          nullable: true
          description: Specific to mileage expense. Distance computed by Fyle for mileage expenses.
        mileage_calculated_amount:
          type: number
          nullable: true
          description: Specific to mileage expense. Amount computed by Fyle for mileage expenses.
    expense_check_policies_individual_desired_states:
      type: object
      properties:
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        approver_policy_order:
          type: integer
          nullable: true
          description: |
            This represents the order of the approver policy related to this individual desired state record.
            If the policy does not add any approver, this field will be null.
          example: 1
        approver_source:
          type: string
          enum:
            - PRIMARY_APPROVER
            - SECONDARY_APPROVER_1
            - SECONDARY_APPROVER_2
            - PROJECT_APPROVER_1
            - PROJECT_APPROVER_2
            - DEPARTMENT_HEAD_APPROVER
            - EMAIL_APPROVER
            - null
          nullable: true
          description: |
            This represents the type of approver(source) that was added by the approver policy related to this individual
            desired state record. If the policy does not add any approver, this field will be null.
          example: PROJECT_APPROVER_1
        expense_policy_rule_id:
          type: string
          description: |
            This represents the id of the expense policy rule.
          example: tprabsdfSYqd
        expense_policy_rule:
          $ref: '#/components/schemas/expense_policy_rule_embed'
        run_status:
          nullable: false
          type: string
          enum:
            - VIOLATED_ACTION_SUCCESS
            - VIOLATED_ACTION_FAILURE
            - UNVIOLATED
          description: |
            This represents the status of policy computation for the input expense object against the policy represented by `expense_policy_rule_id`.
            If the state is `UNVIOLATED`, it means that the expense is not violating this policy. If the state is `VIOLATION_ACTION_SUCCESS`,
            it means that the expense is violating this policy and action stated in the object will be applied to the expense when it is saved.
            However, if the state is `VIOLATION_ACTION_FAILURE`, it means that this policy is violated for the expense but since some approver was
            missing or not set up properly, it will fail to take action on the expense when it is saved.
          example: SUCCESS
        run_result:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
            case some approver was not setup properly for the given violation, this array will contain description of
            missing approvers. For example, Department approver, Project head, etc.
          example:
            - flag the expense
            - cap the amount
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        expenses_query_object_params:
          nullable: true
          $ref: '#/components/schemas/expense_policy_expenses_query_object'
    expense_check_policies_final_desired_state:
      type: object
      properties:
        flag:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense should be flagged.
          example: true
        amount:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/amount'
            - $ref: '#/components/schemas/null_field'
          description: |
            Amount that the policy calculation suggests for this expense.
          example: 500
        unreportable:
          type: boolean
          nullable: false
          description: |
            A true value here means, that as per policy calculation this expense should be made unreportable.
          example: true
        is_receipt_mandatory:
          type: boolean
          description: |
            A true value here means, that as per policy calculation this expense requires receipt.
          example: true
        add_approver_user_ids:
          nullable: true
          type: array
          items:
            type: string
          description: |
            List of approver ids that the policy calculation suggests adding to report that contains this expense.
          example:
            - usBdsdfscl
            - usLSsdfwqt
        remove_employee_approver1:
          type: boolean
          description: |
            A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
          example: true
        run_status:
          nullable: false
          type: string
          enum:
            - SUCCESS
            - FAILURE
          description: |
            This represent the run status of the policy.
          example: SUCCESS
        run_summary:
          type: array
          items:
            type: string
          description: |
            List of human-readable action summaries that the policy calculation suggests for this expense.
          example:
            - flag the expense
            - cap the amount
    expense_check_policies_out:
      type: object
      additionalProperties: false
      properties:
        individual_desired_states:
          type: array
          items:
            $ref: '#/components/schemas/expense_check_policies_individual_desired_states'
        final_desired_state:
          $ref: '#/components/schemas/expense_check_policies_final_desired_state'
    items:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Expense id of the expense to be updated.
          example: txwownwrng
        merchant:
          $ref: '#/components/schemas/merchant'
          nullable: true
          description: |
            String denoting the name of the merchant to which the expense was made.
          example: Uber
        purpose:
          type: string
          nullable: true
          description: |
            Purpose of this expense.
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          description: |
            This represents the cost_center's id given by Fyle during creation of cost center
            for which this expense is created.
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: false
          description: |
            This represents the category's id given by Fyle during creation of category
            for which this expense is created.
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          description: |
            This represents the project's id given by Fyle during creation of project
            for which this expense is created.
          example: 92895
        is_billable:
          $ref: '#/components/schemas/is_billable'
          nullable: true
          description: This fields marks whether a given expense is billable or not.
          example: true
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
          nullable: false
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
          nullable: true
          description: |
            Start date for travel or per diem related expenses.
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
          nullable: true
          description: |
            End date for travel or per diem related expenses.
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
          nullable: false
          description: |
            This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
            index 0 holds onward journey class, index 1 holds return journey travel class.
          example:
            - ECONOMY
            - BUSINESS
        locations:
          $ref: '#/components/schemas/locations'
          nullable: false
          description: |
            This field will be present for travel related categories.
            For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
        distance:
          $ref: '#/components/schemas/distance'
          nullable: true
          description: Actual distance travelled by employee in travel related expenses.
        distance_unit:
          enum:
            - KM
            - MILES
            - null
          nullable: true
          description: Unit of distance travelled.
          example: MILES
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
    spender_check_policies_bulk_in:
      type: array
      additionalProperties: false
      description: |
        Array of expenses to be validated against expense policy rules in one request.
      items:
        $ref: '#/components/schemas/items'
    expense_check_policies_bulk_out:
      type: array
      additionalProperties: false
      items:
        type: object
        properties:
          id:
            allOf:
              - $ref: '#/components/schemas/id_string'
            example: tx0agOdICdbV
          individual_desired_states:
            type: array
            items:
              $ref: '#/components/schemas/expense_check_policies_individual_desired_states'
          final_desired_state:
            $ref: '#/components/schemas/expense_check_policies_final_desired_state'
    spender_automate_report_submission_next_at_out:
      type: object
      required:
        - next_at
      properties:
        next_at:
          type: string
          format: date-time
          nullable: true
          description: Signifies the time when the next automate report submission will run for the organization. Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
          example: '2021-06-01T13:14:54.804+00:00'
    recurring_expense_out:
      type: object
      additionalProperties: false
      required:
        - id
        - org_id
        - user_id
        - type
        - expense_details
        - schedule_config
        - is_enabled
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Unique ID of the recurring expense automation.
          example: rec1a2b3c4d5e6
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        type:
          type: string
          enum:
            - EXPENSE
            - MILEAGE
          description: |
            Type of recurring expense automation.
            - EXPENSE: Regular expense type
            - MILEAGE: Mileage-based expense type
          example: EXPENSE
        expense_details:
          type: object
          nullable: false
          description: |
            Expense template details used for creating recurring expenses.
            Contains all the expense fields that will be applied to each generated expense.
          example:
            claim_amount: 100
            category_id: 115254
            merchant: Monthly Coffee Subscription
            purpose: Recurring coffee subscription for office
            source: WEBAPP
            is_reimbursable: true
            currency: USD
        schedule_config:
          $ref: '#/components/schemas/schedule_config'
        is_enabled:
          type: boolean
          description: |
            Whether the recurring expense automation is currently active.
            When false, no new expenses will be created automatically.
          example: true
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    recurring_expense_in:
      type: object
      additionalProperties: false
      required:
        - type
        - expense_details
        - schedule_config
      properties:
        type:
          type: string
          enum:
            - EXPENSE
            - MILEAGE
          description: |
            Type of recurring expense automation.
            - EXPENSE: Regular expense type
            - MILEAGE: Mileage-based expense type
          example: EXPENSE
        expense_details:
          allOf:
            - $ref: '#/components/schemas/spender_expense_in'
          description: |
            Expense template details that will be used to create the recurring expenses.
            This should match the structure of spender expense input.
        schedule_config:
          $ref: '#/components/schemas/schedule_config'
    recurring_expense_disable_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            ID of the recurring expense automation to disable.
          example: rec1a2b3c4d5e6
    spender_expense_check_mandatory_fields_in:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This represents the id of the expense.<br><br>
            _Note: This field is required when you are updating an already created expense and want to check it again for missing mandatory fields._
          example: tx0agOdICdbV
        spent_at:
          allOf:
            - $ref: '#/components/schemas/spent_at'
          description: |
            It signifies when this expense was made. This date cannot be in future.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
        source:
          $ref: '#/components/schemas/source'
        merchant:
          $ref: '#/components/schemas/merchant'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        claim_amount:
          allOf:
            - $ref: '#/components/schemas/claim_amount'
          description: |
            The expense amount as claimed by user.<br><br>
            _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
          example: 1984.18
        purpose:
          type: string
          example: Team lunch
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        num_files:
          type: integer
          description: |
            Number of files/reciepts attached to expense
          example: 4
        invoice_number:
          type: string
          nullable: true
          maxLength: 255
          description: |
            Invoice number of the expense.
          example: 123456
    expense_check_mandatory_fields_out:
      type: object
      additionalProperties: false
      required:
        - missing_amount
        - missing_currency
        - missing_receipt
        - missing_expense_field_ids
      properties:
        missing_amount:
          type: boolean
          description: |
            If this is set to true, then you need to send amount field with expense object.
          example: false
        missing_currency:
          type: boolean
          description: |
            If this is set to true, then you need to send currency field with expense object.
          example: false
        missing_receipt:
          type: boolean
          description: |
            If this is set to true, then you need to attach receipt to the expense.
          example: false
        missing_expense_field_ids:
          type: array
          nullable: false
          items:
            type: integer
            nullable: true
            description: |
              This id provided by Fyle to identify an expense field.
            example: 123
          example:
            - 123
            - 12423
          description: |
            List of IDs of expense fields which are mandatory but are missing.
    spender_expense_check_mandatory_fields_bulk_in:
      type: array
      additionalProperties: false
      description: |
        Array of expenses to be checked for missing mandatory fields in one request..
      items:
        $ref: '#/components/schemas/items'
    expense_check_mandatory_fields_bulk_out:
      type: array
      additionalProperties: false
      items:
        type: object
        required:
          - id
          - missing_amount
          - missing_currency
          - missing_receipt
          - missing_expense_field_ids
        properties:
          id:
            $ref: '#/components/schemas/id_string'
            example: tx0agOdICdbV
          missing_amount:
            type: boolean
            description: |
              If this is set to true, then you need to send amount field with expense object.
            example: false
          missing_currency:
            type: boolean
            description: |
              If this is set to true, then you need to send currency field with expense object.
            example: false
          missing_receipt:
            type: boolean
            description: |
              If this is set to true, then you need to attach receipt to the expense.
            example: false
          missing_expense_field_ids:
            type: array
            nullable: false
            items:
              type: integer
              nullable: true
              description: |
                This id provided by Fyle to identify an expense field.
              example: 123
            example:
              - 123
              - 12423
            description: |
              List of IDs of expense fields which are mandatory but are missing.
    expense_comments_out:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
        - action
        - action_data
        - expense_id
        - creator_type
        - org_id
        - updated_at
        - created_at
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        comment:
          type: string
          description: comment on the report
          example: We don't accept laundry bills
        action:
          type: string
          description: Expense action for which comment is added.
          enum:
            - ADMIN_APPROVED
            - APPROVED
            - APPROVER_REMOVED
            - AUTO_MATCHED
            - AUTO_MERGED
            - COMMENTED
            - COMMENTED_WITH_NOTIFICATION
            - COMMENTED_WITHOUT_NOTIFICATION
            - DATA_EXTRACTED
            - EJECTED_FROM_REPORT
            - EXPENSE_RULE_APPLIED
            - FILE_ATTACHED
            - FILE_DELETED
            - INVALID_EXPENSE_FIELD_REMOVED
            - MATCHED
            - PAID
            - PARTIALLY_APPROVED
            - POLICY_RESULT_APPLIED
            - UNMATCHED
          example: COMMENTED_WITH_NOTIFICATION
        action_data:
          type: object
          description: Data related to expense action.
          nullable: true
        expense_id:
          $ref: '#/components/schemas/id_string'
        creator_type:
          type: string
          description: Describes whether the comment is system-generated or User made.
          enum:
            - SYSTEM
            - POLICY
            - USER
          example: USER
        creator_user_id:
          $ref: '#/components/schemas/user_id_nullable'
        creator_user:
          $ref: '#/components/schemas/user_out_embed_nullable'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        org_id:
          $ref: '#/components/schemas/org_id'
    expense_comments_bulk_in:
      type: array
      additionalProperties: false
      description: |
        Array of expense comments to be added in bulk.
      items:
        type: object
        required:
          - expense_id
          - comment
          - notify
        properties:
          expense_id:
            $ref: '#/components/schemas/id_string'
          comment:
            type: string
            description: comment on the expense
            example: We don't accept laundry bills
          notify:
            type: boolean
            description: Whether to notify the user about the comment
            example: true
    expense_dismiss_duplicates_in:
      type: object
      required:
        - id
        - duplicate_expense_ids
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        duplicate_expense_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwoirwlwwg
            - txwlgwkgw42
          description: |
            List of expense IDs that needs to be dismissed as a duplicate from the target expense
    expense_duplicate_sets_out:
      type: object
      additionalProperties: false
      properties:
        expense_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - txwoirwlwwg
            - txwlgwkgw42
          description: |
            List of expense IDs that are part of the duplicate set
    expenses_stats_in:
      properties:
        query_params:
          nullable: false
          type: string
          description: |
            Query param string similar to expenses GET call. Use group_by_state=eq.true to get state-wise grouping of stats.
          example: id=in.('tx1263', 'tx1569')&group_by_state=eq.true
    expenses_stats_out:
      oneOf:
        - type: array
          title: State-wise grouped stats
          description: Stats grouped by expense state
          items:
            type: object
            required:
              - count
              - total_amount
              - state
            properties:
              count:
                type: integer
                nullable: false
                description: Number of matching expenses in this state
                example: 10
              total_amount:
                type: number
                nullable: false
                description: Sum of amounts for matching expenses in this state
                example: 44545.4
              state:
                type: string
                enum:
                  - COMPLETE
                  - DRAFT
                  - APPROVER_PENDING
                  - APPROVED
                  - PAYMENT_PENDING
                  - PAYMENT_PROCESSING
                  - PAID
                  - UNREPORTABLE
                description: Expense state
        - type: object
          title: Overall stats
          description: Overall stats without state grouping
          required:
            - count
            - total_amount
          properties:
            count:
              type: integer
              nullable: false
              description: Total number of matching expenses
              example: 353
            total_amount:
              type: number
              nullable: false
              description: Sum of amounts for all matching expenses
              example: 45882.4
      example:
        - state: COMPLETE
          count: 343
          total_amount: 1337
        - state: DRAFT
          count: 10
          total_amount: 44545.4
        - state: PAID
          count: 0
          total_amount: 0
        - state: PAYMENT_PROCESSING
          count: 0
          total_amount: 0
        - state: APPROVER_PENDING
          count: 0
          total_amount: 0
        - state: PAYMENT_PENDING
          count: 0
          total_amount: 0
        - state: APPROVED
          count: 0
          total_amount: 0
        - state: UNREPORTABLE
          count: 0
          total_amount: 0
    expense_filters_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: exfilumWHrlPf7K
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    expense_filters_in:
      type: object
      additionalProperties: false
      required:
        - name
        - query_string
      properties:
        name:
          $ref: '#/components/schemas/filter_name'
        is_shared:
          $ref: '#/components/schemas/is_shared'
        query_string:
          $ref: '#/components/schemas/query_string'
        sub_feature:
          $ref: '#/components/schemas/sub_feature'
    expense_filters_delete_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: exfilumWHrlPf7K
    expenses_export_config_column_formula:
      type: object
      properties:
        function:
          type: string
          example: parse-format-time
        parameters:
          type: array
          items:
            anyOf:
              - type: object
              - type: string
              - type: number
              - type: integer
              - type: boolean
          example:
            - function: field
              parameters:
                - spent_at
            - yyyy-MM-dd'T'HH:mm:ss
            - dd-MM-yyyy
            - error in date formatting
      description: |
        Export column formula is a expression that is used to transform the data. Refer https://www.fylehq.com/help/en/articles/4422306-advanced-export-formulas for more details.
    expenses_export_config:
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          enum:
            - xlsx
            - csv
          description: |
            Type of the export file.
          example: csv
        is_header_visible:
          type: boolean
          description: |
            Whether to show the header in the export file.
          example: true
        separate_line_items_entry:
          type: object
          properties:
            enabled:
              type: boolean
              description: |
                Whether to show the double rows for each line item in the export file.
              example: false
            debit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for debit entries.
              example:
                - debit_amount
            credit_entries_only:
              type: array
              items:
                type: string
              description: |
                Configure which columns to show for credit entries.
              example:
                - credit_amount
          description: |
            Configure how to show the double rows for each line item in the export file, if enabled.
        columns:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  Name of the column.
                example: Spent Date
              formula:
                allOf:
                  - $ref: '#/components/schemas/expenses_export_config_column_formula'
                description: |
                  Formula to transform the data in the column.
          description: |
            Configure the columns to show in the export file.
    expenses_exports_in:
      type: object
      additionalProperties: false
      required:
        - query_params
        - notify_emails
        - config
      properties:
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
          description: |
            List of emails to notify when the export is ready.
        config:
          allOf:
            - $ref: '#/components/schemas/expenses_export_config'
          nullable: false
          description: |
            Configuration for the export.
    expenses_exports_out:
      type: object
      additionalProperties: false
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: eefilumWHrlPf7K
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        query_params:
          allOf:
            - $ref: '#/components/schemas/query_params'
          nullable: false
        notify_emails:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/email'
        config:
          allOf:
            - $ref: '#/components/schemas/expenses_export_config'
          nullable: false
        file_id:
          anyOf:
            - $ref: '#/components/schemas/null_field'
            - $ref: '#/components/schemas/id_string'
          nullable: true
          example: filumWHrlPf7K
        state:
          type: string
          nullable: false
          enum:
            - PENDING
            - PROCESSING
            - SUCCESS
            - ERROR
          description: |
            Status of the export.
          example: PENDING
    split_expense_in:
      type: object
      properties:
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        source:
          $ref: '#/components/schemas/source'
        spent_at:
          type: string
          format: date-time
          nullable: false
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
            - **Note:**
              - This field is required while creating an expense.
              - _Not required when updating an expense, but is non-nullable_. 
          example: '2020-06-01T01:18:19.292-08:00'
        is_reimbursable:
          $ref: '#/components/schemas/is_reimbursable'
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        file_ids:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/id_string'
          description: |
            List of file IDs to be attached to the expense.
          example:
            - fisjfwlrglw
            - fisjfwlrglw
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          example: acwbl222wlg
        advance_wallet_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: advwrlAGwjr2
        tax_amount:
          type: number
          nullable: true
          description: |
            Tax amount as setup by your organization.
            - _Note:_
              - Tax amount cannot be greater than the expense amount.
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        merchant:
          $ref: '#/components/schemas/merchant'
        purpose:
          type: string
          example: Team lunch
        is_billable:
          $ref: '#/components/schemas/is_billable'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    expense_split_object:
      type: object
      properties:
        spent_at:
          type: string
          format: date-time
          nullable: false
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
            - **Note:**
              - This field is required while creating an expense.
              - _Not required when updating an expense, but is non-nullable_. 
          example: '2020-06-01T01:18:19.292-08:00'
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 49058
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        purpose:
          type: string
          example: Team lunch
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    spender_expense_split_object:
      type: array
      items:
        required:
          - claim_amount
        allOf:
          - $ref: '#/components/schemas/expense_split_object'
        properties:
          claim_amount:
            type: number
            nullable: false
            description: |
              The expense amount which is added or modified by spender.
            example: 1900
    spender_split_expense_in:
      type: object
      required:
        - claim_amount
        - splits
      allOf:
        - $ref: '#/components/schemas/split_expense_in'
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            This id is provided by Fyle to identify an object
            - When `id` is sent, default action is to update the expense
        claim_amount:
          type: number
          nullable: false
          description: |
            The expense amount which is added or modified by spender.
          example: 1900
        splits:
          description: |
            This array contains the number of split expenses spender wants to create for the expense.
            The `claim_amount` provided for the original expense should be equal to the sum of
            `claim_amount` provided for each split. Each attribute in the splits array will take precedence
            to the original expense object. If any attribute is not provided in the split object, then
            null or default value will be taken for that attribute in the resultant split.
          allOf:
            - $ref: '#/components/schemas/spender_expense_split_object'
        report_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          description: |
            Unique id given by Fyle to identify an Expense Report. <br>
            Sending this field will add the expense to the report. If the expense is already attached to a report,
            the expense will be removed from the old report and added to the new report if it is not yet approved.
          example: rpvgnwlgw34
    target_expense_fields:
      type: object
      additionalProperties: false
      properties:
        amount:
          type: number
          description: The amount for which the expense was/will-be filed.
          example: 1500
          nullable: false
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        tax_group_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
        tax_amount:
          type: number
          nullable: true
          description: Tax amount as setup by your organization.
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          nullable: true
          description: Date on which the expense was made. This date cannot be in future.
        purpose:
          type: string
          nullable: true
          example: Team lunch
        source_account_id:
          allOf:
            - $ref: '#/components/schemas/fk_string'
          nullable: true
          example: acwbl222wlg
        is_billable:
          $ref: '#/components/schemas/is_billable'
        is_reimbursable:
          allOf:
            - $ref: '#/components/schemas/is_reimbursable'
          nullable: false
        merchant:
          $ref: '#/components/schemas/merchant'
        project_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 92895
        category_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          description: |
            This represents the category's id given by Fyle during creation of category
            for which this expense is created.
            Null is not allowed for category_id field instead pass Unspecified category Id
          example: 49058
        cost_center_id:
          allOf:
            - $ref: '#/components/schemas/fk_integer'
          nullable: true
          example: 1049
        distance:
          $ref: '#/components/schemas/distance'
        distance_unit:
          $ref: '#/components/schemas/distance_unit'
        started_at:
          $ref: '#/components/schemas/timestamptz_pst'
        ended_at:
          $ref: '#/components/schemas/timestamptz_pst'
        hotel_is_breakfast_provided:
          type: boolean
          nullable: true
          description: |
            This field is applicable for only `Hotel` category.
        travel_classes:
          $ref: '#/components/schemas/travel_classes'
        locations:
          $ref: '#/components/schemas/locations'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/fk_string'
          example:
            - figwiwpjww
    expenses_merge_in:
      type: object
      additionalProperties: false
      required:
        - target_expense_id
        - source_expense_ids
        - target_expense_fields
      properties:
        target_expense_id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: tx0agOdICdbV
          nullable: false
        source_expense_ids:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - tx0agOdICdbV
            - tx0agOdBCdbV
          description: |
            List of source expense IDs to merge into the target expense.
        target_expense_fields:
          allOf:
            - $ref: '#/components/schemas/target_expense_fields'
          nullable: false
          description: |
            Fields to be updated in the target expense.
    any_type:
      anyOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - type: array
          items:
            $ref: '#/components/schemas/any_type'
        - type: object
    feature_config_out:
      type: object
      additionalProperties: false
      properties:
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        target_client:
          type: string
          nullable: false
          description: |
            This specifies the target client of the feature config.
          example: WEBAPP
        feature:
          type: string
          nullable: false
          description: |
            This specifies the feature name.
          example: ADMIN_EXPENSES
        sub_feature:
          type: string
          nullable: true
          description: |
            This specifies the sub feature name.
          example: ALL_EXPENSES
        key:
          type: string
          nullable: false
          description: |
            This specifies the key of the feature config.
          example: MANAGE_COLUMNS
        value:
          anyOf:
            - $ref: '#/components/schemas/any_type'
            - $ref: '#/components/schemas/null_field'
          nullable: true
          description: |
            This specifies the value of the feature config.
          example:
            columns:
              - id: Date
                is_visible: true
                order: 1
        is_shared:
          type: boolean
          nullable: false
          description: |
            This specifies whether the feature config is shared or not.
          example: true
    feature_config_spender_in:
      type: object
      additionalProperties: false
      required:
        - target_client
        - feature
        - key
        - value
      properties:
        target_client:
          type: string
          nullable: false
          description: |
            This specifies the target client of the feature config.
          example: WEBAPP
        feature:
          type: string
          nullable: false
          description: |
            This specifies the feature name.
          example: ADMIN_EXPENSES
        sub_feature:
          type: string
          nullable: true
          description: |
            This specifies the sub feature name.
          example: ALL_EXPENSES
        key:
          type: string
          nullable: false
          description: |
            This specifies the key of the feature config.
          example: MANAGE_COLUMNS
        value:
          anyOf:
            - $ref: '#/components/schemas/any_type'
            - $ref: '#/components/schemas/null_field'
          nullable: true
          description: |
            This specifies the value of the feature config.
          example:
            columns:
              - id: Date
                is_visible: true
                order: 1
    fastlink_params:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        configName:
          type: string
          maxLength: 255
          description: |
            Name of the configuration for the action that would be performed while opening the Yodlee Fastlink application
          example: Aggregation
        flow:
          type: string
          maxLength: 255
          description: |
            Flow of the user when they open the Yodlee Fastlink
          example: refresh
        providerAccountId:
          type: string
          maxLength: 255
          description: |
            Provider account ID of the users bank account connected
          example: 10273320
    personal_card_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        currency:
          type: string
          example: USD
        bank_name:
          type: string
          description: |
            Name of the bank to which the account and card is connected with.
          example: Dag Site TokenFMPA
        card_number:
          type: string
          example: '****3464'
        account_type:
          type: string
          nullable: false
          example: SAVINGS
          description: Type of the bank account as provided by Yodlee.
        yodlee_account_id:
          $ref: '#/components/schemas/fk_string'
        yodlee_fastlink_params:
          $ref: '#/components/schemas/fastlink_params'
          type: object
          nullable: true
          description: |
            Configuration to open Yodlee Fastlink
        yodlee_is_credential_update_required:
          type: boolean
          nullable: false
          default: false
          example: false
          description: |
            Determines whether the user has changed the credentials and need to reconfirm the credentials when user tried to fetch the card transactions.
        yodlee_is_mfa_required:
          type: boolean
          nullable: false
          default: false
          example: true
          description: |
            Determines whether the MFA is enabled by the user on the card.
        yodlee_last_synced_at:
          nullable: true
          type: string
          format: date-time
          description: |
            Signifies when the card was last synced at
          example: '2020-06-01T13:14:54.804+00:00'
        yodlee_login_id:
          $ref: '#/components/schemas/fk_string'
        yodlee_provider_account_id:
          type: string
          description: Unique ID provided by Yodlee for account identification
          example: 1027XXXX
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    personal_card_delete_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/fk_string'
        currency:
          type: string
          example: USD
        bank_name:
          type: string
          description: |
            Name of the bank to which the account and card is connected with.
          example: Dag Site TokenFMPA
        card_number:
          type: string
          example: '****3464'
        account_type:
          type: string
          nullable: false
          example: SAVINGS
          description: Type of the bank account as provided by Yodlee.
        yodlee_account_id:
          $ref: '#/components/schemas/fk_string'
        yodlee_fastlink_params:
          $ref: '#/components/schemas/fastlink_params'
          type: object
          nullable: true
          description: |
            Configuration to open Yodlee Fastlink
        yodlee_is_credential_update_required:
          type: boolean
          nullable: false
          default: false
          example: false
          description: |
            Determines whether the user has changed the credentials and need to reconfirm the credentials when user tried to fetch the card transactions.
        yodlee_is_mfa_required:
          type: boolean
          nullable: false
          default: false
          example: false
          description: |
            Determines whether the MFA is enabled by the user on the card.
        yodlee_last_synced_at:
          nullable: true
          type: string
          format: date-time
          description: |
            Signifies when the card was last synced at
          example: '2020-06-01T13:14:54.804+00:00'
        yodlee_login_id:
          $ref: '#/components/schemas/fk_string'
        yodlee_provider_account_id:
          type: string
          description: Unique ID provided by Yodlee for account identification
          example: 1027XXXX
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    personal_card_access_token_out:
      type: object
      properties:
        access_token:
          type: string
          description: |
            Access token to open the yodlee iframe.
          nullable: true
          example: uswjwgnwwgosdd==
    personal_card_mfa_in:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: baccymJEDziL9Y
    personal_card_mfa_out:
      type: object
      properties:
        is_mfa_enabled:
          type: boolean
          nullable: false
          default: false
          example: false
          description: Determines wether the user card has MFA enabled or not
    personal_card_transaction_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
        org_id:
          $ref: '#/components/schemas/org_id'
        user_id:
          $ref: '#/components/schemas/user_id'
        personal_card_id:
          type: string
          description: |
            The unique id of an personal card to which the object is associated.
          example: bacc9EJaJKXcvI
        amount:
          type: number
          description: |
            The expense amount as claimed by user.
          example: 1984.18
        currency:
          type: string
          maxLength: 3
          example: USD
          description: Currency code (must be three letters only)
        foreign_amount:
          nullable: true
        foreign_currency:
          nullable: true
        spent_at:
          allOf:
            - $ref: '#/components/schemas/timestamptz_pst'
          description: |
            It signifies when this expense was made.
            This date cannot be in future.
        category:
          type: string
          example: Securities Trades
        merchant:
          type: string
          example: Vanguard Target Retirement
        state:
          type: string
          enum:
            - INITIALIZED
            - HIDDEN
            - MATCHED
          description: |
            Status of Personal Card Transactions.
          example: INITIALIZED
        description:
          $ref: '#/components/schemas/description'
        external_transaction_id:
          type: string
          description: |
            This id is provided by Yodlee to identify an object.
          example: '2389782392032'
        matched_expense_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          description: |
            Holds the expense ids which are matched to this card transaction
          example:
            - txwownwrng
        matched_expenses:
          type: array
          items:
            $ref: '#/components/schemas/matched_expense_out_embed'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    personal_card_transaction_hide_in:
      type: object
      required:
        - id
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/id_string'
    personal_card_transactions_stats_in:
      properties:
        query_params:
          nullable: false
          type: string
          description: |
            - This field contains the query param string similar to the query params passed in personal card transactions GET call for displaying transactions in the list view.
            - Supported query params: personal_card_id, state, spent_at, created_at, updated_at, foreign_amount, amount, id
          example: personal_card_id=eq.bacctW9DfNhwOt&state=eq.HIDDEN
    personal_card_transactions_stats_out:
      type: object
      properties:
        count:
          type: integer
          nullable: false
          description: |
            This field indicates the count of personal card transactions.
          example: 1
        debit_amount:
          allOf:
            - $ref: '#/components/schemas/amount'
          description: |
            This field indicates the sum of amount of the debit type personal card transactions.
          example: 1239
        credit_amount:
          allOf:
            - $ref: '#/components/schemas/amount'
          description: |
            This field indicates the sum of amount of the credit type personal card transactions.
          example: 101
    get_spender_orgs_out:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/org_id'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the org.
          example: Demo Account
        domain:
          type: string
          maxLength: 255
          description: This field specifies the domain with which the organisation is registered.
          example: example.com
        currency:
          $ref: '#/components/schemas/currency'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        is_current:
          type: boolean
          description: A boolean flag indicating whether the organisation is the current organisation the user is logged into.
        is_primary:
          type: boolean
          description: A boolean flag indicating whether the organisation is the primary organisation of the user.
    spender_org_bank_details_out:
      type: object
      additionalProperties: false
      properties:
        org_id:
          $ref: '#/components/schemas/org_id'
        is_bank_account_added:
          type: boolean
          example: true
          description: This field contains a boolean value indicating if a bank account has been added to the organisation.
    advance_request_permissions_in:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: id of the advance request
          example: areqiwr3Wwirr
    advance_request_permissions_out:
      type: object
      additionalProperties: false
      properties:
        can_save:
          type: boolean
          description: Whether the user can save changes to this advance request
          example: true
        can_submit:
          type: boolean
          description: Whether the user can submit this advance request for approval
          example: false
        can_edit:
          type: boolean
          description: Whether the user can edit this advance request
          example: true
        can_add_approver:
          type: boolean
          description: Whether the user can add an approver to this advance request
          example: false
        can_disable_approver:
          type: boolean
          description: Whether the user can disable an approver for this advance request
          example: false
        can_reject:
          type: boolean
          description: Whether the user can reject this advance request
          example: false
        can_approve:
          type: boolean
          description: Whether the user can approve this advance request
          example: true
        can_inquire:
          type: boolean
          description: Whether the user can inquire about this advance request
          example: false
        can_pull_back:
          type: boolean
          description: Whether the user can pull back this advance request
          example: false
        can_pay:
          type: boolean
          description: Whether the user can mark this advance request as paid
          example: false
        can_delete:
          type: boolean
          description: Whether the user can delete this advance request
          example: true
    advance_request_action_pull_back_in:
      type: object
      additionalProperties: false
      required:
        - id
        - comment
      properties:
        id:
          type: string
          description: |
            id of advance request that is to be pulled back
          example: areqGsQdgSoteL
        comment:
          type: string
          description: |
            Comment explaining the reason for pulling back the advance request
          example: sending back
    attach_files_to_advance_request_in:
      type: object
      required:
        - id
        - file_ids
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          example: areqsjfwlrglw
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/id_string'
          example:
            - figwiwpjww
          description: List of files to be attached to the advance request
    advance_request_comments_in:
      type: object
      additionalProperties: false
      required:
        - advance_request_id
        - comment
      properties:
        advance_request_id:
          $ref: '#/components/schemas/id_string'
          description: ID of the advance request to add comment to
          example: areq5F9xIaMURI
        comment:
          type: string
          description: Comment text to be added to the advance request
          example: test
    advance_request_delete_in:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id_string'
          description: id of the advance request to be deleted
          example: adrkvnwrnpwi
    secondary_email_out:
      type: object
      additionalProperties: false
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/id_string'
          description: |
            Unique identifier for the secondary email.
          example: seh8wr55ruh2
        email:
          allOf:
            - $ref: '#/components/schemas/email'
          description: |
            The secondary email address.
          example: secondary@test.tech
        is_verified:
          type: boolean
          description: |
            Indicates whether the secondary email address has been verified.
          example: true
        org_id:
          allOf:
            - $ref: '#/components/schemas/org_id'
          description: |
            The unique id of the Organization to which the secondary email belongs.
          example: oriSOntNdZGd
        user_id:
          allOf:
            - $ref: '#/components/schemas/user_id'
          description: |
            The unique id of the user to which the secondary email belongs.
          example: usplIdJBA5OP
        created_at:
          allOf:
            - $ref: '#/components/schemas/created_at'
          description: |
            Timestamp when the secondary email was created.
          example: '2025-06-30T10:06:18.534148+00:00'
        updated_at:
          allOf:
            - $ref: '#/components/schemas/updated_at'
          description: |
            Timestamp when the secondary email was last updated.
          example: '2025-06-30T10:06:18.534148+00:00'
    secondary_email_in:
      type: object
      additionalProperties: false
      required:
        - email
      properties:
        email:
          allOf:
            - $ref: '#/components/schemas/email'
          description: |
            The secondary email address to be added.
          example: secondary-test@test.in
    advance_request_custom_field_out:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          description: ID of the custom field
          example: 123
        org_id:
          $ref: '#/components/schemas/org_id'
        name:
          type: string
          description: Name of the custom field
          example: Department
        type:
          type: string
          enum:
            - TEXT
            - NUMBER
            - SELECT
            - MULTI_SELECT
            - BOOLEAN
            - LOCATION
            - USER_LIST
            - DATE
          description: Type of the custom field
          example: SELECT
        options:
          type: array
          items:
            type: string
          description: Options for SELECT and MULTI_SELECT field types
          example:
            - HR
            - Finance
          nullable: true
        is_mandatory:
          type: boolean
          description: Whether the field is mandatory
          example: true
        is_enabled:
          type: boolean
          description: Whether the field is enabled
          example: true
        placeholder:
          type: string
          description: Placeholder text for the field
          example: Select dept
          nullable: true
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    advance_request_custom_fields_out:
      type: array
      items:
        $ref: '#/components/schemas/advance_request_custom_field_out'
      description: List of advance request custom fields
  parameters:
    q:
      in: query
      name: q
      description: A search query to filter the results.
      schema:
        type: string
        example: Ritas
    id:
      in: query
      name: id
      description: |
        A resource ID
      schema:
        type: string
        example:
          - eq.ouwruogwnngg
    created_at:
      in: query
      name: created_at
      description: |
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    updated_at:
      in: query
      name: updated_at
      description: |
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ  format along with operator in RHS dot pattern.<br> Supported operators are `gte`,`lte`,`gt`,`lt`.
      schema:
        type: string
        example: gte.2020-06-01T00:00:00.000-08:00
    display_name:
      in: query
      name: display_name
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        display_name=in.(value1,value2)
      schema:
        type: string
        example: like.Fast*
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: |
        A limit on the number of objects to be returned. Allowed values are from 1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
    order:
      in: query
      name: order
      description: |
        use comma separated column names for sorting the results. <br>
        For sorting in descending order, use `column_name.desc`
      schema:
        type: string
        example: updated_at.desc,id
    expense_id:
      in: query
      name: expense_id
      description: |
        Expense id for filtering based on expenses. Supported operator is `eq`.
      schema:
        type: string
        example: expense_id=eq.txS9GZm5hsjh
