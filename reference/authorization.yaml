openapi: 3.0.3
info:
  version: '1.0'
  title: Authorization APIs
  termsOfService: https://www.fylehq.com/privacy/terms-and-conditions
  contact:
    name: Platform Beta
    email: support@fylehq.com
  description: |
    These APIs are used for authorization.
servers:
  - url: https://accounts.fylehq.com
    description: Authorization Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.fylehq.com/app/developers/#/oauth/authorize
          tokenUrl: https://accounts.fylehq.com/oauth/token
          scopes:
            '*': Grant all actions
  schemas:
    '400':
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: |
            Message describing why the request is invalid
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: |
            This error means that the input access token is either not issued by Fyle or has expired.
            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: |
            This error means current user does not have enough permissions to perform this operation.
paths:
  /oauth/cluster:
    post:
      summary: Data Cluster
      operationId: data_cluster_post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster_domain:
                    type: string
                    maxLength: 255
                    description: |
                      The data for this user will be available in this cluster
                    example: https://us1.fylehq.com
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /oauth/token:
    post:
      summary: OAuth 2.0 token
      description: |
        This API endpoint can be used in two different ways, so it can be a little confusing. That's OAuth 2.0 for you.

        ### Get a new access token using a refresh token

        In this case, your application already has a refresh token, but needs to get a new access token. This is relevant for both
        internal apps and OAuth 2.0 apps. For this case, you'll need to set `grant_type` to `refresh_token` and send the `refresh_token` parameter.

        ### Get a refresh token using code

        This option is only useful for OAuth 2.0 apps. After the user authorizes the app, your backend would've received a `code`. Use this API
        with the `grant_type` set to `authorization_code` and the `code` parameter with the code value to get a refresh token.

        If you already have a refresh token, set `grant_type` as `refresh_token` to get the latest access token.

        Yes, it is confusing. That's OAuth 2.0 for you.
      operationId: oauth_token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - grant_type
                - client_id
                - client_secret
              properties:
                grant_type:
                  type: string
                  enum:
                    - authorization_code
                    - refresh_token
                  description: |
                    To get a refresh token for the first time, use `authorization_code`. If you are trying to get a
                    new access token, then use `refresh_token`. Yes, it is confusing. That's OAuth 2.0 for you.
                refresh_token:
                  type: string
                  description: Send refresh_token to get a new access token
                  example: rrr.bbbb.ccc
                code:
                  type: string
                  description: Send code if you're trying to get a refresh token for the first time.
                  example: yyy.bbbb.ccc
                client_id:
                  type: string
                  example: tpaXXYYY
                client_secret:
                  type: string
                  example: ASJJWERC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  access_token:
                    type: string
                    example: xxxyyy.aaaa.aaa
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
