expense_out:
  type: object
  properties:
    id:
      $ref: './fields.yaml#/id_string'
    user_id:
      $ref: './fields.yaml#/user_id'
    user:
      $ref: './user.yaml#/user_out_embed'
    org_id:
      $ref: './fields.yaml#/org_id'
    created_at:
      $ref: './fields.yaml#/created_at'
    updated_at:
      $ref: './fields.yaml#/updated_at'
    spent_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        siginfies when this expense was made.
        This date cannot be in future.
    source:
      type: string
      description: |
        The name of the client app which is creating the expense.
        if its a thrid party app, it prefixed with TPA_.
        Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
        passed, source is saved as TPA.
      example: SLACK_APP
    merchant:
      type: string
      maxLength: 255
      description: |
        String denoting the name of the vendor to which the Expense was made.
      example: Uber
    currency:
      $ref: './fields.yaml#/currency'
    amount:
      type: number
      description: |
        The amount for which the expense was/will-be fyled.
        The amount will be in the currency that the organization's home currency.<br>

        Note that, this field is calculated from admin_amount, policy_amount, claim_amount.

        if admin_amount is present then this value will be same admin_amount.
        if policy_amount is present then this value will be same policy_amount.
        else this should be same as claim_amount.
      example: 1500
    claim_amount:
      type: number
      description: |
        The expense amount as claimed by user.
      example: 1984.18
    policy_amount:
      type: number
      description: |
        The expense amount set by policy.
      example: 1500
    admin_amount:
      type: number
      description: |
        The expense amount which is modified by admin or approver.
        This could be null if admin or approver has not edited your expense.
      example: null
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 1049
    cost_center:
      $ref: './cost_center.yaml#/cost_center_out_embed'
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 49058
    category:
      $ref: './category.yaml#/category_out_embed'
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 92895
    project:
      $ref: './project.yaml#/project_out_embed'
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
    source_account:
      $ref: './account.yaml#/account_out_embed'
    tax_amount:
      type: number
      description: Tax amount as setup by your organisation.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
    is_billable:
      type: boolean
      example: true
      description: This fields marks whether a given expense is billable a not.
    is_reimbursable:
      type: boolean
      example: true
    distance:
      type: number
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      enum:
        - KM
        - MILES
    mileage_calculated_distance:
      type: number
      description: Distance compluted by Fyle in mileage expenses.
    mileage_calculated_amount:
      type: number
      description: Amount compluted by Fyle in mileage expenses.
    mileage_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 9080
    mileage_rate:
      $ref: './mileage_rate.yaml#/mileage_rate_out_embed'
    mileage_is_round_trip:
      type: boolean
      description: Flag stating whether this was a round trip or not.
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 583
    per_diem_rate:
      $ref: './per_diem_rate.yaml#/per_diem_rate_out_embed'
    num_days:
      type: integer
      example: 2
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
        index 0 holds onward journey class, index 1 holds return journey travel class.
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    hotel_is_breakfast_provided:
      type: boolean
      description: |
        This field is applicable for only `Hotel` category.
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
        For travel between Place A to Place c and stopping at Place B, this
      type: array
      minItems: 2
      maxItems: 10
      items:
        $ref: './fields.yaml#/location'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'
    ref_code:
      type: string
      description: |
        Id given by external systems like Gmail. To identify whether that entity
        has been already added to Fyle or not.
    state:
      type: string
      enum:
        - COMPLETE
        - DRAFT
        - PAID
        - PAYMENT_PROCESSING
        - APPROVER_PENDING
        - PAYMENT_PENDING
        - APPROVED
      description: The state of the Expense.
    seq_num:
      type: string
      readOnly: true
      description: |
        This is user visible identifier for an expense.
        This field can be used as reference in UI.
      example: E/2020/10/T/95
    report_id:
      type: string
      description: |
        Unique id given by Fyle to identify an Expense Report.
    added_to_report_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      description: |
        signifies when this expense was added to a report.
        If this expense is not added to a report, then this could be null.
    report:
      $ref: './report.yaml#/report_out_embed'
    is_verified:
      type: boolean
      description: |
        Determines whether this expense has been verified by a verifier.
    last_verified_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      description: |
        signifies when this expense was verified.
    is_exported:
      type: boolean
      description: |
        Determines whether this expense has been exported to external accounting system or not.
    last_exported_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      description:
        signifies when this expense was exported to an external accounting system.
    file_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_string'
    files:
      type: array
      items:
        $ref: './file.yaml#/file_out_embed'
    approver_user_ids:
      type: array
      items:
        $ref: ./fields.yaml#/id_string
    approvals:
      type: array
      items:
        $ref: ./report_approval.yaml#/report_approval_out_embed
      description: |
        List of report_approval objects

expense_in:
  type: object
  properties:
    spent_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        siginfies when this expense was made.
        This date cannot be in future.
    source:
      type: string
      description: |
        The name of the client app which is creating the expense.
        if its a thrid party app, it prefixed with TPA_.
        Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
        passed, source is saved as TPA.
      example: SLACK_APP
    merchant:
      type: string
      maxLength: 255
      description: |
        String denoting the name of the vendor to which the Expense was made.
      example: Uber
    currency:
      $ref: './fields.yaml#/currency'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
    tax_amount:
      type: number
      description: Tax amount as setup by your organisation.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
    is_billable:
      type: boolean
      example: true
      description: This fields marks whether a given expense is billable a not.
    is_reimbursable:
      type: boolean
      example: true
    distance:
      type: number
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      enum:
        - KM
        - MILES
    mileage_calculated_distance:
      type: number
      description: Distance compluted by Fyle in mileage expenses.
    mileage_calculated_amount:
      type: number
      description: Amount compluted by Fyle in mileage expenses.
    mileage_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 9080
    mileage_is_round_trip:
      type: boolean
      description: Flag stating whether this was a round trip or not.
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      example: 583
    num_days:
      type: integer
      example: 2
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
        index 0 holds onward journey class, index 1 holds return journey travel class.
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    hotel_is_breakfast_provided:
      type: boolean
      description: |
        This field is applicable for only `Hotel` category.
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
        For travel between Place A to Place c and stopping at Place B, this
      type: array
      minItems: 2
      maxItems: 10
      items:
        $ref: './fields.yaml#/location'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'

fyler_expense_in:
  allOf:
    - $ref: '#/expense_in'
    - type: object
      required: [ 'amount' ]
      properties:
        claim_amount:
          $ref: './fields.yaml#/amount'

admin_expense_in:
  allOf:
    - $ref: '#/expense_in'
    - type: object
      required: [ 'admin_amount', 'user_id' ]
      properties:
        admin_amount:
          $ref: './fields.yaml#/amount'
        user_id:
          $ref: './fields.yaml#/user_id'