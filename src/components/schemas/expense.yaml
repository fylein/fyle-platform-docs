expense_out:
  type: object
  additionalProperties: false
  required:
    - id
    - user_id
    - user
    - org_id
    - created_at
    - updated_at
    - spent_at
    - source
    - merchant
    - currency
    - amount
    - claim_amount
    - policy_amount
    - admin_amount
    - foreign_currency
    - foreign_amount
    - purpose
    - cost_center_id
    - cost_center
    - category_id
    - category
    - project_id
    - project
    - source_account_id
    - source_account
    - tax_amount
    - tax_group_id
    - is_billable
    - is_reimbursable
    - distance
    - distance_unit
    - mileage_calculated_distance
    - mileage_calculated_amount
    - mileage_rate_id
    - mileage_rate
    - mileage_is_round_trip
    - per_diem_rate_id
    - per_diem_rate
    - per_diem_num_days
    - started_at
    - ended_at
    - travel_classes
    - hotel_is_breakfast_provided
    - locations
    - custom_fields
    - code
    - state
    - state_display_name
    - seq_num
    - report_id
    - added_to_report_at
    - report
    - is_verified
    - last_verified_at
    - is_receipt_mandatory
    - is_exported
    - last_exported_at
    - file_ids
    - files
    - employee
    - is_corporate_card_transaction_auto_matched
    - matched_corporate_card_transaction_ids
    - matched_corporate_card_transactions
    - last_settled_at
    - missing_mandatory_fields
    - activity_details
    - creator_user_id
    - extracted_data
    - is_manually_flagged
    - is_policy_flagged
    - split_group_id
    - is_physical_bill_submitted
    - physical_bill_submitted_at
    - invoice_number
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: txwownwrng
    user_id:
      $ref: './fields.yaml#/user_id'
    user:
      $ref: './user.yaml#/user_out_embed'
    org_id:
      $ref: './fields.yaml#/org_id'
    created_at:
      $ref: './fields.yaml#/created_at'
    updated_at:
      $ref: './fields.yaml#/updated_at'
    spent_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        signifies when this expense was made.
        This date cannot be in future.
    source:
      type: string
      description: |
        The name of the client app which is creating the expense.
        if its a thrid party app, it prefixed with TPA_.
        Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
        passed, source is saved as TPA.
      example: SLACK_APP
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the merchant to which the Expense was made.
      example: Uber
    currency:
      $ref: './fields.yaml#/currency'
    amount:
      type: number
      nullable: true
      description: |
        The amount for which the expense was/will-be fyled.
        The amount will be in the currency that the organization's home currency.<br>

        Note that, this field is calculated from admin_amount, policy_amount, claim_amount.

        if admin_amount is present then this value will be same admin_amount.
        if policy_amount is present then this value will be same policy_amount.
        else this should be same as claim_amount.
      example: 1500
    claim_amount:
      type: number
      nullable: true
      description: |
        The expense amount as claimed by user.
      example: 1984.18
    policy_amount:
      type: number
      nullable: true
      description: |
        The expense amount set by policy.
      example: 1500
    admin_amount:
      type: number
      nullable: true
      description: |
        The expense amount which is modified by admin or approver.
        This could be null if admin or approver has not edited your expense.
      example: null
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      nullable: true
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    cost_center:
      $ref: './cost_center.yaml#/cost_center_out_embed'
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    category:
      $ref: './category.yaml#/category_out_embed'
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    project:
      $ref: './project.yaml#/project_out_embed'
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    source_account:
      $ref: './account.yaml#/account_out_embed'
    tax_amount:
      type: number
      nullable: true
      description: |
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    is_billable:
      type: boolean
      nullable: true
      example: true
      description: This fields marks whether a given expense is billable a not.
    is_reimbursable:
      type: boolean
      description: This fields marks whether a given expense is reimbursable a not.
      example: true
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      nullable: true
      description: Unit of distance travelled.
      enum:
        - KM
        - MILES
        - null
      example: MILES
    mileage_calculated_distance:
      type: number
      nullable: true
      description: Distance computed by Fyle in mileage expenses.
    mileage_calculated_amount:
      type: number
      nullable: true
      description: Amount computed by Fyle in mileage expenses.
    mileage_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 9080
    mileage_rate:
      $ref: './mileage_rate.yaml#/mileage_rate_out_embed_for_expense'
    mileage_is_round_trip:
      type: boolean
      nullable: true
      description: Flag stating whether this was a round trip or not.
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 583
    per_diem_rate:
      $ref: './per_diem_rate.yaml#/per_diem_rate_out_embed'
    per_diem_num_days:
      type: integer
      nullable: true
      description: |
        Specific to per diem related expenses, number of days for which per diem claim is made.
      example: 2
    started_at:
      $ref: './fields.yaml#/timestamptz_utc'
    ended_at:
      $ref: './fields.yaml#/timestamptz_utc'
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
        index 0 holds onward journey class, index 1 holds return journey travel class.
      type: array
      minItems: 0
      maxItems: 2
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    hotel_is_breakfast_provided:
      type: boolean
      nullable: true
      description: |
        This field is applicable for only `Hotel` category.
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
        For travel between Place A to Place c and stopping at Place B, this
      type: array
      minItems: 0
      maxItems: 10
      items:
        $ref: './fields.yaml#/location'
    custom_fields:
      $ref: './fields.yaml#/expense_custom_fields'
    custom_fields_flattened:
      $ref: './fields.yaml#/flattened_custom_field'
    code:
      type: string
      nullable: true
      description: |
        Id given by external systems like Gmail. To identify whether that entity
        has been already added to Fyle or not.
      example: 'wgjwgo3ihwljnlsww'
    state:
      type: string
      enum:
        - COMPLETE
        - DRAFT
        - PAID
        - PAYMENT_PROCESSING
        - APPROVER_PENDING
        - PAYMENT_PENDING
        - APPROVED
      description: The state of the Expense.
    state_display_name:
      type: string
      example: Sent Back
      description: readable state name
    seq_num:
      type: string
      readOnly: true
      description: |
        This is user visible identifier for an expense.
        This field can be used as reference in UI.
      example: E/2020/10/T/95
    report_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
      description: |
        Unique id given by Fyle to identify an Expense Report.
      example: rpvgnwlgw34
    added_to_report_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        signifies when this expense was added to a report.
        If this expense is not added to a report, then this could be null.
    report:
      $ref: './report.yaml#/report_out_embed'
    is_verified:
      type: boolean
      nullable: true
      description: |
        Determines whether this expense has been verified by a verifier.
    last_verified_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        signifies when this expense was verified.
    is_receipt_mandatory:
      type: boolean
      nullable: true
      description: |
        Determines whether a receipt is missing for this expense when it is required.
    is_exported:
      type: boolean
      nullable: true
      description: |
        Determines whether this expense has been exported to external accounting system or not.
    last_exported_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description:
        signifies when this expense was exported to an external accounting system.
    file_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_string'
      example:
        - figwiwpjww
    files:
      type: array
      items:
        $ref: './file.yaml#/file_out_embed'
#    approver_user_ids:
#      type: array
#      items:
#        $ref: ./fields.yaml#/id_string
#      example:
#        - usge49ielgel
    approvals:
      type: array
      items:
        $ref: ./report_approval.yaml#/report_approval_out_embed
      description: |
        List of report_approval objects
    verifications:
      type: array
      items:
        $ref: '#/expense_verification_out_embed'
      description: |
        List of verification objects
    employee_id:
      $ref: './fields.yaml#/employee_id'
    employee:
      nullable: true
      $ref: './employee.yaml#/employee_out_embed_for_expense'
    is_corporate_card_transaction_auto_matched:
      type: boolean
      example: false
      description: |
        Signifies when this corporate card transaction is auto_matched.
    matched_corporate_card_transaction_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_string'
      description: |
        Holds the corporate card transaction ids which are matched to this expense
      example:
        - btxnwownwrng
    matched_corporate_card_transactions:
      type: array
      items:
        $ref: '#/matched_corporate_card_transaction_out_embed'
      description: |
        Holds the corporate card transactions which are matched to this expense.
        NOTE: The data of this field is not realtime. It will get updated later even if `matched_corporate_card_transaction_ids` is already up-to-date.
    last_settled_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        signifies when this expense was last settled.
    missing_mandatory_fields:
      $ref: './fields.yaml#/missing_mandatory_fields'
    creator_user_id:
      $ref: './fields.yaml#/user_id'
    activity_details:
      $ref: './fields.yaml#/activity_details'
    extracted_data:
      $ref: './fields.yaml#/extracted_data'
    is_manually_flagged:
      type: boolean
      nullable: true
      description: This fields marks whether a given expense is manually flagged or not.
      example: true
    is_policy_flagged:
      type: boolean
      nullable: true
      description: This fields marks whether a given expense is flagged by policy or not.
      example: true
    split_group_id:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id provided by Fyle to identify an object.
      example: txwownwrngx
    split_group_amount:
      $ref: './fields.yaml#/split_group_amount'
    is_physical_bill_submitted:
      type: boolean
      nullable: true
      description: |
        This fields marks if physical has been collected for the given expense.
      example: true
    physical_bill_submitted_at:
      type: string
      format: date-time
      example: '2020-06-11T13:14:55.201598+00:00'
      description: |
        Signifies if and when the physical bill for this report was submitted.
      nullable: true
    expense_rule_id:
      type: string
      nullable: true
      maxLength: 15
      description: |
        This id is provided by Fyle to identify an Expense Rule.
      example: ervgnwlgw34
    expense_rule_data:
      $ref: './expense_rules.yaml#/expense_rule_data_in'
    is_weekend_spend:
      type: boolean
      nullable: true
      description: |
        Whether the expense was spent on a weekend.
      example: true
    is_split:
      type: boolean
      nullable: true
      description: |
        Whether the expense is split.
      example: true
    tax_group:
      $ref: './fields.yaml#/tax_group'
    approver_comments:
      type: array
      description: |
        Comments added by approvers.
        NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
      items:
        type: string
      example:
        - 'This is a comment by approver'
    verifier_comments:
      type: array
      description: |
        Comments added by verifiers.
        NOTE: The data of this field is not realtime. It will get updated later even if rest of fields are already up-to-date.
      items:
        type: string
      example:
        - 'This is a comment by verifier'
    policy_checks:
      $ref: './fields.yaml#/policy_checks'
    accounting_export_summary:
      type: object
      description: |
        Summary of accounting export for this expense.
      properties:
        state:
          type: string
          enum:
            - COMPLETE
            - ERROR
            - IN_PROGRESS
            - SKIPPED
            - INITIATED
          example: COMPLETE
        error_type:
          type: string
          nullable: true
          enum:
            - ACCOUNTING_INTEGRATION_ERROR
            - MAPPING
            - null
          example: ACCOUNTING_INTEGRATION_ERROR
        url:
          type: string
          description: URL Endpoint for exported / failed expense
          example: https://app.example.com/expense/txwownwrng
        tpa_id:
          type: string
          nullable: false
          description: |
            Third party app id.
          example: tpa_1234567890
    report_settlement_id:
      anyOf:
        - $ref: ./fields.yaml#/null_field
        - $ref: ./fields.yaml#/id_string
      nullable: true
      maxLength: 255
      description: >
        An unique ID, generated by Fyle, for identifying the Settlement.
    report_last_paid_at:
      anyOf:
        - $ref: ./fields.yaml#/null_field
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        Signifies if and when report of this expense was reimbursed.
    report_last_approved_at:
      anyOf:
        - $ref: ./fields.yaml#/null_field
        - $ref: './fields.yaml#/timestamptz_utc'
      nullable: true
      description: |
        Signifies if and when report of this expense was approved.
    invoice_number:
      type: string
      nullable: true
      maxLength: 255
      description: |
        Invoice number of the expense.
      example: 123456

expense_in:
  type: object
  additionalProperties: false
  properties:
    spent_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        signifies when this expense was made.
        This date cannot be in future.
    source:
      type: string
      description: |
        The name of the client app which is creating the expense.
        if its a thrid party app, it prefixed with TPA_.
        Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If not
        passed, source is saved as TPA.
      example: SLACK_APP
    merchant:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the name of the vendor to which the Expense was made.
      example: Uber
    currency:
      $ref: './fields.yaml#/currency'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: Tax amount as setup by your organisation.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    is_billable:
      type: boolean
      nullable: true
      example: true
      description: This fields marks whether a given expense is billable a not.
    is_reimbursable:
      type: boolean
      nullable: true
      description: This fields marks whether a given expense is reimbursable a not.
      example: true
    distance:
      type: number
      nullable: true
      description: Actual distance travelled by employee in travel related expenses.
    distance_unit:
      type: string
      nullable: true
      description: Unit of distance travelled.
      enum:
        - KM
        - MILES
        - null
      example: MILES
    mileage_calculated_distance:
      type: number
      nullable: true
      description: Distance computed by Fyle in mileage expenses.
    mileage_calculated_amount:
      type: number
      nullable: true
      description: Amount computed by Fyle in mileage expenses.
    mileage_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 9080
    mileage_is_round_trip:
      type: boolean
      nullable: true
      description: Flag stating whether this was a round trip or not.
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 583
    per_diem_num_days:
      type: integer
      nullable: true
      description: |
        Specific to per diem related expenses, number of days for which per diem claim is made.
      example: 2
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      description: |
        This field is applicable only for `Flight`, `Train`, `Bus`, `Taxi` category.
        index 0 holds onward journey class, index 1 holds return journey travel class.
      type: array
      minItems: 0
      maxItems: 2
      items:
        type: string
      example:
        - ECONOMY
        - BUSINESS
    hotel_is_breakfast_provided:
      type: boolean
      nullable: true
      description: |
        This field is applicable for only `Hotel` category.
    locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
        For travel between Place A to Place c and stopping at Place B, this
      type: array
      minItems: 0
      maxItems: 10
      items:
        $ref: './fields.yaml#/location'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'

# Note: Similar object is used in /spender/expenses/check_policies. Please bear in mind while editing here
# to make necessary changes there. If new key is being added, please add it to the payload of check_policies
# payload as well. If the description of some field from here is overriden, and you're making the change, please
# update the explanation there as well.
spender_expense_in:
  type: object
  additionalProperties: false
  required:
    - claim_amount
    - spent_at
  properties:
    id:
      $ref: './fields.yaml#/id_string'
    spent_at:
      allOf:
      - $ref: './fields.yaml#/spent_at'
      description: |
        Date on which the expense was made.
        This date cannot be in future.
        This field is not required for creating Per Diem Expenses
    source:
      $ref: './fields.yaml#/source'
    merchant:
      $ref: './fields.yaml#/merchant'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    claim_amount:
      allOf:
      - $ref: './fields.yaml#/claim_amount'
      description: |
        The expense amount as claimed by user. <br>
        For Per Diem Expenses this amount should be equal to per diem rate rounded to two decimal places multiplied by number of days.
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: |
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    is_billable:
      $ref: './fields.yaml#/is_billable'
    is_reimbursable:
      $ref: './fields.yaml#/is_reimbursable'
    distance:
      $ref: './fields.yaml#/distance'
    distance_unit:
      $ref: './fields.yaml#/distance_unit'
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      $ref: './fields.yaml#/travel_classes'
    locations:
      $ref: './fields.yaml#/locations'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 583
      description: |
        Specific to per diem expense. This represents the per diem's rate id given by Fyle
        during creation of per diem rate for which this expense is created. <br>
        This field is required for creating Per Diem Expenses.
    per_diem_num_days:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 2
      description: |
        Specific to per diem related expenses, number of days for which per diem claim is made. <br>
        This field is required for creating Per Diem Expenses.
    report_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
      description: |
        Unique id given by Fyle to identify an Expense Report. <br>
        Sending this field will add the expense to the report. If the expense is already attached to a report,
        the expense will be removed from the old report and added to the new report if it is not yet approved.
      example: rpvgnwlgw34
    invoice_number:
      type: string
      nullable: true
      maxLength: 255
      description: |
        Invoice number of the expense.
      example: 123456

admin_expense_in:
  type: object
  additionalProperties: false
  anyOf:
    - required:
      - admin_amount
      - spent_at
      - assignee_user_email
    - required: 
      - id
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      description: |
       This id is provided by Fyle to identify an object
       - When `id` is sent, default action is to update the expense
    admin_amount:
      type: number
      nullable: false
      description: |
        The expense amount which is added or modified by admin or approver.
        - **Note:**
          - This field is required while creating an expense.
          - _Not required when updating an expense, but is non-nullable_. 
      example: 1900
    spent_at:
      type: string
      format: date-time
      nullable: False
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
        - **Note:**
          - This field is required while creating an expense.
          - _Not required when updating an expense, but is non-nullable_. 
      example: '2020-06-01T01:18:19.292-08:00'
    assignee_user_email:
      allOf:
        - $ref: './fields.yaml#/email'
      description: |
        An immutable field that represents the email address of the employee.
        Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
        822.</a>
        - **Note:**
          - The expense will be assigned/re-assigned to this particular `employee`. 
          - This field is required while creating an expense.
          - _Not required when updating an expense, but is non-nullable_. 
          - Admins can't assign the expense to self.
    source:
      $ref: './fields.yaml#/source'
    merchant:
      $ref: './fields.yaml#/merchant'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: | 
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    is_billable:
      $ref: './fields.yaml#/is_billable'
    is_reimbursable:
      $ref: './fields.yaml#/is_reimbursable'
    distance:
      $ref: './fields.yaml#/distance'
    distance_unit:
      $ref: './fields.yaml#/distance_unit'
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      $ref: './fields.yaml#/travel_classes'
    locations:
      $ref: './fields.yaml#/locations'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'

expense_out_embed:
  type: object
  required:
    - id
    - currency
    - amount
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: txwownwrng
    currency:
      $ref: './fields.yaml#/currency'
    amount:
      $ref: './fields.yaml#/amount'

matched_expense_out_embed:
  type: object
  nullable: true
  additionalProperties: false
  required:
    - id
    - currency
    - amount
    - spent_at
    - merchant
    - purpose
    - foreign_currency
    - foreign_amount
    - state
    - seq_num
    - no_of_files
    - category_display_name
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: txwownwrng
    currency:
      $ref: './fields.yaml#/currency'
    amount:
      $ref: './fields.yaml#/amount'
    spent_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_utc'
      description: |
        signifies when this expense was made.
        This date cannot be in future.
    merchant:
      type: string
      nullable: true
      maxLength: 255
      description: |
        String denoting the name of the merchant to which the Expense was made.
      example: Uber
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      nullable: true
      example: Team lunch
    state:
      type: string
      enum:
        - COMPLETE
        - DRAFT
        - PAID
        - PAYMENT_PROCESSING
        - APPROVER_PENDING
        - PAYMENT_PENDING
        - APPROVED
      description: The state of the Expense.
    seq_num:
      type: string
      readOnly: true
      description: |
        This is user visible identifier for an expense.
        This field can be used as reference in UI.
      example: E/2020/10/T/95
    no_of_files:
      type: integer
      description: |
        Number of files attached to the expense.
      example: 1
    category_display_name:
      type: string
      description: |
        Category of the expense.
      example: Travel

matched_corporate_card_transaction_out_embed:
  type: object
  nullable: true
  required:
    - id
    - corporate_card_id
    - corporate_card_number
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: btxnwownwrng
    corporate_card_id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: bawownwrng
    corporate_card_number:
      $ref: './fields.yaml#/card_number'
    masked_corporate_card_number:
      $ref: './fields.yaml#/card_number'
    bank_name:
      nullable: true
      $ref: './fields.yaml#/bank_name'
    corporate_card_user_full_name:
      nullable: true
      allOf:
       - $ref: './fields.yaml#/name_nullable'
      maxLength: 255
      description: |
        String denoting the card holder's full name
      example: John Doe
    amount:
      $ref: './fields.yaml#/amount'
    currency:
      $ref: './fields.yaml#/currency'
    spent_at:
      allOf:
       - $ref: './fields.yaml#/spent_at'
      description: |
        Signifies spent date of a card transaction.
        This date cannot be in future.
    posted_at:
      nullable: true
      allOf:
       - $ref: './fields.yaml#/timestamptz_utc'
      description: |
        Signifies post date of a card transaction.
        This date cannot be in future.
    status:
      type: string
      nullable: true
      enum:
        - PENDING
        - POSTED
        - null
      example: PENDING
      description: |
        Signifies status of a card transaction.
    description:
      type: string
      nullable: true
      description: |
        Holds the description of the card transaction
      example: Team lunch
    foreign_currency:
      nullable: true
      allOf:
       - $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      nullable: true
      allOf:
       - $ref: './fields.yaml#/foreign_amount'
    merchant:
      nullable: true
      allOf:
       - $ref: './fields.yaml#/merchant'
      description: |
        String denoting the name of the vendor to which the card transaction was made.
        Note: This is not same as the merchant added in Fyle but just a string
    category:
      type: string
      maxLength: 255
      nullable: true
      description: |
        String denoting the category of the card transaction
        Note: This is not same as the category added in Fyle but just a string
      example: Travel
    matched_by:
      type: string
      nullable: true
      description: |
        String denoting the email of the user who matched the card transaction to an expense.
      example: john.ooe@fyle.in


expense_add_comment_action_in:
  type: object
  required:
    - id
    - comment
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: 'txsjfwlrglw'
    comment:
      type: string
      description: Comment made on the expense.
      example: This is a food expense.

expense_attach_receipt_in:
  type: object
  required:
    - id
    - file_id
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: 'txsjfwlrglw'
    file_id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: 'fisjfwlrglw'

expense_creation_from_receipt_in:
  type: object
  required:
    - file_name
    - file_content
  properties:
    file_name:
      type: string
      maxLength: 255
      description: |
        Takes the name of the file which contains the receipt.
      example: very_important.jpeg
    file_content:
      type: string
      description: |
        This field takes the base64 encoded representation of the file.
      example: JVBERi0xLjQKMSAwIG9iago8PAovVGl0bGUgKP7/KQovQ3JlYX...
    source:
      $ref: './fields.yaml#/source'

expense_check_policies_in:
  type: object
  additionalProperties: False
  properties:
    id:
      allOf:
        - $ref: ./fields.yaml#/id_string
      description: |
        This represents the id of the expense.<br><br>
        _Note: This field is required when you are updating an already created expense and want to check it again against the policy rules before saving the expense._
      example: 'tx0agOdICdbV'
    spent_at:
      allOf:
        - $ref: './fields.yaml#/spent_at'
      description: |
        It signifies when this expense was made. This date cannot be in future.<br><br>
        _Note: This field is mandatory when you are creating an expense and want to check it against the policy rules before saving the expense._
    source:
      $ref: './fields.yaml#/source'
    merchant:
      $ref: './fields.yaml#/merchant'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      allOf:
        - $ref: './fields.yaml#/foreign_amount'
      description: |
        Amount value of the expense, in original currency i.e the currency in which the expense was initially created.
    claim_amount:
      allOf:
        - $ref: './fields.yaml#/claim_amount'
      description: |
        The expense amount as claimed by user.<br><br>
        _Note: This field is mandatory when you are creating an expense and want to check it against the policy rules before saving the expense._
      example: 1984.18
    purpose:
      type: string
      example: Team lunch
      description: |
        Purpose of this expense.
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      description: |
        This represents the cost_center's id given by Fyle during creation of cost center
        for which this expense is created.
      nullable: true
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      description: |
        This represents the category's id given by Fyle during creation of category
        for which this expense is created.
      nullable: true
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      description: |
        This represents the project's id given by Fyle during creation of project
        for which this expense is created.
      nullable: true
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      description: |
        This represents the source account's id given by Fyle during creation of account type
        of user for which this expense is created.
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: |
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      description: |
        This represents the tax's group id given by Fyle during creation of tax group
        for which this expense is created.
      nullable: true
    is_billable:
      $ref: './fields.yaml#/is_billable'
    is_reimbursable:
      $ref: './fields.yaml#/is_reimbursable'
    distance:
      $ref: './fields.yaml#/distance'
    distance_unit:
      $ref: './fields.yaml#/distance_unit'
    started_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Specific to per diem related expenses. Start date from which per diem claim is made.
    ended_at:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Specific to per diem related expenses. End date until which per diem claim is made.
    travel_classes:
      $ref: './fields.yaml#/travel_classes'
    locations:
      $ref: './fields.yaml#/locations'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'
    num_files:
      type: integer
      description: |
        Number of files/reciepts attached to expense
      example: 4
    is_matching_ccc:
      type: boolean
      description: |
        Set this field to true if expense matches any card expense
      default: false
      example: false
    mileage_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      description: |
        Specific to mileage expense. This represents the Mileage's rate id given by Fyle
        during creation of mileage rate for which this expense is created.
      nullable: true
      example: 9080
    per_diem_rate_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      description: |
        Specific to per diem expense. This represents the per diem's rate id given by Fyle
        during creation of per diem rate for which this expense is created.
      nullable: true
      example: 583
    per_diem_num_days:
      type: integer
      nullable: true
      description: |
        Specific to per diem related expenses. Number of days for which per diem claim is made.
      example: 2
    invoice_number:
      type: string
      nullable: true
      maxLength: 255
      description: |
        Invoice number of the expense.
      example: 123456

    # TODO: Update the below remaining fields in this object based on how do we decide to do mileage calculations 
    # when mileage support comes to platform world. If we will give APIs for distance and amount calculation, 
    # then we will link the respective APIs in the description. If we decide to auto compute it in backend, then 
    # these fields might need to be dropped.
    mileage_calculated_distance:
      type: number
      nullable: true
      description: Specific to mileage expense. Distance computed by Fyle for mileage expenses.
    mileage_calculated_amount:
      type: number
      nullable: true
      description: Specific to mileage expense. Amount computed by Fyle for mileage expenses.

expense_check_policies_out:
  type: object
  additionalProperties: False
  properties:
    individual_desired_states:
      type: array
      items:
        $ref: ./fields.yaml#/expense_check_policies_individual_desired_states
    final_desired_state:
      $ref: ./fields.yaml#/expense_check_policies_final_desired_state

expense_delete_in:
  type: object
  required:
    - id
  properties:
    id:
      $ref: './fields.yaml#/id_string'


expenses_stats_in:
  properties:
    query_params:
      nullable: False
      type: string
      description: | 
        This field contains the query param string similar to the query params passed in expenses GET call for displaying expenses in the list view.
      example: id=in.('tx1263', 'tx1569')

expenses_stats_out:
  type: object 
  properties:
    count:
      type: integer
      nullable: False
      description: |
        This field represents the total number of expenses that match the criteria specified in the query_params within the body of the request.
      example: 1     
    total_amount:
      allOf:
        - $ref: './fields.yaml#/amount'
      description: |
        This field indicates the sum of amount of expenses that match the criteria specified in the query_params within the body of the request.
      example: 100

accounting_export_summary_in:
  type: object
  required: [ id, state, error_type, url ]
  properties:
    id:
      $ref: './fields.yaml#/id_string'
    state:
      type: string
      enum:
        - COMPLETE
        - ERROR
        - IN_PROGRESS
        - SKIPPED
        - INITIATED
      example: COMPLETE
    error_type:
      type: string
      nullable: true
      enum:
        - ACCOUNTING_INTEGRATION_ERROR
        - MAPPING
        - null
      example: ACCOUNTING_INTEGRATION_ERROR
    url:
      type: string
      description: URL Endpoint for exported / failed expense
      example: https://app.example.com/expense/txwownwrng  
spender_expense_check_mandatory_fields_in:
  type: object
  additionalProperties: false
  properties:
    id:
      allOf:
        - $ref: ./fields.yaml#/id_string
      description: |
        This represents the id of the expense.<br><br>
        _Note: This field is required when you are updating an already created expense and want to check it again for missing mandatory fields._
      example: 'tx0agOdICdbV'
    spent_at:
      allOf:
        - $ref: './fields.yaml#/spent_at'
      description: |
        It signifies when this expense was made. This date cannot be in future.<br><br>
        _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
    source:
      $ref: './fields.yaml#/source'
    merchant:
      $ref: './fields.yaml#/merchant'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    claim_amount:
      allOf:
        - $ref: './fields.yaml#/claim_amount'
      description: |
        The expense amount as claimed by user.<br><br>
        _Note: This field is mandatory when you are creating an expense and want to check it again for missing mandatory fields._
      example: 1984.18
    purpose:
      type: string
      example: Team lunch
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: |
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    is_billable:
      $ref: './fields.yaml#/is_billable'
    is_reimbursable:
      $ref: './fields.yaml#/is_reimbursable'
    distance:
      $ref: './fields.yaml#/distance'
    distance_unit:
      $ref: './fields.yaml#/distance_unit'
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    travel_classes:
      $ref: './fields.yaml#/travel_classes'
    locations:
      $ref: './fields.yaml#/locations'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'
    num_files:
      type: integer
      description: |
        Number of files/reciepts attached to expense
      example: 4
    invoice_number:
      type: string
      nullable: true
      maxLength: 255
      description: |
        Invoice number of the expense.
      example: 123456

expense_check_mandatory_fields_out:
  type: object
  additionalProperties: False
  required:
    - missing_amount
    - missing_currency
    - missing_receipt
    - missing_expense_field_ids
  properties:
    missing_amount:
      type: boolean
      description: |
        If this is set to true, then you need to send currency field with expense object.
      example: false
    missing_currency:
      type: boolean
      description: |
        If this is set to true, then you need to send currency field with expense object.
      example: false
    missing_receipt:
      type: boolean
      description: |
        If this is set to true, then you need to attach receipt to the expense.
      example: false
    missing_expense_field_ids:
      type: array
      nullable: False
      items:
        type: integer
        nullable: True
        description: |
          This id provided by Fyle to identify an expense field.
        example: 123
      example: [ 123, 12423 ]
      description: |
        List of IDs of expense fields which are mandatory but are missing.

expense_check_mandatory_fields_in:
  required:
    - id
  properties: # For admin & approver, expense will always be checked for mandatory fields in update case.
    id:
      $ref: ./fields.yaml#/id_string
    spent_at:
      $ref: './fields.yaml#/spent_at'
    claim_amount:
      $ref: './fields.yaml#/claim_amount'
  allOf:
    - $ref: ./expense.yaml#/spender_expense_check_mandatory_fields_in
    
expense_dismiss_duplicates_in:
  type: object
  required:
    - id
    - duplicate_expense_ids
  additionalProperties: False
  properties:
    id:
      $ref: './fields.yaml#/id_string'
    duplicate_expense_ids:
      type: array
      nullable: False
      items:
        $ref: './fields.yaml#/id_string'
      example: ['txwoirwlwwg', 'txwlgwkgw42']
      description: |
        List of expense IDs that needs to be dismissed as a duplicate from the target expense
  
expense_duplicate_sets_out:
  type: object
  additionalProperties: false
  properties:
    expense_ids:
      type: array
      nullable: False
      items:
        $ref: './fields.yaml#/id_string'
      example: ['txwoirwlwwg', 'txwlgwkgw42']
      description: |
        List of expense IDs that are part of the duplicate set

expense_verification_out_embed:
  type: object
  additionalProperties: false
  properties:
    verifier_user_id:
      allOf:
        - $ref: ./fields.yaml#/id_string
      example: usge49ielgel
    verifier_user:
      $ref: ./user.yaml#/user_out_embed

expense_split_object:
  type: object
  properties:
    spent_at:
      type: string
      format: date-time
      nullable: False
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
        - **Note:**
          - This field is required while creating an expense.
          - _Not required when updating an expense, but is non-nullable_. 
      example: '2020-06-01T01:18:19.292-08:00'
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    purpose:
      type: string
      example: Team lunch
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    custom_fields:
      $ref: './fields.yaml#/custom_fields'

split_expense_in:
  type: object
  properties:
    category_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 49058
    source:
      $ref: './fields.yaml#/source'
    spent_at:
      type: string
      format: date-time
      nullable: False
      description: |
        It signifies when this expense was made.
        This date cannot be in future.
        - **Note:**
          - This field is required while creating an expense.
          - _Not required when updating an expense, but is non-nullable_. 
      example: '2020-06-01T01:18:19.292-08:00'
    is_reimbursable:
      $ref: './fields.yaml#/is_reimbursable'
    travel_classes:
      $ref: './fields.yaml#/travel_classes'
    locations:
      $ref: './fields.yaml#/locations'
    foreign_currency:
      $ref: './fields.yaml#/foreign_currency'
    foreign_amount:
      $ref: './fields.yaml#/foreign_amount'
    project_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 92895
    file_ids:
      type: array
      items:
        allOf:
          - $ref: './fields.yaml#/id_string'
      description: |
        List of file IDs to be attached to the expense.
      example: ['fisjfwlrglw', 'fisjfwlrglw']
    cost_center_id:
      allOf:
        - $ref: './fields.yaml#/fk_integer'
      nullable: true
      example: 1049
    source_account_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      example: acwbl222wlg
    tax_amount:
      type: number
      nullable: true
      description: | 
        Tax amount as setup by your organization.
        - _Note:_
          - Tax amount cannot be greater than the expense amount.
    tax_group_id:
      allOf:
        - $ref: './fields.yaml#/fk_string'
      nullable: true
    started_at:
      $ref: './fields.yaml#/timestamptz_pst'
    ended_at:
      $ref: './fields.yaml#/timestamptz_pst'
    merchant:
      $ref: './fields.yaml#/merchant'
    purpose:
      type: string
      example: Team lunch
    is_billable:
      $ref: './fields.yaml#/is_billable'
    custom_fields:
      $ref: './fields.yaml#/custom_fields'

admin_expense_split_object:
  type: array
  items:
    required:
      - admin_amount
    allOf:
      - $ref: ./expense.yaml#/expense_split_object
    properties:
      admin_amount:
        type: number
        nullable: false
        description: |
          The expense amount which is added or modified by admin or approver.
        example: 1900

admin_split_expense_in:
  type: object
  required:
    - id
    - admin_amount
  allOf:
    - $ref: ./expense.yaml#/split_expense_in
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      description: |
       This id is provided by Fyle to identify an object
       - When `id` is sent, default action is to update the expense
    admin_amount:
      type: number
      nullable: false
      description: |
        The expense amount which is added or modified by admin or approver.
      example: 1900
    splits:
      description: |
        This array contains the number of split expenses admin wants to create for the expense.
        The `admin_amount` provided for the original expense should be equal to the sum of
        `admin_amount` provided for each split. Each attribute in the splits array will take precedence
        to the original expense object. If any attribute is not provided in the split object, then
        null or default value will be taken for that attribute in the resultant split.
      allOf:
        - $ref: ./expense.yaml#/admin_expense_split_object
