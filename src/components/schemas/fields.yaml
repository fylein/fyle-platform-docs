reason:
  type: string
  description: |
    Explanation to the action if provided by the user
  example: 'All bills are in order'

id_string:
  type: string
  maxLength: 15
  description: |
    This id is provided by Fyle to identify an object.
  example: 'sdfd2391'

fk_string:
  type: string
  nullable: true
  maxLength: 15
  description: |
    This id is provided by Fyle to identify an object.
  example: 'sdfd2391'

id_integer:
  type: integer
  description: |
    This id is provided by Fyle to identify an object.
  example: 1234

card_number:
  type: string
  description: |
    Specifies the masked number of the card.
    Add only masked card-numbers, last four digits of the card.
  example: xxxx-4543

fk_integer:
  type: integer
  nullable: true
  description: |
    This id is provided by Fyle to identify an object.
  example: 1234

org_id:
  type: string
  description: |
    The unique id of the Organization to which the object is associated.
  readOnly: true
  example: orwruogwnngg

org_id_in:
  type: string
  nullable: true
  description: |
    The unique id of the Organization to which the object is associated.
  example: orwruogwnngg

user_id:
  type: string
  description: |
    The unique id of an user to which the object is associated.
  readOnly: true
  example: uswjwgnwwgo

timestamptz_utc:
  type: string
  format: date-time
  nullable: True
  description:
    Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
  example: '2020-06-01T13:14:54.804+00:00'

timestamptz_pst:
  type: string
  format: date-time
  nullable: True
  description:
    Date-time in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
  example: '2020-06-01T01:18:19.292-08:00'

created_at:
  type: string
  format: date-time
  description: |
    Signifies when this object was created in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
  example: '2020-06-01T13:14:54.804+00:00'

updated_at:
  type: string
  format: date-time
  description: |
    Signifies when this object was updated in [ISO8601 format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
  example: '2020-06-11T13:14:55.201598+00:00'

is_enabled:
  type: boolean
  description: |
    This indicates if the resource is enabled for use within the organisation.
  default: true
  example: true

webhook_url:
  type: string
  description: |
    URL Endpoint for webhook
  example: 'https://api.custom.com/webhook1'

redirect_uri:
  type: string
  description: |
    URL where user needs to be redirected
  example: 'https://app.fylehq.com/app/...'

refresh_token:
  type: string
  description: |
    This is user refresh token, and is used to generate access_token
  example: xxxyyy.aaaa.aaa

name:
  type: string
  maxLength: 255
  description: |
    This represents the name of the resource. This should be unique in an organization
  example: foo123

org_name:
  type: string
  maxLength: 255
  description: |
    This represents the name of the organization. This should be unique for all organizations
  example: foo123

name_nullable:
  type: string
  maxLength: 255
  nullable: True
  description: |
    This represents the name of the resource. This should be unique in an organization
  example: foo123

bank_name:
  type: string
  description: |
    Specifies the name of bank who issued the card.
  example: Bank of America

description:
  type: string
  nullable: true
  maxLength: 255
  description: |
    This represents the description of the resource.
  example: Win the trophy

domain:
  type: string
  nullable: true
  maxLength: 255
  description: |
    This represents a tld domain name
  example: somebusineess.com

code:
  type: string
  nullable: true
  maxLength: 255
  description: |
    This represents a code that is typically used for syncing with other systems.
  example: C1234

category_ids:
  type: array
  description: |
    List of category ids.
  items:
    type: integer
    example: 16570

locations:
  description: |
    This field will be present for travel related categories.
    For travel between Place A to Place B, this array will contain two items. From location at array index i and To location at array index i+1.
  type: array
  nullable: true
  minItems: 0
  maxItems: 10
  items:
    $ref: './fields.yaml#/location'

travel_classes:
  description: |
    This field is applicable only for `Flight`, `Train`, `Bus` category.
    Index 0 holds onward journey travel class, index 1 holds return journey travel class.
  type: array
  minItems: 0
  maxItems: 2
  nullable: true
  items:
    type: string
  example:
    - ECONOMY
    - BUSINESS

vehicle_type:
  type: string
  enum:
    - bicycle
    - electric_car
    - four_wheeler
    - four_wheeler1
    - four_wheeler2
    - four_wheeler3
    - four_wheeler4
    - two_wheeler
  example: electric_car

distance_unit:
  type: string
  nullable: true
  description: Unit of distance travelled.
  enum:
    - KM
    - MILES
  example: MILES

distance:
  type: number
  nullable: true
  description: Actual distance travelled by employee in travel related expenses.

spent_at:
  allOf:
    - $ref: './fields.yaml#/timestamptz_pst'
  description: |
    It signifies when this expense was made.
    This date cannot be in future.

null_field:
  type: string
  nullable: true

source:
  type: string
  enum:
    - WEBAPP
    - SLACK
    - TPA
    - CORPORATE_CARD
  description: >
    Enum value signifying the client from which this expense was created
  example: SLACK

expense_policy_limit_type:
  nullable: true
  type: string
  enum:
    - INDIVIDUAL
    - DAILY
    - NIGHTLY
    - WEEKLY
    - MONTHLY
    - QUARTERLY
    - HALF_YEARLY
    - YEARLY
    - LIFETIME
    - null
  example: MONTHLY

contains_operator:
  nullable: true
  type: string
  enum:
    - IN
    - NOT_IN
    - null
  description: >
    Value signifying the operator for the field
  example: IN

expense_policy_rule_embed:
  type: object
  additionalProperties: false
  properties:
    id:
      type: string
      example: tpr1234abcd
      description: This represents the id of the expense policy rule that is violated for this expense.
    description:
      anyOf:
        - $ref: '#/description'
      description: |
        This represents the description of the expense policy rule that is violated for this expense.
      example: Receipt is mandatory for expense above $50
    action_show_warning:
      type: boolean
      description: |
        A true value here means that policy calculation suggests showing a warning when the user attempts to create an expense that violates this expense policy rule.
      example: True

expense_policy_expenses_query_object:
  type: object
  description: |
    An expense may be violating an expense policy rule due to a group of other expenses.
    These query params can be used to fetch those expenses because of which this expense is causing a violation. <br>
    Below params should be ANDed to get the correct list of violating expenses.
  properties:
    limit_start_date:
      type: string
      description: |
        Spend start date query param to find the list of violating expenses.
      example: "2021-12-01"
    limit_end_date:
      type: string
      description: |
        Spend end date query param to find the list of violating expenses.
      example: "2022-03-31"
    params:
        $ref: '#/expense_policy_expenses_query_object_params'

expense_check_policies_individual_desired_states:
  type: object
  properties:
    add_approver_user_ids:
      nullable: true
      type: array
      items:
        type: string
      description: |
        List of approver ids that the policy calculation suggests adding to report that contains this expense.
      example:
        - usBdsdfscl
        - usLSsdfwqt
    expense_policy_rule_id:
      type: string
      description: |
        This represents the id of the expense policy rule.
      example: "tprabsdfSYqd"
    expense_policy_rule:
      $ref: '#/expense_policy_rule_embed'
    run_status:
      nullable: false
      type: string
      enum:
        - VIOLATED_ACTION_SUCCESS
        - VIOLATED_ACTION_FAILURE
        - UNVIOLATED
      description: |
        This represents the status of policy computation for the input expense object against the policy represented by `expense_policy_rule_id`.
        If the state is `UNVIOLATED`, it means that the expense is not violating this policy. If the state is `VIOLATION_ACTION_SUCCESS`,
        it means that the expense is violating this policy and action stated in the object will be applied to the expense when it is saved.
        However, if the state is `VIOLATION_ACTION_FAILURE`, it means that this policy is violated for the expense but since some approver was
        missing or not set up properly, it will fail to take action on the expense when it is saved.
      example: SUCCESS
    run_result:
      type: array
      items:
        type: string
      description: |
        List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
        case some approver was not setup properly for the given violation, this array will contain description of
        missing approvers. For example, Department head, Project head, etc.
      example:
        - "flag the expense"
        - "cap the amount"
    amount:
      nullable: true
      anyOf:
        - $ref: '#/amount'
        - $ref: '#/null_field'
      description: |
        Amount that the policy calculation suggests for this expense.
      example: 500
    expenses_query_object_params:
      nullable: true
      $ref: '#/expense_policy_expenses_query_object'

expense_check_policies_final_desired_state:
  type: object
  properties:
    flag:
      type: boolean
      description: |
        A true value here means, that as per policy calculation this expense should be flagged.
      example: True
    amount:
      nullable: true
      anyOf:
        - $ref: '#/amount'
        - $ref: '#/null_field'
      description: |
        Amount that the policy calculation suggests for this expense.
      example: 500
    is_receipt_mandatory:
      type: boolean
      description: |
        A true value here means, that as per policy calculation this expense requires receipt.
      example: True
    add_approver_user_ids:
      nullable: true
      type: array
      items:
        type: string
      description: |
        List of approver ids that the policy calculation suggests adding to report that contains this expense.
      example:
        - usBdsdfscl
        - usLSsdfwqt
    remove_employee_approver1:
      type: boolean
      description: |
        A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
      example: True
    run_status:
      nullable: false
      type: string
      enum:
        - SUCCESS
        - FAILURE
      description: |
        This represent the run status of the policy.
      example: SUCCESS
    run_summary:
      type: array
      items:
        type: string
      description: |
        List of human-readable action summaries that the policy calculation suggests for this expense.
      example:
        - "flag the expense"
        - "cap the amount"

expense_policy_individual_desired_states:
  type: object
  properties:
    add_approver_user_ids:
      nullable: true
      type: array
      items:
        type: string
      description: |
        List of approver ids that the policy calculation suggests adding to report that contains this expense.
      example:
        - usBdsdfscl
        - usLSsdfwqt
    run_status:
      nullable: false
      type: string
      enum:
        - VIOLATED_ACTION_SUCCESS
        - VIOLATED_ACTION_FAILURE
        - UNVIOLATED
      description: |
        This represent the status of policy computation for an expense against the policy. If the state is
        `UNVIOLATED`, it means that the expense is not violating the policy. If the state is `VIOLATION_ACTION_SUCCESS`,
        it means that expense is violating the policy and action stated in the object will be applied to
        expense. However, if the state is `VIOLATION_ACTION_FAILURE`, it means that the policy is violated for the
        expense but since some approver was missing or not setup properly, it will fail to take action
        on the expense
      example: SUCCESS
    run_result:
      type: array
      items:
        type: string
      description: |
        List of human-readable action summaries that the policy calculation suggests for this expense. Note that, in
        case some approver was not setup properly for the given violation, this array will contain description of
        missing approvers. For example, Department head, Project head, etc.
      example:
        - "flag the expense"
        - "cap the amount"
    expense_id:
      type: string
      description: |
        This represents the id of the expense.
      example: "txabsdfSYqd"
    expense_policy_rule_id:
      type: string
      description: |
        This represents the id of the expense policy rule.
      example: "tprabsdfSYqd"
    rule:
      $ref: '#/expense_policy_rule_embed'
    amount:
      nullable: true
      anyOf:
        - $ref: '#/amount'
        - $ref: '#/null_field'
      description: |
        Amount that the policy calculation suggests for this expense.
      example: 500
    expenses_query_object_params:
      nullable: true
      $ref: '#/expense_policy_expenses_query_object'

expense_policy_expenses_query_object_params:
  type: object
  properties:
    category_id:
      type: string
      description: |
        Category ids query param to find the list of expenses.
      example: "in.(60506)"
    project_id:
      type: string
      description: |
        Project ids query param to find the list of expenses.
      example: "in.(261155)"
    cost_center_id:
      type: string
      description: |
        Cost center ids query param to find the list of expenses.
      example: "in.(7475)"
    currency:
      type: string
      description: |
        Currency query param to find the list of expenses.
      example: "eq.USD"
    mileage_rate_id:
      type: string
      description: |
        Mileage rate query param to find the list of expenses.
      example: "eq.2"
    employee_id:
      type: string
      description: |
        Employee id query param to find the list of expenses.
      example: "eq.ouNSnadfaLA"

expense_policy_final_desired_state:
  type: object
  properties:
    expense_id:
      type: string
      description: |
        This represents the id of the expense.
      example: "txabsdfSYqd"
    flag:
      type: boolean
      description: |
        A true value here means, that as per policy calculation this expense should be flagged.
      example: True
    amount:
      nullable: true
      anyOf:
        - $ref: '#/amount'
        - $ref: '#/null_field'
      description: |
        Amount that the policy calculation suggests for this expense.
      example: 500
    is_receipt_mandatory:
      type: boolean
      description: |
        A true value here means, that as per policy calculation this expense requires receipt.
      example: True
    add_approver_user_ids:
      nullable: true
      type: array
      items:
        type: string
      description: |
        List of approver ids that the policy calculation suggests adding to report that contains this expense.
      example:
        - usBdsdfscl
        - usLSsdfwqt
    remove_employee_approver1:
      type: boolean
      description: |
        A true value here means, that as per policy calculation, the employee's first approver should be removed from the report that contains this expense.
      example: True
    run_status:
      nullable: false
      type: string
      enum:
        - SUCCESS
        - FAILURE
      description: |
        This represent the run status of the policy.
      example: SUCCESS
    run_summary:
      type: array
      items:
        type: string
      description: |
        List of human-readable action summaries that the policy calculation suggests for this expense.
      example:
        - "flag the expense"
        - "cap the amount"

policy_payment_modes:
  nullable: true
  type: array
  items:
    type: string
    enum:
      - PERSONAL_CASH_ACCOUNT
      - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
      - COMPANY_ACCOUNT
      - null
  example: PERSONAL_CASH_ACCOUNT
report_source:
  type: string
  enum:
    - WEBAPP
    - MOBILE
    - TPA
    - SLACK
  description: >
    Enum value signifying the client from which this expense was created
  example: SLACK

merchant:
  type: string
  maxLength: 255
  nullable: true
  description: |
    String denoting the name of the vendor to which the expense was made.
  example: Uber

is_billable:
  type: boolean
  nullable: true
  example: true
  description: This field marks whether a given expense is billable or not.

is_reimbursable:
  type: boolean
  nullable: true
  description: This field marks whether a given expense is reimbursable or not.
  example: true

claim_amount:
  type: number
  description: |
    The expense amount as claimed by user.
  example: 1984.18

role:
  type: string
  enum:
    - FYLER
    - APPROVER
    - ACCOUNTANT
    - TRAVEL_ADMIN
    - VERIFIER
    - PAYMENT_PROCESSOR
    - FINANCE
    - ADMIN
    - TRAVEL_AGENT
    - OWNER
    - AUDITOR
    - HOD
    - HOP
  description: |
    Roles are assigned by Admin.
  example: FYLER

email:
  type: string
  # format: email
  maxLength: 127
  example: john.doe@example.com
  description: >
    An immutable field that represents the email address of the employee.

    Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
    822.</a>

custom_field:
  type: object
  description: |
    Custom field
  properties:
    name:
      type: string
      example: cf1
    value:
      nullable: true
      oneOf:
        - type: string
          example: string1
        - type: boolean
          example: True
        - type: integer
          example: 123
        - $ref: '#/location'
        - type: array
          items:
            type: string
          example: [ 'v1', 'v2' ]

custom_fields:
  type: array
  description: |
    Custom fields
  items:
    $ref: '#/custom_field'

flattened_custom_field:
  type: object
  description: |
    Custom fields array transformed into key value pairs
  properties:
    cf1:
      nullable: true
      oneOf:
        - type: string
          example: string1
        - type: boolean
          example: True
        - type: integer
          example: 123
        - $ref: '#/location'
        - type: array
          items:
            type: string
          example: [ 'string1', 'string2' ]
  

currency:
  type: string
  description: >
    The three-letter currency code following ISO standard <a
    href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
  example: USD
  pattern: '([A-Z]{3})'

amount:
  type: number
  description: |
    amount of money
  example: 47.99

foreign_currency:
  type: string
  nullable: true
  description: >
    The three-letter currency code following ISO standard <a
    href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.
  example: GBP

foreign_amount:
  type: number
  nullable: true
  description: >
    Amount value of the object, in original currency i.e the currency in which the
    object was initially created.
  example: 3768.00

employee_id:
  type: string
  maxLength: 255
  description: >
    This id provided by Fyle to uniquely identify an employee
    within an organization.

    This id is always prefixed with `ou`.
  example: outGt9ju6qP

department_id:
  type: string
  maxLength: 255
  nullable: true
  example: dept9in4oIHpdR

activity_details:
  type: object
  nullable: true
  properties:
    unique_meetings:
      type: number
      nullable: False
      example: 21
    total_meetings:
      type: number
      nullable: False
      example: 70

extracted_data:
  type: object
  nullable: True
  properties:
    amount:
      type: number
      nullable: True
      example: 21
    vendor_name:
      type: string
      nullable: True
      example: Uber
    currency:
      type: string
      nullable: True
      example: USD
    category:
      type: string
      nullable: True
      example: Taxi
    date:
      type: string
      nullable: True
      example: '2020-07-20'


location:
  type: object
  nullable: true
  properties:
    city:
      type: string
      nullable: true
      example: London
    state:
      type: string
      nullable: true
      example: London
    display_name:
      type: string
      nullable: true
    country:
      type: string
      nullable: true
      example: United Kingdom
    formatted_address:
      type: string
      nullable: true
      example: '221 Baker St, Marylebone, London, United Kingdom'
    latitude:
      type: number
      nullable: true
      example: 12.971599
    longitude:
      type: number
      nullable: true
      example: 77.594566

missing_mandatory_fields:
  type: object
  nullable: False
  properties:
    expense_field_ids:
      type: array
      nullable: False
      items:
        type: integer
        nullable: True
        description: |
          This id provided by Fyle to identify an expense field.
        example: 123
      example: [ 123, 12423 ]
      description: |
        List of IDs of expense fields which are mandatory but are missing.
    amount:
      type: boolean
      nullable: False
      description: |
        This field shows whether the amount field is present in the expense or not
    currency:
      type: boolean
      nullable: False
      description: |
        This field shows whether the currency field is present in the expense or not
  description: |
    This object contains all the fields which are mandatory bu tare missing in the expense.


schedule_config:
  type: object
  nullable: false
  properties:
    type:
      nullable: false
      type: string
      example: interval
      enum:
        - interval
        - date
        - cron
    when:
      nullable: false
      oneOf:
        - type: object
          additionalProperties: false
          properties:
            weeks:
              type: number
              example: 2
            days:
              type: number
              example: 12
            hours:
              type: number
              example: 6
            minutes:
              type: number
              example: 30
            seconds:
              type: number
              example: 30
            end_date:
              nullable: true
              type: string
              example: '2020-11-11T16:29:30.965869Z'
            start_date:
              nullable: true
              type: string
              example: '2020-11-11T16:29:30.965869Z'
            timezone:
              nullable: true
              type: string
              example: UTC
            jitter:
              nullable: true
              type: number
              example: 20
        - type: object
          additionalProperties: false
          properties:
            year:
              type: string
              example: 2022
            month:
              type: string
              example: 10
            day:
              type: string
              example: last, 15
            week:
              type: string
              example: 2
            day_of_week:
              type: string
              example: mon
            hour:
              type: string
              example: 23
            minute:
              type: string
              example: 23
            second:
              type: string
              example: 23
            end_date:
              nullable: true
              type: string
              example: '2020-11-11T16:29:30.965869Z'
            start_date:
              nullable: true
              type: string
              example: '2020-11-11T16:29:30.965869Z'
        - type: object
          additionalProperties: false
          properties:
            run_date:
              nullable: true
              type: string
              example: '2021-05-12T10:16:50.410Z'

event_payload:
  nullable: true
  type: object
  properties:
    resource_id:
      nullable: true
      type: string
      example: tx123TRew12
    resource_name:
      nullable: true
      type: string
      example: TRANSACTION

budget_type:
  nullable: false
  type: string
  enum:
    - WEEKLY
    - MONTHLY
    - QUARTERLY
    - HALF_YEARLY
    - YEARLY
    - ONE_TIME
  description: |
    Type of budgets
  example: WEEKLY


restricted_spender_user_ids:
  type: array
  nullable: True
  items:
    type: string
    nullable: True
    maxLength: 15
    description: |
      This id is provided by Fyle to identify an object.
    example: 'uswoirwlwwg'
  example: [ 'uswoirwlwwg', 'uswlgwkgw42' ]
  description: |
    List of IDs of users who can access this object.

approver_user_ids:
  type: array
  nullable: False
  maxItems: 2
  items:
    type: string
    nullable: True
    maxLength: 15
    description: |
      This id is provided by Fyle to identify an object.
    example: 'uswoirwlwwg'
  example: [ 'uswoirwlwwg', 'uswlgwkgw42' ]
  description: |
    List of IDs of users who are approvers of the project.

reminder_receiver_user_ids:
  type: array
  nullable: True
  items:
    type: string
    nullable: False
    description: |
      This id is provided by Fyle to identify an object.
    example: 'uswoirwlwwg'
  example: [ 'uswoirwlwwg', 'uswlgwkgw42' ]
  description: |
    List of IDs of users to whom this reminder will be sent.

reminder_type:
  type: string
  enum:
    - FYLE_EXPENSES
    - REPORT_EXPENSES
    - APPROVE_REPORTS
    - VERIFY_EMPLOYEES
    - MATCH_CORPORATE_CARD_TRANSACTIONS
    - APPROVE_ADVANCE_REQUESTS
    - RESUBMIT_ADVANCE_REQUESTS
    - MATCH_ADVANCES
    - VERIFY_EMPLOYEES
    - ADD_CORPORATE_CARDS
    - CONNECT_VISA_RTF
    - VERIFY_VISA_CARD
    - CONNECT_MASTERCARD_RTF
    - PROCESS_REPORTS
    - VERIFY_REPORTS
  maxLength: 255
  description: Represents the type of reminder.
  example: FYLE_EXPENSES

reminder_schedule_config:
  description: description of weekly/monthly schedule for sending scheduled reminder
  type: object
  nullable: true
  properties:
    type:
      nullable: false
      type: string
      example: cron
      enum:
        - cron
    when:
      nullable: false
      type: object
      additionalProperties: false
      properties:
        day:
          type: number
          description: day of month (1-31)
          example: 16
        day_of_week:
          type: string
          enum:
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
            - sun
          description: name of weekday
          example: mon
        hour:
          type: number
          example: 22
          description: hour of the day in 24-hr format (0-23)
        minute:
          type: number
          example: 42
          description: minute of the hour

project_display_name:
  type: string
  nullable: false
  description: |
    String denoting the display name of a project.
  example: Westeros / Casterly rocks

category_display_name:
  type: string
  nullable: false
  description: |
    String denoting the display name of a category.
  example: Wildlings / Thenns

department_display_name:
  type: string
  nullable: false
  description: |
    String denoting the display name of a department.
  example: Knights / Kingsguard

user_full_name:
  type: string
  maxLength: 255
  description: |
    String denoting the full name of an employee.
  example: Jon Snow

time_interval_granularity:
  type: string
  nullable: False
  enum:
    - day
    - month
    - quarter
    - year
  description: |
    The time duration by which to group expenses to aggregate sum of amount
  example: month

total_amount:
  type: number
  nullable: False
  description: |
    Total sum of amount of expenses falling under filtering criteria
  example: 990

time_interval_marker:
  type: string
  nullable: False
  description: |
    Representation of a point in time for which the sum of amount of expenses is calculated.
    Value depends of value of time_interval_granularity as follows :
    - for time_interval_granularity of `day`, value will be in date format YYYY-MM-DD. Example : 2021-01-01
    - for time_interval_granularity of `month`, value will be in date format YYYY-MM. Example : 2021-01
    - for time_interval_granularity of `quarter`, value will be in date format YYYY-QQ. Example : 2021-Q1
    - for time_interval_granularity of `year`, value will be in date format YYYY. Example : 2021
  example: 2022-02

spend_overview_percentage:
  type: number
  description: |
    Percentage of spend which falls under this object/resource after filtering criteria is applied.
  example: 10.34

spend_overview_change_percentage:
  type: number
  description: |
    Change in percentage of spend compared to spend in same time period one time interval ago, after filtering criteria is applied.
  example: -4.95


department_head_user_ids:
  type: array
  nullable: False
  maxItems: 1
  items:
    type: string
    nullable: True
    maxLength: 15
    description: |
      This id is provided by Fyle to identify an object.
    example: 'uswoirwlwwg'
  example: [ 'uswoirwlwwg' ]
  description: |
    List of IDs of users who are head of the department.

allow_users:
  type: string
  nullable: false
  description: |
    Set who can access the object.
    - `ALL` indicates the object can be accessible to all users in the org.
    - `NONE` indicates the object cannot be accessible to any user in the org.
    - `UNRESTRICTED` indicates the object will be be accessible to all users in the org who are not restricted to
    specific objects of this resource.
  enum:
    - ALL
    - NONE
    - UNRESTRICTED
  example: UNRESTRICTED

account_minimal:
  description: |
    Account of a user belonging to any org
  type: object
  nullable: False
  properties:
    id:
      allOf:
        - $ref: './fields.yaml#/id_string'
      example: 'acwbl222wlg'
    currency:
      $ref: './fields.yaml#/currency'
    current_balance_amount:
      type: number
      example: 50.0
    tentative_balance_amount:
      type: number
      example: 100.0


phone_number:
  type: string
  example: '+12131234567'
  maxLength: 16
  description: >
      phone number is represented by +CC MMMMMM... where CC is the country code, and is one to three digits, and MMMMMM... is the area code (where applicable) and subscriber number Max 12 digits
  pattern: '/^(\+\d{1,3}[- ]?)?\d{10}$/'


bank_ifsc:
  type: string
  example: 'SBIN0007587'
  maxLength: 11
  description: >
      IFSC code of the bank account of the Employee
  pattern: '^[A-Z]{4}0[A-Z0-9]{6}$'

ach_transfer:
  type: object
  properties:
    state:
      nullable: true
      anyOf:
        - $ref: '#/ach_transfer_state'
        - $ref: '#/null_field'
    status_info:
      type: string
      description: >
        Description of current status of the payment.
      example: Kindly ask the employee to add a valid bank account in their Settings. You'll then be able to see the bank icon next to the payment number, after which you can retry the payment.
    initiated_at: 
      nullable: true
      anyOf:
        - $ref: '#/timestamptz_utc'
        - $ref: '#/null_field'
      description: |
        signifies when the ach payment was initiated.
    source_account_ach_reference_id:
      nullable: true
      type: string
      description: | 
       Signifies the source of ach transfer reference code.
      example: IMJYXG4G
    destination_account_ach_reference_id:
      nullable: true
      type: string
      description: | 
       Signifies the destination of ach transfer reference code.
      example: II7P2228Z
    

ach_transfer_state:
  type: string
  enum:
    - ACH_FAILED
    - ACH_INITIATED
    - ACH_COMPLETE
    - ACH_RETRY
  description: >
    Status of ACH if this reimbursment is processed via ACH.
  example: ACH_FAILED

delegatees:
  type: object
  additionalProperties: False
  properties:
    user_id:
      $ref: '#/user_id'
    start_at:
      type: string
      format: date-time
      example: '2020-06-11T13:14:55.201598+00:00'
      description: |
        Date and time from which the delegation is active.
      nullable: False   
    end_at:
      type: string
      format: date-time
      example: '2020-07-11T13:14:55.201598+00:00'
      description: |
        Date and time till which the delegation is active. If null, delegation is active indefinitely.
      nullable: True

locale:
  type: object
  nullable: True
  additionalProperties: False
  properties:
    abbreviation:
      type: string
      nullable: False
      maxLength: 4
      example: 'IST'
      description: >
        Represents the abbreviation of the employee's locale.
    offset:
      type: string
      nullable: False
      maxLength: 9
      example: '05:30:00'
      description: >
        Represents the offset of the employee's timezone from UTC.
    timezone:
      type: string
      nullable: False
      maxLength: 19
      example: 'Asia/Kolkata'
      description: >
        Represents the timezone of the employee.
  description: |
    Location and timezone settings of the employee.

mileage_settings:
  type: object
  nullable: True
  additionalProperties: False
  properties:
    mileage_rate_labels:
      type: array
      nullable: True
      items:
        type: string
        example: 'four_wheeler'
      example: ['four_wheeler', 'two_wheeler']
    annual_mileage_of_user_before_joining_fyle:
      type: object
      nullable: True
      items:
        type: object
      example:
        "two_wheeler": 44
  description: |
    Mileage settings of the employee.

filter_name:
  type: string
  nullable: false
  maxLength: 255
  description: |
    This represents the name of the filter.
  example: Code E0101

shared:
  type: boolean
  nullable: true
  description: |
    This indicates if the filter should be shared with other admins in the org.
  default: false
  example: true

query_string:
  type: string
  nullable: false
  maxLength: 255
  description: |
    This represents a query string which will be used to filter the data.
  example: code.eq.'E0101'

split_group_amount:
  type: number
  nullable: true
  description: |
    The amount of expense before splitting.
  example: 3768.00
