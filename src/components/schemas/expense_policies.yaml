expense_policy_in:
  type: object
  required:
    - source
    - description
  additionalProperties: False
  properties:
    id:
      allOf:
        - $ref: ./fields.yaml#/id_string
      description: |
        This represents the id of the expense policy.<br><br>
        When creating the policy, this field shouldn't be set.<br>
        When updating, this field should be set.
      example: 'tpr12345xyz'
    description:
      allOf:
        - $ref: ./fields.yaml#/description
      nullable: false
      description: |
        This represents the description of the expense policy.
      example: Receipt is mandatory for expense above $50
    source:
      $ref: ./fields.yaml#/expense_policy_source
    expense_limit_type:
      $ref: ./fields.yaml#/expense_policy_limit_type
    expense_currency:
      $ref: ./fields.yaml#/currency
    expense_amount_max:
      allOf:
        - $ref: ./fields.yaml#/amount
      description: |
        Maximum amount above which policy will be violated.
      example: 10000
    expense_amount_min:
      allOf:
        - $ref: ./fields.yaml#/amount
      description: |
        Minimum amount below which policy will be violated.
      example: 500
    expense_distance_max:
      allOf:
        - $ref: ./fields.yaml#/distance
      description: |
        Maximum travel distance allowed, above which policy will be violated. `expense_category_ids` must be set with mileage categories.
      example: 10000
    expense_distance_min:
      allOf:
        - $ref: ./fields.yaml#/distance
      description: |
        Minimum travel distance allowed, below which policy will be violated. `expense_category_ids` must be set with mileage categories.
      example: 500
    expense_category_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
          List of category ids targeted by this policy. <br><br>
          To include these categories set `expense_category_ids_op` to `IN`<br>
          To exclude these categories set `expense_category_ids_op` to `NOT_IN`<br>
      example: [2222, 1221]
    expense_category_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_project_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
        List of project ids targeted by this policy. <br><br>
        To include these projects set `expense_category_ids_op` to `IN`<br>
        To exclude these projects set `expense_category_ids_op` to `NOT_IN`<br>
      example: [1234, 5678]
    expense_project_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_cost_center_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
        List of cost centers ids targeted by this policy. <br><br>
        To include these cost centers set `expense_category_ids_op` to `IN`<br>
        To exclude these cost centers set `expense_category_ids_op` to `NOT_IN`<br>
      example: [1987, 3456]
    expense_cost_center_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_exchange_rate_difference_percentage_allowed:
      type: number
      description: |
        Allowed percentage difference for exchange rates above which policy will be violated.
      example: 10
      minimum: 0
      maximum: 100
    expense_distance_difference_percentage_allowed:
      type: number
      description: |
        Allowed percentage difference for travel distance above which policy will be violated. `expense_category_ids` must be set with mileage categories.
      example: 8
      minimum: 0
      maximum: 100
    expense_custom_fields:
      $ref: './fields.yaml#/custom_fields'
    expense_custom_fields_op:
      type: object
      description: |
        Expense custom field operator. <br>
        field_name: operator <br>
        Example -> gender: "IN" <br><br>
        If field type is, then supported are: <br>
        `Boolean`: "IS, NOT_IS" <br>
        `Date`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `Location`: "IN, NOT_IN" <br>
        `Number`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `String`: "CONTAINS, EQUALS" <br>
        `Select`: "IN, NOT_IN"
      properties:
        field_name:
          type: string
    expense_locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
      type: array
      items:
        $ref: './fields.yaml#/location'
    expense_locations_op:
      $ref: ./fields.yaml#/in_operator
    expense_creation_delay_days_max:
      type: number
      example: 12
      description: |
        No of days from spent date after which if expense is created will violate policy.
    expense_on_holiday_allowed:
      type: boolean
      example: True
    expense_without_receipt_allowed:
      type: boolean
      example: True
    expense_spent_at_max:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Expense having spent date greater than this date will violate policy.
    expense_spent_at_min:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Expense having spent date lesser than this date will violate policy.
    expense_payment_modes:
      allOf:
        - $ref: ./fields.yaml#/minimal_payment_modes
      description: |
        Payment mode for expense to be targeted in the policy.
    expense_payment_modes_op:
      $ref: ./fields.yaml#/in_operator
    expense_without_ccc_match_allowed:
      type: boolean
      description: |
        Is expense without Corporate Credit Card transaction match allowed.
      example: True
    expense_include_foreign_currency:
      type: boolean
      description: |
        Should policy run on expenses created in foreign currency.
      example: True
    expense_flight_travel_class:
      $ref: ./fields.yaml#/flight_travel_classes
    expense_train_travel_class:
      $ref: ./fields.yaml#/train_travel_classes
    fiscal_year_start_month:
      type: number
      description: Month number of start of fiscal year.
      example: 4
      minimum: 1
      maximum: 12
    expense_vehicle_type:
      allOf:
        - $ref: ./fields.yaml#/vehicle_type
      description: |
        Vehicle type targeted by this policy.
    expense_annual_distance_max:
      type: number
      example: 1200
      description: |
        Maximum travel distance allowed, above which policy will be violated. `expense_category_ids` must be set with mileage categories.
    employee_level_ids:
      type: array
      description: |
        Employee level ids targeted by this policy.
      items:
        type: string
      example:
        - lvl1sdfad
        - lvl2sdfas
    employee_level_ids_op:
      $ref: ./fields.yaml#/in_operator
    employee_custom_fields:
      $ref: './fields.yaml#/custom_fields'
    employee_custom_fields_op:
      type: object
      description: |
        Exmployee custom field operator. <br>
        field_name: operator <br>
        Example -> gender: "IN" <br><br>
        If field type is, then supported are: <br>
        `Boolean`: "IS, NOT_IS" <br>
        `Date`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `Location`: "IN, NOT_IN" <br>
        `Number`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `String`: "CONTAINS, EQUALS" <br>
        `Select`: "IN, NOT_IN"
      properties:
        field_name:
          type: string
    employee_department_ids:
      type: array
      description: |
        Employee department ids targeted by this policy.
      items:
        type: string
      example:
        - dept1asdfa
        - dept2adfad
    employee_department_id_op:
      $ref: ./fields.yaml#/in_operator
    employee_locations:
      description: |
        Location of employees targeted by this policy.
      type: array
      items:
        $ref: './fields.yaml#/location'
    employee_locations_op:
      $ref: ./fields.yaml#/in_operator
    employee_user_ids:
      type: array
      description: |
        Employee user ids targeted by this policy.
      items:
        type: string
      example:
        - usabcds1
        - usabcds2
    employee_user_ids_op:
      $ref: ./fields.yaml#/in_operator
    employee_titles:
      type: array
      description: |
        Employee titles targeted by this policy.
      items:
        type: string
      example:
        - CEO
        - Manager
    employee_titles_op:
      $ref: ./fields.yaml#/in_operator
    action_flag:
      type: boolean
      description: |
        Whether to flag the expense when it violates policy.
      example: True
    action_show_warning:
      type: boolean
      description: |
        Whether to show warning to employee when the expense that they are creating violates the policy.
      example: True
    action_make_unreportable:
      type: boolean
      description: |
        Whether to make the expense unreportable when it violates policy. <br>
        (Expense will be created but employee will not be able to add it to report)
      example: True
    action_remove_employee_approver1:
      type: boolean
      description: |
        Whether to remove the primary approver from the report when the expense violates policy.
      example: True
    action_add_employee_approver2:
      type: boolean
      description: |
        Whether to add secondary approver 1 as approver to report when the expense violates policy.
      example: True
    action_add_employee_approver3:
      type: boolean
      description: |
        Whether to add secondary approver 2 as approver to report when the expense violates policy.
      example: True
    action_add_project_approver1:
      type: boolean
      description: |
        Whether to add project approver 1 as approver to report when the expense violates policy.
      example: True
    action_add_project_approver2:
      type: boolean
      description: |
        Whether to add project approver 2 as approver to report when the expense violates policy.
      example: True
    action_add_department_head_approver:
      type: boolean
      description: |
        Whether to add department head as approver to report when the expense violates policy.
      example: True
    action_cap_amount:
      type: boolean
      description: |
        Whether to cap the amount to `expense_amount_max` when the expense violates policy.
      example: True
    action_add_approver_user_ids:
      type: array
      description: |
        List of approver user ids to be added to report when the expense violates policy.
      items:
        type: string
      example:
        - usabcds3
        - usabcds4
    action_override_distance_slab_rate:
      type: number
      description: |
        Override the distance slab rate with the set value when the expense violates policy.
      example: 20

expense_policy_out:
  type: object
  additionalProperties: False
  properties:
    id:
      allOf:
        - $ref: ./fields.yaml#/id_string
      description: |
        This represents the id of the expense policy.
      example: 'tpr12345xyz'
    description:
      allOf:
        - $ref: ./fields.yaml#/description
      nullable: false
      description: |
        This represents the description of the expense policy.
      example: Receipt is mandatory for expense above $50
    source:
      $ref: ./fields.yaml#/expense_policy_source
    expense_limit_type:
      $ref: ./fields.yaml#/expense_policy_limit_type
    expense_currency:
      $ref: ./fields.yaml#/currency
    expense_amount_max:
      allOf:
        - $ref: ./fields.yaml#/amount
      description: |
        Maximum amount above which policy will be violated.
      example: 10000
    expense_amount_min:
      allOf:
        - $ref: ./fields.yaml#/amount
      description: |
        Minimum amount below which policy will be violated.
      example: 500
    expense_distance_max:
      allOf:
        - $ref: ./fields.yaml#/distance
      description: |
        Maximum travel distance allowed, above which policy will be violated.
      example: 10000
    expense_distance_min:
      allOf:
        - $ref: ./fields.yaml#/distance
      description: |
        Minimum travel distance allowed, below which policy will be violated.
      example: 500
    expense_category_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
          List of category ids targeted by this policy. <br><br>
          If `expense_category_ids_op` is `IN` then these categories will be included<br>
          If `expense_category_ids_op` is `NOT_IN` then these categories will be excluded<br>
      example: [2222, 1221]
    expense_category_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_project_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
        List of project ids targeted by this policy. <br><br>
        If `expense_project_ids_op` is `IN` then these projects will be included<br>
        If `expense_project_ids_op` is `NOT_IN` then these projects will be excluded<br>
      example: [1234, 5678]
    expense_project_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_cost_center_ids:
      type: array
      items:
        $ref: './fields.yaml#/id_integer'
      description: |
        List of cost centers ids targeted by this policy. <br><br>
        If `expense_cost_center_ids_op` is `IN` then these cost centers will be included<br>
        If `expense_cost_center_ids_op` is `NOT_IN` then these cost centers will be excluded<br>
      example: [1987, 3456]
    expense_cost_center_ids_op:
      $ref: ./fields.yaml#/in_operator
    expense_exchange_rate_difference_percentage_allowed:
      type: number
      description: |
        Allowed percentage difference for exchange rates above which policy will be violated.
      example: 10
      minimum: 0
      maximum: 100
    expense_distance_difference_percentage_allowed:
      type: number
      description: |
        Allowed percentage difference for travel distance above which policy will be violated.
      example: 8
      minimum: 0
      maximum: 100
    expense_custom_fields:
      $ref: './fields.yaml#/custom_fields'
    expense_custom_fields_op:
      type: object
      description: |
        Expense custom field operator. <br>
        field_name: operator <br>
        Example -> gender: "IN" <br><br>
        If field type is, then supported are: <br>
        `Boolean`: "IS, NOT_IS" <br>
        `Date`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `Location`: "IN, NOT_IN" <br>
        `Number`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `String`: "CONTAINS, EQUALS" <br>
        `Select`: "IN, NOT_IN"
      properties:
        field_name:
          type: string
    expense_locations:
      description: |
        This field will be present for travel related categories.
        For travel between Place A to Place B, this array will contain two items, From location at array index 0 and To location at array index 1.
      type: array
      items:
        $ref: './fields.yaml#/location'
    expense_locations_op:
      $ref: ./fields.yaml#/in_operator
    expense_creation_delay_days_max:
      type: number
      example: 12
      description: |
        No of days from spent date after which if expense is created will violate policy.
    expense_on_holiday_allowed:
      type: boolean
      example: True
    expense_without_receipt_allowed:
      type: boolean
      example: True
    expense_spent_at_max:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Expense having spent date greater than this date will violate policy.
    expense_spent_at_min:
      allOf:
        - $ref: './fields.yaml#/timestamptz_pst'
      description: |
        Expense having spent date lesser than this date will violate policy.
    expense_payment_modes:
      allOf:
        - $ref: ./fields.yaml#/minimal_payment_modes
      description: |
        Payment mode for expense to be targeted in the policy.
    expense_payment_modes_op:
      $ref: ./fields.yaml#/in_operator
    expense_without_ccc_match_allowed:
      type: boolean
      description: |
        Is expense without Corporate Credit Card transaction match allowed.
      example: True
    expense_include_foreign_currency:
      type: boolean
      description: |
        Should policy run on expenses created in foreign currency.
      example: True
    expense_flight_travel_class:
      $ref: ./fields.yaml#/flight_travel_classes
    expense_train_travel_class:
      $ref: ./fields.yaml#/train_travel_classes
    fiscal_year_start_month:
      type: number
      description: Month number of start of fiscal year.
      example: 4
      minimum: 1
      maximum: 12
    expense_vehicle_type:
      allOf:
        - $ref: ./fields.yaml#/vehicle_type
      description: |
        Vehicle type targeted by this policy.
    expense_annual_distance_max:
      type: number
      example: 1200
      description: |
        Maximum travel distance allowed above which policy will be violated.
    employee_level_ids:
      type: array
      description: |
        Employee level ids targeted by this policy.
      items:
        type: string
      example:
        - lvl1sdfad
        - lvl2sdfas
    employee_level_ids_op:
      $ref: ./fields.yaml#/in_operator
    employee_custom_fields:
      $ref: './fields.yaml#/custom_fields'
    employee_custom_fields_op:
      type: object
      description: |
        Exmployee custom field operator. <br>
        field_name: operator <br>
        Example -> gender: "IN" <br><br>
        If field type is, then supported are: <br>
        `Boolean`: "IS, NOT_IS" <br>
        `Date`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `Location`: "IN, NOT_IN" <br>
        `Number`: "LESS_THAN_EQUAL_TO, GREATER_THAN_EQUAL_TO" <br>
        `String`: "CONTAINS, EQUALS" <br>
        `Select`: "IN, NOT_IN"
      properties:
        field_name:
          type: string
    employee_department_ids:
      type: array
      description: |
        Employee department ids targeted by this policy.
      items:
        type: string
      example:
        - dept1asdfa
        - dept2adfad
    employee_department_id_op:
      $ref: ./fields.yaml#/in_operator
    employee_locations:
      description: |
        Location of employees targeted by this policy.
      type: array
      items:
        $ref: './fields.yaml#/location'
    employee_locations_op:
      $ref: ./fields.yaml#/in_operator
    employee_user_ids:
      type: array
      description: |
        Employee user ids targeted by this policy.
      items:
        type: string
      example:
        - usabcds1
        - usabcds2
    employee_user_ids_op:
      $ref: ./fields.yaml#/in_operator
    employee_titles:
      type: array
      description: |
        Employee titles targeted by this policy.
      items:
        type: string
      example:
        - CEO
        - Manager
    employee_titles_op:
      $ref: ./fields.yaml#/in_operator
    action_flag:
      type: boolean
      description: |
        Whether to flag the expense when it violates policy.
      example: True
    action_show_warning:
      type: boolean
      description: |
        Whether to show warning to employee when the expense that they are creating violates the policy.
      example: True
    action_make_unreportable:
      type: boolean
      description: |
        Whether to make the expense unreportable when it violates policy. <br>
        (Expense will be created but employee will not be able to add it to report)
      example: True
    action_remove_employee_approver1:
      type: boolean
      description: |
        Whether to remove the primary approver from the report when the expense violates policy.
      example: True
    action_add_employee_approver2:
      type: boolean
      description: |
        Whether to add secondary approver 1 as approver to report when the expense violates policy.
      example: True
    action_add_employee_approver3:
      type: boolean
      description: |
        Whether to add secondary approver 2 as approver to report when the expense violates policy.
      example: True
    action_add_project_approver1:
      type: boolean
      description: |
        Whether to add project approver 1 as approver to report when the expense violates policy.
      example: True
    action_add_project_approver2:
      type: boolean
      description: |
        Whether to add project approver 2 as approver to report when the expense violates policy.
      example: True
    action_add_department_head_approver:
      type: boolean
      description: |
        Whether to add department head as approver to report when the expense violates policy.
      example: True
    action_cap_amount:
      type: boolean
      description: |
        Whether to cap the amount to `expense_amount_max` when the expense violates policy.
      example: True
    action_add_approver_user_ids:
      type: array
      description: |
        List of approver user ids to be added to report when the expense violates policy.
      items:
        type: string
      example:
        - usabcds3
        - usabcds4
    action_override_distance_slab_rate:
      type: number
      description: |
        Override the distance slab rate with the set value when the expense violates policy.
      example: 20