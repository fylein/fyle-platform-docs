project_out:
  type: object
  additionalProperties: False
  properties:
    id:
      $ref: './fields.yaml#/id_integer'
    org_id:
      $ref: ./fields.yaml#/org_id
    created_at:
      $ref: ./fields.yaml#/created_at
    updated_at:
      $ref: ./fields.yaml#/updated_at
    name:
      type: string
      maxLength: 255
      description: Represents the name of the project.
      example: Fast and Furious
    sub_project:
      type: string
      nullable: true
      maxLength: 255
      description: Represents the name of the sub_project.
      example: Formula One
    code:
      $ref: ./fields.yaml#/code
    display_name:
      type: string
      maxLength: 513
      description: |
        This is a combination of name and sub_project separated by a / and spaces.
        In case if no sub_project is present it is same as name of the project.
      example: Fast and Furious / Formula One
    description:
      $ref: ./fields.yaml#/description
    is_enabled:
      $ref: ./fields.yaml#/is_enabled
      items:
        type: integer
    category_ids:
      type: array
      nullable: true
      items:
        type: integer
        example: 16570
      description: List of categories that are applicable for the project.

project_out_embed:
  type: object
  nullable: true
  additionalProperties: False
  properties:
    id:
      $ref: './fields.yaml#/id_integer'
    name:
      type: string
      maxLength: 255
      description: Represents the name of the project.
      example: Fast and Furious
    sub_project:
      type: string
      nullable: true
      maxLength: 255
      description: Represents the name of the sub_project.
      example: Formula One
    code:
      $ref: ./fields.yaml#/code
    display_name:
      type: string 
      example: Fast and Furious / Formula One
      description: |
        This is a combination of name and sub_project separated by a / and spaces.
        In case if no sub_project is present it is same as name of the project.

project_in:
  type: object
  additionalProperties: False
  required:
    - name
  properties:
    id:
      $ref: './fields.yaml#/id_integer'
    name:
      type: string
      maxLength: 255
      description: Represents the name of the project.
      example: Fast and Furious
    sub_project:
      nullable: True
      type: string
      maxLength: 255
      description: Represents the name of the sub_project.
      example: Formula One
    code:
      $ref: ./fields.yaml#/code
    description:
      $ref: ./fields.yaml#/description
    is_enabled:
      $ref: ./fields.yaml#/is_enabled
    restricted_spender_user_ids:
      type: array
      nullable: True
      items:
        type: string
        nullable: False
        maxLength: 15
        description: |
          This id is provided by Fyle to identify an object.
        example: 'uswoirwlwwg'
      example: [ 'uswoirwlwwg', 'uswlgwkgw42' ]
      description: |
        - List of IDs of users who can access this object.
        - `null` value indicates that all users in the org can access this object.
        - `[]` value indicates that no users in the org can access this object.
    approver_user_ids:
      allOf:
        - $ref: './fields.yaml#/approver_user_ids'
      description: |
        - List of IDs of users who are approvers of the project.
        - Either `approver_user_ids` or `approver_emails` can be used but not both.
        - The default value for approver_user_ids is `[]` and it is applicable only when creating the project.
    approver_emails:
      type: array
      maxItems: 2
      nullable: False
      items:
        type: string
        # format: email
        maxLength: 127
        nullable: True
        example: john.doe@example.com
        description: >
          An immutable field that represents the email address of the employee.

          Must be compliant with <a href='https://www.ietf.org/rfc/rfc822.txt'>RFC
          822.</a>
      example: [ 'approver1@example.com', 'approver2@example.com' ]
      description: |
        - List of emails of employees that are approvers for the project.
        - Either `approver_user_ids` or `approver_emails` can be used but not both.
        - The default value for approver_emails is `[]` and it is applicable only when creating the project.
    category_ids:
      type: array
      nullable: True
      items:
        $ref: './fields.yaml#/id_integer'
      example: [ 87291, 78322, 492 ]
      description: |
        - List of IDs of categories which can be used with the project.
        - `null` value indicates that all categories in the org are applicable for the project.
        - `[]` value indicates that no category in the org is applicable for the project.
        - The default value of `category_ids` is `null`

admin_approver_project_out:
  type: object
  additionalProperties: False
  properties:
    id:
      $ref: './fields.yaml#/id_integer'
    org_id:
      $ref: ./fields.yaml#/org_id
    created_at:
      $ref: ./fields.yaml#/created_at
    updated_at:
      $ref: ./fields.yaml#/updated_at
    name:
      type: string
      maxLength: 255
      description: Represents the name of the project.
      example: Fast and Furious
    sub_project:
      type: string
      nullable: true
      maxLength: 255
      description: Represents the name of the sub_project.
      example: Formula One
    code:
      $ref: ./fields.yaml#/code
    display_name:
      type: string
      maxLength: 513
      description: |
        This is a combination of name and sub_project separated by a / and spaces.
        In case if no sub_project is present it is same as name of the project.
      example: Fast and Furious / Formula One
    description:
      $ref: ./fields.yaml#/description
    is_enabled:
      $ref: ./fields.yaml#/is_enabled
    restricted_spender_user_ids:
      $ref: './fields.yaml#/restricted_spender_user_ids'
    approver_user_ids:
      $ref: './fields.yaml#/approver_user_ids'
    approver_users:
      type: array
      nullable: True
      items:
        $ref: ./user.yaml#/user_out_embed
      description: |
        List of users who are approvers for this project.
    category_ids:
      type: array
      nullable: true
      items:
        type: integer
        example: 16570
      description: List of categories that are applicable for the project.
