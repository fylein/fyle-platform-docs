get:
  tags:
    - Expenses
  summary: List expenses
  description: |
    This API gets expenses assigned to you to approve.

    This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
  operationId: expenses_list
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                $ref: '../../components/schemas/count.yaml'
              offset:
                $ref: '../../components/schemas/offset.yaml'
              data:
                type: array
                items:
                  $ref: '../../components/schemas/expense.yaml#/expense_out'
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/400.yaml
    '401':
      description: Unauthorized request
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/401.yaml'

post:
 tags:
   - Expenses
 summary: Update an expense
 description: |
   Approver can update an expense already reported by an employee. Please note that the expense in `APPROVER_PENDING` or `APPROVED` state for the approver to be able to update it.
 operationId: expenses_post
 requestBody:
   required: true
   content:
     application/json:
       schema:
         type: object
         properties:
           data:
             $ref: '../../components/schemas/expense.yaml#/approver_expense_in'
 responses:
   '200':
     description: OK
     content:
       application/json:
         schema:
           type: object
           properties:
             data:
               $ref: '../../components/schemas/expense.yaml#/expense_out'
   '400':
     description: Bad request
     content:
       application/json:
         schema:
           $ref: '../../components/schemas/400.yaml'
   '401':
     description: Unauthorized request
     content:
       application/json:
         schema:
           $ref: '../../components/schemas/401.yaml'
   '403':
     description: Forbidden
     content:
       application/json:
         schema:
           $ref: '../../components/schemas/403.yaml'
   '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/404.yaml'
