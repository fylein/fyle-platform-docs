get:
  tags:
    - Projects
  summary: List projects
  operationId: projects_list
  description: |
    This API supports very rich filtering on all response fields and pagination via query parameters. To understand how to use these parameters, please see the [Guide to Data APIs](https://docs.fylehq.com/docs/fyle-platform-docs/ZG9jOjI3Mzk2NTM3-guide-to-data-ap-is#filtering)
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
            - count
            - offset
            - data
            additionalProperties: False
            properties:
              count:
                $ref: ../../components/schemas/count.yaml
              offset:
                $ref: ../../components/schemas/offset.yaml
              data:
                type: array
                items:
                  $ref: ../../components/schemas/project.yaml#/admin_project_out
    '401':
      description: Unauthorized request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/401.yaml
# post:
#   operationId: projects_post
#   tags:
#     - Projects
#   summary: Create or update a project
#   description: |
#     Create or update a project.
#   requestBody:
#     required: true
#     content:
#       application/json:
#         schema:
#           type: object
#           additionalProperties: False
#           required:
#             - data
#           properties:
#             data:
#               $ref: ../../components/schemas/project.yaml#/project_in
#   responses:
#     '200':
#       description: OK
#       content:
#         application/json:
#           schema:
#             type: object
#             additionalProperties: False
#             required:
#               - data
#             properties:
#               data:
#                 $ref: ../../components/schemas/project.yaml#/admin_project_out
#     '400':
#       description: Bad request
#       content:
#         application/json:
#           schema:
#             $ref: ../../components/schemas/400.yaml
#     '401':
#       description: Unauthorized request
#       content:
#         application/json:
#           schema:
#             $ref: ../../components/schemas/401.yaml
#     '403':
#       description: Forbidden
#       content:
#         application/json:
#           schema:
#             $ref: ../../components/schemas/403.yaml
